//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface IGCameraLogger : NSObject
{
}

+ (void)logTapForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 userID:(id)arg4 category:(id)arg5 subcategory:(id)arg6 uploadStep:(long long)arg7;
+ (void)logPreviewForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 userID:(id)arg4 category:(id)arg5 subcategory:(id)arg6 uploadStep:(long long)arg7;
+ (void)logImpressionForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 userID:(id)arg4 category:(id)arg5 subcategory:(id)arg6 uploadStep:(long long)arg7;
+ (void)logRemoveStickerWithUserID:(id)arg1 stickerID:(id)arg2 extraData:(id)arg3;
+ (void)logApplyStickerWithUserID:(id)arg1 stickerID:(id)arg2 extraData:(id)arg3;
+ (void)logGalleryExitWithSwipeWithUserID:(id)arg1;
+ (void)logGalleryExitWithTapWithUserID:(id)arg1;
+ (void)logGalleryEnterSwipeWithUserID:(id)arg1;
+ (void)logGallerySelectMediaWithUserID:(id)arg1 mediaType:(long long)arg2 extraMediaData:(struct IGCameraLoggerExtraMediaData)arg3;
+ (void)logGalleryEnterButtonTapWithUserID:(id)arg1;
+ (void)logAREffectImpressionWithUserID:(id)arg1 effectID:(id)arg2 attributionUserID:(id)arg3 index:(long long)arg4 surface:(long long)arg5 cameraPosition:(long long)arg6;
+ (void)logFaceDetectedWithUserID:(id)arg1 cameraPosition:(long long)arg2 surface:(long long)arg3 appliedEffectID:(id)arg4 indicesForEffectsIDs:(id)arg5 faceCount:(long long)arg6;
+ (void)logAREffectAppliedWithUserID:(id)arg1 cameraPosition:(long long)arg2 captureType:(long long)arg3 surface:(long long)arg4 mediaSource:(long long)arg5 mediaType:(long long)arg6 appliedEffectID:(id)arg7 attributionUserID:(id)arg8 indicesForEffectsIDs:(id)arg9 extraData:(id)arg10;
+ (void)logAREffectButtonShownWithUserID:(id)arg1 surface:(long long)arg2;
+ (void)logTapAREffectButtonWithUserID:(id)arg1 surface:(long long)arg2;
+ (void)logAREffectApplicatorDidFailToLoadSegmentationModelsForUserID:(id)arg1 extraData:(id)arg2;
+ (void)logAREffectApplicatorDidFailToLoadFacetrackerModelsForUserID:(id)arg1 extraData:(id)arg2;
+ (void)logScreenshotWithUserID:(id)arg1;
+ (void)logMediaFaceDetectionFinishedWithUserID:(id)arg1 mediaType:(long long)arg2 surface:(long long)arg3 didDetectFace:(_Bool)arg4 didDetectFaceInFirstFrame:(_Bool)arg5;
+ (void)logRemoveBusinessPartnerWithUserID:(id)arg1 businessID:(id)arg2;
+ (void)logTagBusinessPartnerWithUserID:(id)arg1 businessID:(id)arg2;
+ (void)logColorFilterAppliedWithUserID:(id)arg1 appliedEffectID:(id)arg2 indicesForEffectsIDs:(id)arg3;
+ (void)logShareMediaWithUserID:(id)arg1 mediaSource:(long long)arg2 mediaType:(long long)arg3 cameraPosition:(long long)arg4 captureType:(long long)arg5 shareDestination:(long long)arg6 preCaptureAppliedEffectIDs:(id)arg7 postCaptureAppliedEffectIDs:(id)arg8 attributionUserIDs:(id)arg9 indicesForEffectsIDs:(id)arg10 extraData:(id)arg11;
+ (void)logTapRecipientPickerButtonWithUserID:(id)arg1;
+ (void)logSaveToCameraRollWithUserID:(id)arg1 mediaType:(long long)arg2 captureType:(long long)arg3 preCaptureAppliedEffectIDs:(id)arg4 postCaptureAppliedEffectIDs:(id)arg5 attributionUserIDs:(id)arg6 indicesForEffectsIDs:(id)arg7;
+ (void)logTapPostCaptureExitButtonWithUserID:(id)arg1;
+ (void)logCameraLiveRemoveQuestionWithUserID:(id)arg1;
+ (void)logCameraLiveSelectQuestionWithUserID:(id)arg1 questionText:(id)arg2;
+ (void)logCameraStartQuestionTraySessionWithUserID:(id)arg1 questionCount:(long long)arg2;
+ (void)logCameraLiveQuestionButtonImpressionWithUserID:(id)arg1 badgeQuestionCount:(long long)arg2;
+ (void)logTapFlashButtonWithUserID:(id)arg1 lightingMode:(long long)arg2;
+ (void)logTapCameraExitButtonWithUserID:(id)arg1;
+ (void)logTapSettingsButtonWithUserID:(id)arg1;
+ (void)logTapMuteButtonWithUserID:(id)arg1 isMuted:(_Bool)arg2;
+ (void)logTapCaptureButtonWithUserID:(id)arg1 captureType:(long long)arg2 mediaType:(long long)arg3;
+ (void)logCameraSwitchDoubleTapWithUserID:(id)arg1 cameraPosition:(long long)arg2;
+ (void)logCameraSwitchTapButtonWithUserID:(id)arg1 cameraPosition:(long long)arg2;
+ (void)logCameraCaptureWithUserID:(id)arg1 mediaType:(long long)arg2 cameraPosition:(long long)arg3 captureType:(long long)arg4 appliedEffectIDs:(id)arg5 indicesForEffectsIDs:(id)arg6 extraData:(id)arg7;
+ (void)logSelectFormatWithUserID:(id)arg1 captureType:(long long)arg2;
+ (void)logMoreInfoSheetRemoveDenyWithUserID:(id)arg1 appliedEffectIDs:(id)arg2;
+ (void)logMoreInfoSheetRemoveConfirmWithUserID:(id)arg1 appliedEffectIDs:(id)arg2;
+ (void)logMoreInfoSheetReportDenyWithUserID:(id)arg1 appliedEffectIDs:(id)arg2;
+ (void)logMoreInfoSheetReportConfirmWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 reportType:(long long)arg3;
+ (void)logMoreInfoSheetTapViewLicensingWithUserID:(id)arg1 appliedEffectIDs:(id)arg2;
+ (void)logMoreInfoSheetSessionEndWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 surface:(long long)arg3;
+ (void)logMoreInfoSheetSessionStartWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 surface:(long long)arg3;
+ (void)logEndDoodleSessionWithUserID:(id)arg1 doodleData:(struct IGCameraLoggerDoodleData)arg2;
+ (void)logStartDoodleSessionWithUserID:(id)arg1;
+ (void)logTextOverlaysWithUserID:(id)arg1 textOverlays:(id)arg2;
+ (void)logEndTextSessionWithUserID:(id)arg1 text:(id)arg2;
+ (void)logStartTextSessionWithUserID:(id)arg1;
+ (void)logEndAREffectsTraySessionWithUserID:(id)arg1 surface:(long long)arg2 entryPoint:(unsigned long long)arg3;
+ (void)logStartAREffectsTraySessionWithUserID:(id)arg1 surface:(long long)arg2 indicesForEffectsIDs:(id)arg3 entryPoint:(unsigned long long)arg4;
+ (void)logAREffectLinkFailed:(id)arg1 userID:(id)arg2;
+ (void)logEndGallerySessionWithUserID:(id)arg1;
+ (void)logStartGallerySessionWithUserID:(id)arg1;
+ (void)logEndAddCallToActionSessionWithUserID:(id)arg1 withLinkType:(id)arg2;
+ (void)logStartAddCallToActionSessionWithUserID:(id)arg1 withCandidateLinkTypes:(id)arg2;
+ (void)logEndPostCaptureSessionWithUserID:(id)arg1;
+ (void)logStartPostCaptureSessionWithUserID:(id)arg1 indicesForEffectsIDs:(id)arg2;
+ (void)logEndPreCaptureSessionWithUserID:(id)arg1;
+ (void)logStartPreCaptureSessionWithUserID:(id)arg1;
+ (void)logEndCameraSessionWithUserID:(id)arg1 exitPoint:(long long)arg2;
+ (void)logStartCameraSessionWithUserID:(id)arg1 entryPoint:(unsigned long long)arg2;
+ (unsigned long long)currentCameraEntryPoint;
+ (id)currentSessionID;

@end

