//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IGNetworkBandwidthRecorderListener.h"
#import "IGNetworkLayer.h"
#import "IGNetworkOperationConcurrencyObserver.h"

@class IGNetworkingBandwidthRecorder, IGPayloadBasedBandwidthEstimator, NSOperationQueue, NSString;

@interface IGNetworkDispatcher : NSObject <IGNetworkBandwidthRecorderListener, IGNetworkLayer, IGNetworkOperationConcurrencyObserver>
{
    id <IGNetworkLayer> _nextLayer;
    id <IGNetworkingUserSessionAnalyticsLogger> _analyticsLogger;
    id <IGNetworkDispatcherPerformanceLogging> _performanceLogger;
    NSOperationQueue *_queue;
    _Bool _respectsElevatedPrivileges;
    IGPayloadBasedBandwidthEstimator *_payloadBasedBandwidthEstimator;
    CDStruct_17d099a2 _payloadBaseConfiguration;
    IGNetworkingBandwidthRecorder *_bandwidthRecorder;
    id <IGNetworkDispatcherDelegate> _delegate;
}

- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_recordBytesReceived:(long long)arg1 requestPolicy:(id)arg2;
- (void)_updateOperationsQueuePositions;
- (double)_getAvailableBandwidth;
- (void)_executeOperationsIfNeeded;
- (void)_executeOperationsIfNeededUsingConfigProvider:(id)arg1;
- (void)_operationQueueUpdated;
- (void)bandwidthChangedWithBytesReceived:(long long)arg1 overTimeInterval:(double)arg2 totalBandwidthMeasured:(CDStruct_3f75b8dd)arg3;
- (void)setMaxConcurrentOperationCount:(long long)arg1 forTransferRate:(long long)arg2;
- (id)startRequest:(id)arg1 policy:(id)arg2 callbacks:(id)arg3;
- (id)initWithNextLayer:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(id)arg3 bandwidthRecorder:(id)arg4 payloadBasedBandwidthEstimator:(id)arg5 respectsElevatedPrivileges:(_Bool)arg6 payloadBasedConfiguraiton:(CDStruct_17d099a2)arg7 delegate:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

