//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class AVAssetReader, AVAssetTrack, AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, FBDiskVideoRecorderDiskResults, NSArray, NSDictionary, NSError, NSObject<OS_dispatch_queue>, NSString, NSURL;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AdaptiveBitrateBandwidthBasedParameters {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
    int _field6;
};

struct AdaptiveBitrateConfig {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> _field6;
    int _field7;
    double _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field10;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    struct AdaptiveBitrateExperimentalParameters _field19;
    struct AdaptiveBitrateBandwidthBasedParameters _field20;
    _Bool _field21;
    int _field22;
    int _field23;
    double _field24;
    double _field25;
};

struct AdaptiveBitrateExperimentalParameters {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    _Bool _field10;
    int _field11;
    double _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    double _field16;
    int _field17;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioConfig {
    int sampleRate;
    int bitRate;
    int channels;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct BlockHead;

struct CAEAGLLayer {
    Class _field1;
    struct _CALayerIvars _field2;
    struct _CAEAGLNativeWindow *_field3;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CMSampleBufferSmartPtr {
    CDUnknownFunctionPointerType *_field1;
    struct opaqueCMSampleBuffer *_field2;
};

struct CertificatePinner;

struct Device;

struct DiskVideoRecorderConfig {
    int availableSpaceThresholdInMB;
    struct duration<double, std::__1::ratio<1, 1>> checkAvailableSpaceIntervalInSeconds;
    struct duration<double, std::__1::ratio<1, 1>> movieFragmentIntervalInSeconds;
    struct VideoConfig videoConfig;
    struct AudioConfig audioConfig;
    _Bool enablePartialRecordingIfNoEnoughSpace;
    _Bool enableLiveWithDVR;
};

struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
};

struct EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>;

struct ExtraTypedData;

struct FBAnimationPerformanceTrackerConfiguration {
    long long numberOfFrameDropsPerSmallDropEvent;
    long long numberOfFrameDropsPerLargeDropEvent;
    long long maximumNumberOfFrameDrops;
};

struct FBAnimationPerformanceTrackingResult {
    _Bool _field1;
    long long _field2;
    double _field3;
    unsigned long long _field4;
    double _field5;
    unsigned long long _field6;
    double _field7;
    double _field8;
    long long _field9;
    double _field10;
    long long _field11;
};

struct FBBlockTracerXplatDelegate;

struct FBDeviceBatteryInfo {
    long long _field1;
    double _field2;
    _Bool _field3;
};

struct FBMediaTranscodingKitVideoAssetExportParams {
    AVAssetReader *assetReader;
    AVAssetTrack *audioTrack;
    AVAssetTrack *videoTrack;
    id audioOutput;
    id videoOutput;
    AVAssetWriter *assetWriter;
    AVAssetWriterInput *audioInput;
    AVAssetWriterInput *videoInput;
    AVAssetWriterInputPixelBufferAdaptor *pixelBufferAdaptor;
    NSURL *outputURL;
};

struct FBNetworkSpeedTestStatus {
    int _field1;
    double _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct FBPreMainStartupTimeDetails {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
};

struct FBVideoBroadcastBaseSessionParameters {
    struct FBVideoBroadcastSessionTimestampConfig _field1;
    id _field2;
};

struct FBVideoBroadcastSessionLoggingInfo {
    NSString *reason;
    NSError *error;
    _Bool remoteEnded;
};

struct FBVideoBroadcastSessionStats {
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    double _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_1b6d18a9 _field8;
    CDStruct_1b6d18a9 _field9;
    double _field10;
    double _field11;
    unsigned long long _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    double _field16;
    long long _field17;
    unsigned long long _field18;
    unsigned long long _field19;
    unsigned long long _field20;
    unsigned long long _field21;
    unsigned long long _field22;
    unsigned long long _field23;
    unsigned long long _field24;
    _Bool _field25;
    _Bool _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned long long _field29;
    unsigned long long _field30;
    unsigned long long _field31;
    unsigned long long _field32;
};

struct FBVideoBroadcastSessionTimestampConfig {
    _Bool shiftTimestampBase;
    _Bool collapseGapsInAudio;
    _Bool collapseGapsInVideo;
};

struct FBVideoBroadcastStreamTimestampGapDetector {
    CDStruct_1b6d18a9 _lastAudioPTS;
    CDStruct_1b6d18a9 _lastAudioDuration;
    CDStruct_1b6d18a9 _accumulatedGap;
    long long _gapCounter;
};

struct FNFDashConfig {
    long long qualitySelectorPipeline[5];
    _Bool abrQualitySelectorLowerBitrateCachedChoicesEnabled;
    double abrBandwidthFraction;
    _Bool abrBandwidthFractionPerBandwidthQualityEnabled;
    double abrBandwidthFractionForExcellent;
    double abrBandwidthFractionForGood;
    double abrBandwidthFractionForModerate;
    double abrBandwidthFractionForPoor;
    double abrBandwidthFractionForUnknown;
    double abrBandwidthPenaltyPerRequest;
    _Bool abrIncludeAudioBitrate;
    double abrPlayerSizeMultiplierForCell;
    double abrPlayerSizeMultiplierForWifi;
    _Bool enableStrictAbrPlayerSize;
    _Bool enableAbrPlayerSizeFallback;
    _Bool sigmoidFractionPerBandwidthQualityEnabled;
    double sigmoidMinBandwidthEstimateForQualityUnknown;
    double sigmoidMinBandwidthEstimateForQualityPoor;
    double sigmoidMinBandwidthEstimateForQualityModerate;
    double sigmoidMinBandwidthEstimateForQualityGood;
    double sigmoidMinBandwidthEstimateForQualityExcellent;
    double sigmoidMaxBandwidthEstimateForQualityUnknown;
    double sigmoidMaxBandwidthEstimateForQualityPoor;
    double sigmoidMaxBandwidthEstimateForQualityModerate;
    double sigmoidMaxBandwidthEstimateForQualityGood;
    double sigmoidMaxBandwidthEstimateForQualityExcellent;
    double sigmoidFractionBiasForQualityUnknown;
    double sigmoidFractionGainForQualityUnknown;
    double sigmoidFractionOffsetForQualityUnknown;
    double sigmoidFractionWidthForQualityUnknown;
    double sigmoidFractionBiasForQualityPoor;
    double sigmoidFractionGainForQualityPoor;
    double sigmoidFractionOffsetForQualityPoor;
    double sigmoidFractionWidthForQualityPoor;
    double sigmoidFractionBiasForQualityModerate;
    double sigmoidFractionGainForQualityModerate;
    double sigmoidFractionOffsetForQualityModerate;
    double sigmoidFractionWidthForQualityModerate;
    double sigmoidFractionBiasForQualityGood;
    double sigmoidFractionGainForQualityGood;
    double sigmoidFractionOffsetForQualityGood;
    double sigmoidFractionWidthForQualityGood;
    double sigmoidFractionBiasForQualityExcellent;
    double sigmoidFractionGainForQualityExcellent;
    double sigmoidFractionOffsetForQualityExcellent;
    double sigmoidFractionWidthForQualityExcellent;
    _Bool disableBandwidthFractionZeroClamping;
    _Bool abrSwitchSmoothingEnabled;
    double lowSmoothingSizeThreshold;
    long long minSamplesBeforeUpSwitchLow;
    long long minSamplesBeforeUpSwitchHigh;
    double minBufferSizeInSecondsForBufferThresholdAbr;
    _Bool buffThreshAbrFallbackIfInvalidEnabled;
    _Bool buffThreshAbrFallbackPlaybackTimeTooHighEnabled;
    int fetchSizeInChunkCountForInitial;
    int fetchSizeLowInSecondForCell;
    int fetchSizeHighInSecondForCell;
    int fetchSizeLowInSecondForWifi;
    int fetchSizeHighInSecondForWifi;
    int fetchSizeHighThresholdInChunkCount;
    int fetchSizePerRequestInChunkCount;
    double stallThresholdInSeconds;
    double initialUnstallThresholdInSeconds;
    double unstallThresholdInSeconds;
    _Bool unstallThresholdsPerBandwidthQualityEnabled;
    double initialUnstallThresholdInSecondsForExcellent;
    double initialUnstallThresholdInSecondsForGood;
    double initialUnstallThresholdInSecondsForModerate;
    double initialUnstallThresholdInSecondsForPoor;
    double initialUnstallThresholdInSecondsForUnknown;
    double unstallThresholdInSecondsForExcellent;
    double unstallThresholdInSecondsForGood;
    double unstallThresholdInSecondsForModerate;
    double unstallThresholdInSecondsForPoor;
    double unstallThresholdInSecondsForUnknown;
    _Bool disableUpdateTimeLoadedWhenInStall;
    int liveStaleMpdCountThreshold;
    int liveMaxTimelineCount;
    int liveMaxSegmentedTimelineCount;
    _Bool liveRemoveUnfetchedTimelinesAtPause;
    int mpdAvailabilityEndTimePaddingInMinute;
    _Bool headerChunkCountMismatchCheckEnabled;
    _Bool dashVideoTypeCheckEnabled;
    _Bool liveAbsoluteTimeCheckEnabled;
    _Bool liveVideoInitialPtsOffsetEnabled;
    _Bool skipExpirationCheckWithStaticMpd;
    _Bool liveFetchManifestWhenStartRefresh;
    double liveOverlappedParallelFetchingFraction;
    _Bool liveSetFullyDownloadedWhenStatic;
    _Bool liveEndStreamOn410Error;
    _Bool liveDedupPlaylistRequestsWith304;
    double liveManifestTimeoutSeconds;
    double livePredictiveManifestTimeoutSeconds;
    _Bool liveManifestOptimisticRefresh;
    _Bool enableVp9;
    _Bool enableOpus;
    int prefetchSegmentCount;
    _Bool loadAudioBeforeVideo;
    double lowBufferBandwidthFraction;
    _Bool enableAudioIBR;
    _Bool lazyLoadAudioTrack;
    _Bool enableDrm;
    _Bool startLiveDrmAfterLicenseLoaded;
    _Bool shouldRefactorPsshProcess;
    _Bool enablePredictiveDash;
    _Bool livePredictive410EndsBroadcast;
    _Bool useAllPredictive;
    int numPredictiveSegments;
    _Bool useStreamingCache;
    _Bool allowMisalignedManifests;
    _Bool lowLatencyEnableCDN;
    _Bool livePredictiveABREnabledOnStdLive;
    int livePredictiveABRDownBufferMs;
    int livePredictiveABRServerLatencyMs;
    int livePredictiveABRUpBufferMs;
    int livePredictiveABRUpRetryIntervalMs;
    int livePredictiveABRMaxSingleCycleDepletionMs;
    double livePredictiveABRTtfbRatio;
    _Bool livePredictiveABRLimitCellular;
    _Bool livePredictiveAbrUpOnLiveHead;
    _Bool parseAllSegmentsAsPredictive;
    _Bool enableRoundingInDashFetcher;
    _Bool alignUnfetchedSequenceIndex;
};

struct FNFDashWebmCluster {
    CDUnknownFunctionPointerType *_vptr$Callback;
    struct ThinReader _reader;
    struct Parser _parser;
    struct queue<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::deque<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>>> _frames;
    unsigned int _block_timecode;
    _Bool _is_key_frame;
    unsigned long long _current_frame_index;
    unsigned long long _current_frame_count;
};

struct FNFDashWebmSegment {
    CDUnknownFunctionPointerType *_vptr$Callback;
    struct ThinReader _reader;
    struct Parser _parser;
    unsigned long long _offset;
    unsigned long long _size;
    struct vector<std::__1::tuple<unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long>>> _cue_points;
    _Bool _ebml_valid;
    struct Info *_info;
    struct Track *_track;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    long long _field4;
    CDStruct_1b6d18a9 _field5;
    unsigned int _field6;
};

struct FNFMP4MehdAtom {
    int duration;
};

struct FNFMP4MoofAtom;

struct FNFMP4MoovAtom {
    struct FNFMP4MvhdAtom mvhdAtom;
    struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> trakAtoms;
    struct FNFMP4MvexAtom mvexAtom;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MoovAtomProvider {
    struct FNFMP4MoovAtom _moovAtom;
    unsigned long long _moovAtomSize;
    struct FNFMP4SidxAtom _sidxAtom;
    vector_3f0a0d0c _moofAtoms;
    _Bool _parseRotationAtoms;
    _Bool _parseHVC1Atoms;
};

struct FNFMP4MvexAtom {
    struct FNFMP4MehdAtom mehdAtom;
    struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> trexAtoms;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
    float rotationAngle;
};

struct FNFMP4SidxAtom {
    unsigned int timescale;
    struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> segments;
};

struct FNFMP4SidxSegment;

struct FNFMP4TrakAtom;

struct FNFMP4TrakAtomForSeek;

struct FNFMP4TrexAtom;

struct FNFPlayerInternalState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    _Bool isReadyForDisplay;
    _Bool previousSeekCompletionBlockExecuted;
    CDStruct_1b6d18a9 currentTime;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 lastRequestedStartTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    float lastPlayRate;
    float playRate;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id seekFrameUpdateObserver;
    id sampleBufferFlushTimerObserver;
    id levelMeterTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
    NSString *representationId;
    unsigned long long lastFrameSeekAttempt;
    long long status;
    struct FNFPlayerStallState stallState;
    struct CGRect bounds;
    CDUnknownBlockType frameSeekCompletionBlock;
    NSError *playerItemWarning;
    NSError *playerItemError;
    NSArray *playerItemLoadedTimeRanges;
    CDStruct_1b6d18a9 playerItemDuration;
};

struct FNFPlayerStallState {
    _Bool isStalled;
    _Bool isStartStall;
    unsigned long long stallTimeInMilliseconds;
};

struct FNFPlayerState {
    long long _field1;
    struct FNFPlayerStallState _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    CDStruct_1b6d18a9 _field7;
    CDStruct_1b6d18a9 _field8;
    CDStruct_1b6d18a9 _field9;
    id _field10;
    float _field11;
    id _field12;
    id _field13;
    struct CGRect _field14;
    id _field15;
    id _field16;
    id _field17;
    CDStruct_1b6d18a9 _field18;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct Frame;

struct IBuffer;

struct ICommandQueue;

struct IDevice {
    CDUnknownFunctionPointerType *_field1;
};

struct IGAssetNetworkerRetryParams {
    long long maxRetries;
    long long minTimeBetweenRetries;
    long long maxTimeBetweenRetries;
};

struct IGAssetNetworkerRetryState {
    long long numAttemptsCompleted;
    double timeToRetry;
};

struct IGAttitudeSample;

struct IGCameraLoggerDoodleData {
    _Bool _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct IGCameraLoggerExtraMediaData {
    double _field1;
    long long _field2;
    double _field3;
    double _field4;
};

struct IGCompositionFilterTransform {
    struct CGPoint scale;
    struct CGPoint translation;
    double rotation;
};

struct IGConfigurationPayload {
    NSDictionary *configurations;
};

struct IGConfigurationStore {
    struct _opaque_pthread_mutex_t _storeLock;
    struct unordered_map<IGConfigurationStoreKey, IGConfigurationParameterValue, std::__1::hash<IGConfigurationStoreKey>, std::__1::equal_to<IGConfigurationStoreKey>, std::__1::allocator<std::__1::pair<const IGConfigurationStoreKey, IGConfigurationParameterValue>>> _store;
    struct unordered_set<NSString *, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<NSString *>> _storeReadConfigurations;
    struct _opaque_pthread_mutex_t _payloadLock;
    struct IGConfigurationPayload _payload;
};

struct IGFeatureMap<IGExperimentParameters> {
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _parametersReader;
    CDUnknownBlockType _serverNameReader;
    struct unordered_map<NSString *, IGExperimentParameters, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<std::__1::pair<NSString *const, IGExperimentParameters>>> _readParameters;
    struct unordered_set<NSString *, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<NSString *>> _expiredFeatures;
    _Bool _wantsColdStart;
};

struct IGFrameSample {
    double _field1;
    double _field2;
};

struct IGGyroSample;

struct IGListCollectionScrollingTraits {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct IGListSectionEntry;

struct IGMediaUploadSegmentedUploaderOptions {
    _Bool skipStatusFetch;
    _Bool useCheckpointing;
};

struct IGOrientationSample;

struct IGOverlayViewTapInfo {
    struct CGPoint center;
    struct CGSize size;
    double rotation;
    long long zIndex;
};

struct IGQuickPerformanceLoggerDelegate;

struct IGRegion {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
};

struct ITexture;

struct Info;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct JKParseToken _field10;
    struct JKObjectStack _field11;
    struct JKTokenCache _field12;
    struct JKObjCImpCache _field13;
    id _field14;
    int _field15;
    _Bool _field16;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct LiveTraceConfig {
    _Bool _field1;
    int _field2;
    int _field3;
};

struct LoggingDelegate;

struct LowLatencyConfig {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct MultipleEncodersConfig {
    _Bool _field1;
    struct VideoConfig _field2;
    int _field3;
    int _field4;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct POPAnimatorItem;

struct Parser {
    struct Frame *_stack;
    struct BlockHead *_block_head;
};

struct PartialReliabilityConfig {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct PlatformDevice {
    CDUnknownFunctionPointerType *_field1;
    struct Device *_field2;
    struct __CVMetalTextureCache *_field3;
};

struct PointData;

struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>;

struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
};

struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *>;

struct QuickPerformanceLogger;

struct QuickPerformanceLoggerBase;

struct QuickPerformanceLoggerDelegate;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SimpleVideoRecorder;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct ThinReader {
    CDUnknownFunctionPointerType *_vptr$Reader;
    unsigned long long _stream_offset;
    unsigned long long _num_bytes_remaining;
    char *_buffer;
};

struct ThroughputMonitorConfig {
    double _field1;
};

struct Track;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VideoConfig {
    int width;
    int height;
    int bitRate;
    double dataRateToTargetRateRatio;
    int fps;
    _Bool allowBFrames;
    int keyFrameIntervalFrames;
    int keyFrameIntervalSeconds;
    _Bool useMainProfile;
    unsigned char codecType;
};

struct YGValue {
    float _field1;
    int _field2;
};

struct _CAEAGLNativeWindow;

struct _CALayerIvars {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct _GLKMatrix4 {
    float m[16];
};

struct _GLKVector2 {
    float _field1[2];
};

struct _GLKVector3 {
    float v[3];
};

struct _IGWeakUnorderedMap<id<IGViewpointTrackable>, NSMutableSet<IGViewpointAction *>*, void, void, void> {
    struct __hash_table<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, std::__1::__unordered_map_hasher<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>::Hash, true>, std::__1::__unordered_map_equal<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>::Equal, true>, std::__1::allocator<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>::Hash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>::Equal, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __hash_node_base<std::__1::__hash_node<NSString *, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<NSString *, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*> *_field1;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct circular_buffer<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *m_buff;
    struct IGGyroSample *m_end;
    struct IGGyroSample *m_first;
    struct IGGyroSample *m_last;
    unsigned long long m_size;
};

struct deque<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>> {
    struct __split_buffer<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>*, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>*>> {
        struct tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> **__first_;
        struct tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> **__begin_;
        struct tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> **__end_;
        struct __compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>**, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>*>> {
            struct tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>> {
        unsigned long long __value_;
    } __size_;
};

struct duration<double, std::__1::ratio<1, 1>> {
    double __rep_;
};

struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
};

struct function<void (_xmlNode *)> {
    struct type _field1;
    struct __base<void (_xmlNode *)> *_field2;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<double, boost::qvm::quat<double>, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, boost::qvm::quat<double>>>> {
    struct __tree<std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, boost::qvm::quat<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, boost::qvm::quat<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct node {
    struct _xmlNode *_field1;
    struct function<void (_xmlNode *)> _field2;
};

struct opaqueCMSampleBuffer;

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>;

struct quat<double> {
    double _field1[4];
};

struct queue<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::deque<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>>> {
    struct deque<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>>> c;
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct shared_ptr<FB::Functional::PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *>> {
    PromiseEither_ab4a425c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> {
    struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FBBlockTracerXplatDelegate> {
    struct FBBlockTracerXplatDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const std::__1::vector<__weak id, std::__1::allocator<__weak id>>> {
    struct vector<__weak id, std::__1::allocator<__weak id>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::ExtraTypedData> {
    struct ExtraTypedData *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::perflogger::LoggingDelegate> {
    struct LoggingDelegate *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::PointData> {
    struct PointData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerDelegate> {
    struct QuickPerformanceLoggerDelegate *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::ICommandQueue> {
    struct ICommandQueue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::ITexture> {
    struct ITexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<instagram::perflogger::IGQuickPerformanceLoggerDelegate> {
    struct IGQuickPerformanceLoggerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct tuple<unsigned long long, unsigned long long, unsigned long long, bool, std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>;

struct tuple<unsigned long long, unsigned long long>;

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<const std::__1::unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>>, std::__1::default_delete<const std::__1::unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>>>> {
    struct __compressed_pair<const std::__1::unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>>*, std::__1::default_delete<const std::__1::unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>>>> {
        unordered_map_a764cb8e *__value_;
    } __ptr_;
};

struct unique_ptr<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>, std::__1::default_delete<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>>> {
    struct __compressed_pair<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>*, std::__1::default_delete<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>>> {
        struct EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>> *__value_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::CertificatePinner, std::__1::default_delete<proxygen::httpclient::CertificatePinner>> {
    struct __compressed_pair<proxygen::httpclient::CertificatePinner *, std::__1::default_delete<proxygen::httpclient::CertificatePinner>> {
        struct CertificatePinner *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<NSString *, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IG::_IGUnorderedMapWeakKeyWrapper<id<IGViewpointTrackable>>, NSMutableSet<IGViewpointAction *>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<IGConfigurationStoreKey, IGConfigurationParameterValue, std::__1::hash<IGConfigurationStoreKey>, std::__1::equal_to<IGConfigurationStoreKey>, std::__1::allocator<std::__1::pair<const IGConfigurationStoreKey, IGConfigurationParameterValue>>> {
    struct __hash_table<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, std::__1::__unordered_map_hasher<IGConfigurationStoreKey, std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, std::__1::hash<IGConfigurationStoreKey>, true>, std::__1::__unordered_map_equal<IGConfigurationStoreKey, std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, std::__1::equal_to<IGConfigurationStoreKey>, true>, std::__1::allocator<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<IGConfigurationStoreKey, std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, std::__1::hash<IGConfigurationStoreKey>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<IGConfigurationStoreKey, std::__1::__hash_value_type<IGConfigurationStoreKey, IGConfigurationParameterValue>, std::__1::equal_to<IGConfigurationStoreKey>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<IGResourceType, IGExecutingResourceOperationSet *, std::__1::hash<IGResourceType>, std::__1::equal_to<IGResourceType>, std::__1::allocator<std::__1::pair<const IGResourceType, IGExecutingResourceOperationSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, std::__1::__unordered_map_hasher<IGResourceType, std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, std::__1::hash<IGResourceType>, true>, std::__1::__unordered_map_equal<IGResourceType, std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, std::__1::equal_to<IGResourceType>, true>, std::__1::allocator<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<IGResourceType, std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, std::__1::hash<IGResourceType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<IGResourceType, std::__1::__hash_value_type<IGResourceType, IGExecutingResourceOperationSet *>, std::__1::equal_to<IGResourceType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*, std::__1::hash<IGResourceType>, std::__1::equal_to<IGResourceType>, std::__1::allocator<std::__1::pair<const IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>>> {
    struct __hash_table<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::__unordered_map_hasher<IGResourceType, std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::hash<IGResourceType>, true>, std::__1::__unordered_map_equal<IGResourceType, std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::equal_to<IGResourceType>, true>, std::__1::allocator<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<IGResourceType, std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::hash<IGResourceType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<IGResourceType, std::__1::__hash_value_type<IGResourceType, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::equal_to<IGResourceType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*, std::__1::hash<NSOperationQueuePriority>, std::__1::equal_to<NSOperationQueuePriority>, std::__1::allocator<std::__1::pair<const NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>>> {
    struct __hash_table<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::__unordered_map_hasher<NSOperationQueuePriority, std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::hash<NSOperationQueuePriority>, true>, std::__1::__unordered_map_equal<NSOperationQueuePriority, std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::equal_to<NSOperationQueuePriority>, true>, std::__1::allocator<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSOperationQueuePriority, std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::hash<NSOperationQueuePriority>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSOperationQueuePriority, std::__1::__hash_value_type<NSOperationQueuePriority, NSMutableArray<IGQueuedRequestOperation *>*>, std::__1::equal_to<NSOperationQueuePriority>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, IGExperimentParameters, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<std::__1::pair<NSString *const, IGExperimentParameters>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, IGExperimentParameters>, FB::ObjcHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, IGExperimentParameters>, FB::ObjcEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, IGExperimentParameters>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGExperimentParameters>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, IGExperimentParameters>, FB::ObjcHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, IGExperimentParameters>, FB::ObjcEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, IGPrefetchState, NSStringHash, NSStringEqual, std::__1::allocator<std::__1::pair<NSString *const, IGPrefetchState>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, IGPrefetchState>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, IGPrefetchState>, NSStringHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, IGPrefetchState>, NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, IGPrefetchState>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, IGPrefetchState>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, IGPrefetchState>, NSStringHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, IGPrefetchState>, NSStringEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<NSString *, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<NSString *>> {
    struct __hash_table<NSString *, FB::ObjcHash, FB::ObjcEqual, std::__1::allocator<NSString *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSString *, void *>*>, std::__1::allocator<std::__1::__hash_node<NSString *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<NSString *, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, FB::ObjcHash> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, FB::ObjcEqual> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
};

struct vector<CMTime, std::__1::allocator<CMTime>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<CMTime *, std::__1::allocator<CMTime>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__begin_;
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__end_;
    struct __compressed_pair<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>*, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
        struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__value_;
    } __end_cap_;
};

struct vector<FNFDashFrameMetadata, std::__1::allocator<FNFDashFrameMetadata>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FNFDashFrameMetadata *, std::__1::allocator<FNFDashFrameMetadata>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__value_;
    } __end_cap_;
};

struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> {
    struct FNFMP4SidxSegment *__begin_;
    struct FNFMP4SidxSegment *__end_;
    struct __compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment>> {
        struct FNFMP4SidxSegment *__value_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> {
    struct FNFMP4TrakAtom *__begin_;
    struct FNFMP4TrakAtom *__end_;
    struct __compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom>> {
        struct FNFMP4TrakAtom *__value_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__value_;
    } __end_cap_;
};

struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> {
    struct FNFMP4TrexAtom *__begin_;
    struct FNFMP4TrexAtom *__end_;
    struct __compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom>> {
        struct FNFMP4TrexAtom *__value_;
    } __end_cap_;
};

struct vector<IGAttitudeSample, std::__1::allocator<IGAttitudeSample>> {
    struct IGAttitudeSample *__begin_;
    struct IGAttitudeSample *__end_;
    struct __compressed_pair<IGAttitudeSample *, std::__1::allocator<IGAttitudeSample>> {
        struct IGAttitudeSample *__value_;
    } __end_cap_;
};

struct vector<IGFrameSample, std::__1::allocator<IGFrameSample>> {
    struct IGFrameSample *__begin_;
    struct IGFrameSample *__end_;
    struct __compressed_pair<IGFrameSample *, std::__1::allocator<IGFrameSample>> {
        struct IGFrameSample *__value_;
    } __end_cap_;
};

struct vector<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *__begin_;
    struct IGGyroSample *__end_;
    struct __compressed_pair<IGGyroSample *, std::__1::allocator<IGGyroSample>> {
        struct IGGyroSample *__value_;
    } __end_cap_;
};

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__value_;
    } __end_cap_;
};

struct vector<IGOrientationSample, std::__1::allocator<IGOrientationSample>> {
    struct IGOrientationSample *__begin_;
    struct IGOrientationSample *__end_;
    struct __compressed_pair<IGOrientationSample *, std::__1::allocator<IGOrientationSample>> {
        struct IGOrientationSample *__value_;
    } __end_cap_;
};

struct vector<__weak id, std::__1::allocator<__weak id>>;

struct vector<boost::qvm::quat<double>, std::__1::allocator<boost::qvm::quat<double>>> {
    quat_f7c121b3 *__begin_;
    quat_f7c121b3 *__end_;
    struct __compressed_pair<boost::qvm::quat<double>*, std::__1::allocator<boost::qvm::quat<double>>> {
        quat_f7c121b3 *__value_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<double, double>, std::__1::allocator<std::__1::pair<double, double>>> {
    pair_b2618ff2 *__begin_;
    pair_b2618ff2 *__end_;
    struct __compressed_pair<std::__1::pair<double, double>*, std::__1::allocator<std::__1::pair<double, double>>> {
        pair_b2618ff2 *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *_field1;
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>*, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
        struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
    shared_ptr_9c840082 *__begin_;
    shared_ptr_9c840082 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>*, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
        shared_ptr_9c840082 *__value_;
    } __end_cap_;
};

struct vector<std::__1::tuple<unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long>>> {
    struct tuple<unsigned long long, unsigned long long> *__begin_;
    struct tuple<unsigned long long, unsigned long long> *__end_;
    struct __compressed_pair<std::__1::tuple<unsigned long long, unsigned long long>*, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long>>> {
        struct tuple<unsigned long long, unsigned long long> *__value_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>>;

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
} CDStruct_5476a51c;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    unsigned int _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    Class _field10;
    _Bool _field11;
    _Bool _field12;
} CDStruct_b6254f9e;

typedef struct {
    _Bool isEnabled;
    long long movingAverageCapacity;
    double movingAverageIntervalGap;
    double movingAverageExponentDegree;
    double minMeasurementThreshold;
} CDStruct_4562051d;

typedef struct {
    unsigned long long requestPrivilege;
    unsigned long long requestPrivilegeType;
} CDStruct_e8b93ac9;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double fieldOfView;
    double aspectRatio;
    double gyroDelay;
    double shutterSpeed;
    char gyroOrientation[3];
} CDStruct_c91b0ade;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
} CDStruct_4bf883ae;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double parallaxAmount;
} CDStruct_56f37252;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long totalBytesReceived;
    double totalTimeInMS;
} CDStruct_3f75b8dd;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long onScreenPriority;
    long long offScreenPriority;
    unsigned long long maxOnScreenCap;
    unsigned long long maxOffScreenCap;
} CDStruct_59cbe9bf;

typedef struct {
    long long concurrencyType;
    long long imageConcurrency;
    long long videoConcurrency;
    long long singularConcurrency;
} CDStruct_c83c15db;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    _Bool isPayloadBasedDispatcherEnabled;
    CDStruct_4562051d payloadBasedBandwidthConfiguration;
    double minBandwidthThreshold;
    double maxBandwidthThreshold;
    double bandwidthMultiplier;
    double availableBandwidth;
    unsigned long long maxNumberOfLowPriorityRequests;
} CDStruct_17d099a2;

typedef struct {
    long long _field1;
    CDStruct_183601bc **_field2;
} CDStruct_96ee9b75;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    CDStruct_59cbe9bf api;
    CDStruct_59cbe9bf image;
    CDStruct_59cbe9bf imageMedia;
    CDStruct_59cbe9bf video;
    CDStruct_59cbe9bf analytics;
    unsigned long long maxNumberOfRequests;
    long long maxPriority;
} CDStruct_7a0a8ca8;

typedef struct {
    long long _field1;
    int _field2;
    int _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    int _field8;
    unsigned int _field9;
    _Bool _field10;
    unsigned char _field11[16];
    struct vector<unsigned short, std::__1::allocator<unsigned short>> _field12;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field13;
} CDStruct_25a1edb3;

typedef struct {
    struct DiskVideoRecorderConfig _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    id _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
} CDStruct_af497ddf;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> _field4;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> _field5;
    struct AudioConfig _field6;
    struct VideoConfig _field7;
    struct {
        int _field1;
        int _field2;
        int _field3;
        double _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        unsigned long long _field11;
        double _field12;
        int _field13;
        double _field14;
        _Bool _field15;
        _Bool _field16;
        _Bool _field17;
        _Bool _field18;
        _Bool _field19;
        _Bool _field20;
        _Bool _field21;
        _Bool _field22;
        _Bool _field23;
        id _field24;
        double _field25;
        long long _field26;
        int _field27;
        _Bool _field28;
        _Bool _field29;
        _Bool _field30;
        _Bool _field31;
        _Bool _field32;
        _Bool _field33;
        int _field34;
        _Bool _field35;
    } _field8;
    struct PartialReliabilityConfig _field9;
    struct ThroughputMonitorConfig _field10;
    struct AdaptiveBitrateConfig _field11;
    struct LowLatencyConfig _field12;
    struct DiskVideoRecorderConfig _field13;
    struct MultipleEncodersConfig _field14;
    _Bool _field15;
    struct FBVideoBroadcastSessionTimestampConfig _field16;
    _Bool _field17;
    struct LiveTraceConfig _field18;
    _Bool _field19;
} CDStruct_169bc05e;

// Template types
typedef struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
} Either_4472cfe1;

typedef struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
} PromiseEither_ab4a425c;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
} function_5936182b;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_20bec4f3;

typedef struct map<double, boost::qvm::quat<double>, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, boost::qvm::quat<double>>>> {
    struct __tree<std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, boost::qvm::quat<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, boost::qvm::quat<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_2ddb9c91;

typedef struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_4edb12f9;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct quat<double> {
    double _field1[4];
} quat_f7c121b3;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<facebook::mobile::perflogger::ExtraTypedData> {
    struct ExtraTypedData *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a41bae32;

typedef struct shared_ptr<facebook::mobile::perflogger::LoggingDelegate> {
    struct LoggingDelegate *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b0c9ca8e;

typedef struct shared_ptr<facebook::mobile::perflogger::PointData> {
    struct PointData *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_2121439f;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e62c5e43;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a4177b8a;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerDelegate> {
    struct QuickPerformanceLoggerDelegate *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_977e1777;

typedef struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9c840082;

typedef struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3ca5f01e;

typedef struct shared_ptr<igl::ICommandQueue> {
    struct ICommandQueue *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_2579f451;

typedef struct shared_ptr<igl::ITexture> {
    struct ITexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b95409fc;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct unordered_map<unsigned long, IGActiveModuleItem *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGActiveModuleItem *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGActiveModuleItem *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_a764cb8e;

typedef struct vector<CMTime, std::__1::allocator<CMTime>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<CMTime *, std::__1::allocator<CMTime>> {
        CDStruct_183601bc *_field1;
    } _field3;
} vector_1afa1685;

typedef struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__value_;
    } __end_cap_;
} vector_3f0a0d0c;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<std::__1::pair<double, double>, std::__1::allocator<std::__1::pair<double, double>>> {
    pair_b2618ff2 *__begin_;
    pair_b2618ff2 *__end_;
    struct __compressed_pair<std::__1::pair<double, double>*, std::__1::allocator<std::__1::pair<double, double>>> {
        pair_b2618ff2 *__value_;
    } __end_cap_;
} vector_63c28b85;

#pragma mark Named Unions

union _GLKMatrix2 {
    CDStruct_818bb265 _field1;
    float _field2[2][2];
    float _field3[4];
};

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 _field1;
        float _field2;
    } _field1;
    CDStruct_818bb265 _field2;
    float _field3[4];
};

union _GLKVector2 {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    float _field3[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
    CDStruct_818bb265 _field3;
    float _field4[4];
};

#pragma mark Typedef'd Unions

typedef union {
    struct {
        struct _GLKVector3 v1;
        struct _GLKVector3 v2;
        struct _GLKVector3 v3;
        struct _GLKVector3 v4;
    } ;
    float v[12];
} CDUnion_7d78eca3;

typedef union {
    struct {
        union _GLKVector3 v1;
        union _GLKVector3 v2;
        union _GLKVector3 v3;
        union _GLKVector3 v4;
    } ;
    float v[12];
} CDUnion_a15e9e51;

