//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAsset, FBVideoEdits, FBVideoSegmentedEncoder, FBVideoTranscoderConfig, NSDate, NSDictionary, NSObject<OS_dispatch_queue>, NSURL;

@interface FBVideoSegmentedTranscoder : NSObject
{
    NSURL *_assetURL;
    id <FBVideoTranscoderOutputAdapter> _outputAdapter;
    FBVideoTranscoderConfig *_config;
    NSDictionary *_optionalConfig;
    NSObject<OS_dispatch_queue> *_audioExportQueue;
    NSObject<OS_dispatch_queue> *_videoExportQueue;
    unsigned long long _currentSegment;
    struct FBMediaTranscodingKitVideoAssetExportParams _segmentParams;
    struct FBMediaTranscodingKitVideoAssetExportParams _currentVideoSegmentParams;
    struct FBMediaTranscodingKitVideoAssetExportParams _currentAudioSegmentParams;
    CDStruct_1b6d18a9 _nextSegmentPresentationTime;
    _Bool _cancelled;
    CDUnknownBlockType _segmentReadyBlock;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _imageSampleBlock;
    NSObject<OS_dispatch_queue> *_progressQueue;
    double _totalProgress;
    unsigned long long _progressUpdateIntervalMilliseconds;
    NSDate *_lastProgressUpdateTime;
    id <FBVideoProcessing> _videoProcessor;
    FBVideoEdits *_videoEdits;
    FBVideoSegmentedEncoder *_audioEncoder;
    FBVideoSegmentedEncoder *_videoEncoder;
    _Bool _useMultiPass;
    _Bool _shouldOptimizeForNetworkUse;
    _Bool _shouldSkipEncodeAudio;
    _Bool _enforceMaxSegmentDuration;
    _Bool _outputQuickTimeMovie;
    long long _estimatedOutputFileLength;
    AVAsset *_asset;
    CDStruct_1b6d18a9 _outputDuration;
}

@property(readonly, copy, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
@property(readonly, nonatomic) CDStruct_1b6d18a9 outputDuration; // @synthesize outputDuration=_outputDuration;
@property(readonly, nonatomic) long long estimatedOutputFileLength; // @synthesize estimatedOutputFileLength=_estimatedOutputFileLength;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_finishWritingForWriter:(id)arg1 endSourceTime:(CDStruct_1b6d18a9)arg2 completionCallback:(CDUnknownBlockType)arg3;
- (void)_onVideoSegmentCompleted:(id)arg1 error:(id)arg2 atPresentationTime:(CDStruct_1b6d18a9)arg3 didEncodeFinalSampleOrFailed:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)_startVideoEncodingWithCompletionCallback:(CDUnknownBlockType)arg1;
- (void)_startAudioEncodingWithCompletionCallback:(CDUnknownBlockType)arg1;
- (void)_encodeAudioThenVideo;
- (void)_encodeConcurrently;
- (void)_startEncoding;
- (void)_onComplete:(id)arg1;
- (void)_onSegmentReadyWithURL:(id)arg1 type:(unsigned long long)arg2 endTime:(CDStruct_1b6d18a9)arg3;
- (void)_didUpdatePresentationTime:(CDStruct_1b6d18a9)arg1;
- (void)_safeCallback:(CDUnknownBlockType)arg1;
- (void)cancelExportWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_cancelWriters;
- (CDStruct_1b6d18a9)_nextVideoSegmentDuration;
- (_Bool)_isAudioTrackPresent;
- (_Bool)_shouldExportAudio;
- (_Bool)_shouldSegmentOutput;
- (_Bool)_shouldFragmentOutput;
- (_Bool)_prepareNextVideoSegment:(id *)arg1;
- (_Bool)_setupVideoExport:(id *)arg1;
- (_Bool)_prepareNextAudioSegment:(id *)arg1;
- (_Bool)_setupAudioExport:(id *)arg1;
- (long long)streamingUnsafeEOFBytes;
- (_Bool)isStreaming;
@property(readonly, nonatomic) unsigned long long sourceFrameRate;
- (long long)estimatedFileSize;
- (void)transcodeWithStartPresentationTime:(CDStruct_1b6d18a9)arg1 segmentIdx:(unsigned long long)arg2 shouldSkipEncodeAudio:(_Bool)arg3 progress:(CDUnknownBlockType)arg4 onSegmentReady:(CDUnknownBlockType)arg5 onImageSample:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7 progressQueue:(id)arg8;
- (void)transcodeWithProgress:(CDUnknownBlockType)arg1 onSegmentReady:(CDUnknownBlockType)arg2 onImageSample:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_updateCropRect:(id)arg1 forAsset:(id)arg2;
- (id)initWithAsset:(id)arg1 outputAdapter:(id)arg2 videoEdits:(id)arg3 config:(id)arg4 videoProcessor:(id)arg5 optionalConfig:(id)arg6;

@end

