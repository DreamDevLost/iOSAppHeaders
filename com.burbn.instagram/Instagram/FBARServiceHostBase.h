//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FBARCameraCapabilitiesProviding.h"
#import "FBARServiceConfigurationProvider.h"
#import "FBARServiceHosting.h"
#import "NSSecureCoding.h"

@class FBARLogger, FBARServiceHostEffect, FBARSessionRecordingConfiguration, NSHashTable, NSString;

@interface FBARServiceHostBase : NSObject <NSSecureCoding, FBARCameraCapabilitiesProviding, FBARServiceConfigurationProvider, FBARServiceHosting>
{
    NSHashTable *_controllers;
    struct mutex _controllersMutex;
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _experimentConfig;
    struct shared_ptr<facebook::cameracore::arclass::ARClassContext> _ARClassContext;
    struct shared_ptr<msqrd::player::ISessionPlayer> _sessionPlayer;
    struct ServiceCreatorRegistry _serviceCreatorRegistry;
    struct shared_ptr<msqrd::servicehost::ServiceHost> _xplatServiceHost;
    shared_ptr_2811b282 _performanceLogger;
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _engineAnalyticsLogger;
    unique_ptr_5f6b9c32 _pluginConfig;
    struct shared_ptr<facebook::bufferpool::BufferPool> _pixelBufferPool;
    id <FBAROpenGLTextureCreating> _currentGLTextureCreator;
    unsigned char _optimizationMode;
    FBARLogger *_logger;
    id <FBARAnalyticsLogging> _analyticsLogger;
    unsigned long long _supportedCameraCapabilities;
    FBARSessionRecordingConfiguration *_sessionRecordingConfiguration;
    FBARServiceHostEffect *_currentEffect;
    id <FBARServiceHostBasePermissionsDelegate> _permissionsDelegate;
}

+ (_Bool)supportsSecureCoding;
+ (id)newWithLogger:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(shared_ptr_2811b282)arg3 experimentConfiguration:(id)arg4 ARClassSource:(id)arg5 supportedCameraCapabilities:(unsigned long long)arg6 sessionRecordingConfiguration:(id)arg7;
+ (id)newWithLogger:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(shared_ptr_2811b282)arg3 experimentConfiguration:(id)arg4 ARClassSource:(id)arg5 supportedCameraCapabilities:(unsigned long long)arg6;
+ (id)newWithLogger:(id)arg1;
+ (unique_ptr_5f6b9c32)newPluginConfig;
@property(nonatomic) __weak id <FBARServiceHostBasePermissionsDelegate> permissionsDelegate; // @synthesize permissionsDelegate=_permissionsDelegate;
@property(nonatomic) unsigned char optimizationMode; // @synthesize optimizationMode=_optimizationMode;
@property(retain, nonatomic) FBARServiceHostEffect *currentEffect; // @synthesize currentEffect=_currentEffect;
@property(readonly, nonatomic) FBARSessionRecordingConfiguration *sessionRecordingConfiguration; // @synthesize sessionRecordingConfiguration=_sessionRecordingConfiguration;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities; // @synthesize supportedCameraCapabilities=_supportedCameraCapabilities;
@property(readonly, nonatomic) id <FBARAnalyticsLogging> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) FBARLogger *logger; // @synthesize logger=_logger;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)configurationForServiceType:(const struct ServiceType *)arg1;
@property(readonly, nonatomic) struct IPluginConfiguration *pluginConfig;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) shared_ref_855019a2 networkClientSource;
- (void)didDetachFromController:(id)arg1;
- (void)willAttachToController:(id)arg1;
- (void)_updateLoomTracingForEffect:(id)arg1;
- (void)notifyServicesThatPermissionsAreReadyForEffectWithManifest:(const struct Manifest *)arg1;
- (void)preparePermissionsForEffectWithManifest:(const struct Manifest *)arg1;
- (void)didFinishRenderingFrame;
- (void)willStartRenderingFrame;
- (void)cleanupAllServices;
- (void)resetAllServices;
- (void)updateAudioServiceWithAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 volumeLevel:(float)arg2;
- (void)updateServicesWithLockedPixelBuffer:(shared_ref_ee0a2387)arg1 textureCreator:(id)arg2 outputSize:(const struct FBAREngineOutputSize *)arg3;
- (void)updateServicesWithPixelBuffer:(struct __CVBuffer *)arg1 bufferPresentationTime:(CDStruct_1b6d18a9)arg2 textureCreator:(id)arg3 imageMetadata:(const struct ImageMetadata *)arg4 outputSize:(const struct FBAREngineOutputSize *)arg5;
- (shared_ref_344acd93)prepareServicesForEffect:(id)arg1;
- (void)preloadServicesForConfiguration:(id)arg1;
@property(readonly, nonatomic) Optional_515d19e0 serviceAnalyticsLogger;
@property(readonly, nonatomic) Optional_933f6e43 bufferPoolStatisticsLogger;
@property(readonly, nonatomic) Optional_cc3bfe46 renderTimeLogger;
@property(readonly, nonatomic) shared_ref_49fe85fd ARClassContext;
@property(readonly, nonatomic) shared_ref_5cdfb9eb experimentConfig;
@property(readonly, nonatomic) shared_ref_c3a6841c engineAnalyticsLogger;
@property(readonly, nonatomic) shared_ptr_2811b282 performanceLogger;
@property(readonly, nonatomic) shared_ref_f3fa7b41 engineServiceHost;
@property(readonly, nonatomic) id <FBAROpenGLTextureCreating> currentGLTextureCreator;
- (struct ServiceCreatorRegistry)newServiceCreatorRegistry;
- (void)dealloc;
- (id)initWithLogger:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(shared_ptr_2811b282)arg3 rawEventLogger:(shared_ref_81919347)arg4 experimentConfiguration:(id)arg5 ARClassSource:(id)arg6 supportedCameraCapabilities:(unsigned long long)arg7 effectSessionListener:(Optional_5fae1a92)arg8 dataSnapshotterCreator:(Optional_bb731cbb)arg9 sessionRecordingConfiguration:(id)arg10;
- (id)initWithLogger:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(shared_ptr_2811b282)arg3 experimentConfiguration:(id)arg4 ARClassSource:(id)arg5 sessionPlayer:(shared_ref_d7b05e06)arg6;
- (id)initWithLogger:(id)arg1 analyticsLogger:(id)arg2 performanceLogger:(shared_ptr_2811b282)arg3 experimentConfiguration:(id)arg4 ARClassSource:(id)arg5 supportedCameraCapabilities:(unsigned long long)arg6 sessionRecordingConfiguration:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

