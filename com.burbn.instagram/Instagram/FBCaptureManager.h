//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"
#import "FBAudioBufferHandler.h"
#import "FBCameraCaptureManaging.h"
#import "FBCaptureAudioSessionControlling.h"
#import "FBCaptureLowLightDetectorDelegate.h"
#import "FBCaptureSessionRuntimeErrorDelegate.h"
#import "FBCaptureSessionStateDelegate.h"
#import "FBCaptureVideoSessionControlling.h"

@class AVCaptureAudioDataOutput, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureVideoPreviewLayer, FBAVAudioDataProducer, FBAVPOIDataProducer, FBAVQRDataProducer, FBAVVideoDataProducer, FBAudioCapturer, FBCameraAudioLevelListenerAnnouncer, FBCameraCaptureFrameDropQueuedAnnouncer, FBCameraCaptureManagingProducerPorts, FBCameraProductionDebugLogger, FBCaptureDevice, FBCaptureDeviceStateController, FBCaptureLowLightDetector, FBCaptureManagerEventQueuedAnnouncer, FBCaptureManagerFeatureConfiguration, FBCapturePOIDetector, FBCaptureSession, FBCaptureVideoDataOutput, FBFramePerformanceTracker, FBSystemCaptureDeviceObserver, NSArray, NSDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface FBCaptureManager : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, FBAudioBufferHandler, FBCaptureSessionStateDelegate, FBCaptureSessionRuntimeErrorDelegate, FBCaptureLowLightDetectorDelegate, FBCaptureVideoSessionControlling, FBCaptureAudioSessionControlling, FBCameraCaptureManaging>
{
    FBCameraCaptureManagingProducerPorts *_producerPorts;
    FBCaptureManagerEventQueuedAnnouncer *_eventAnnouncer;
    NSObject<OS_dispatch_queue> *_audioBufferQueue;
    AVCaptureAudioDataOutput *_audioDataOutput;
    AVCaptureDeviceInput *_audioDeviceInput;
    FBAudioCapturer *_audioCapturer;
    FBAVAudioDataProducer *_audioDataProducer;
    id <FBSystemAudioCaptureSessionInteracting> _systemAudioCaptureSessionInteractor;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    NSObject<OS_dispatch_queue> *_audioSessionQueue;
    id <FBCaptureOutput> _photoCaptureOutput;
    struct opaqueCMSampleBuffer *_latestVideoSampleBuffer;
    struct mutex _latestVideoSampleBufferMutex;
    NSObject<OS_dispatch_queue> *_videoBufferQueue;
    NSObject<OS_dispatch_queue> *_videoDataOutputQueue;
    FBCaptureVideoDataOutput *_videoDataOutput;
    FBAVVideoDataProducer *_videoDataProducer;
    FBAVQRDataProducer *_QRCodeDataProducer;
    FBAVPOIDataProducer *_POIDataProducer;
    AVCaptureDevice *_currentSystemCaptureDevice;
    FBCaptureDeviceStateController *_captureDeviceStateController;
    struct FBCameraConfiguration _configuration;
    FBCaptureManagerFeatureConfiguration *_featureConfiguration;
    FBCaptureLowLightDetector *_lowLightDetector;
    FBCapturePOIDetector *_POIDetector;
    FBSystemCaptureDeviceObserver *_systemCaptureDeviceObserver;
    double _defaultDisplayBrightness;
    NSString *_normalLightPreset;
    long long _designatedCameraDeviceFPS;
    long long _designatedFlashMode;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    NSDictionary *_analyticsAnnotations;
    _Bool _isCaptureSessionFinishedLoading;
    BOOL _cameraSessionStartFlag;
    FBCameraProductionDebugLogger *_debugLogger;
    FBFramePerformanceTracker *_framePerformanceTracker;
    id <FBCameraActionPerformanceLoggerProviding> _cameraActionPerformanceLogger;
    NSObject<OS_dispatch_queue> *_loggerQueue;
    FBFramePerformanceTracker *_framePerformanceTrackerForWaterfall;
    id <FBCameraAnalyticsPayloadProviding> _analyticsPayloadProvider;
    FBCameraCaptureFrameDropQueuedAnnouncer *_frameDropAnnouncer;
    id <FBCameraStartPerformanceLoggerProviding> _cameraStartPerformanceLogger;
    id <FBOrientationTracking> _orientationTracker;
    long long _currentVideoOrientation;
    FBCaptureSession *_captureSession;
    AVCaptureDeviceInput *_videoDeviceInput;
}

@property(retain, nonatomic) AVCaptureDeviceInput *videoDeviceInput; // @synthesize videoDeviceInput=_videoDeviceInput;
@property(retain, nonatomic) FBCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property long long currentVideoOrientation; // @synthesize currentVideoOrientation=_currentVideoOrientation;
@property(readonly, nonatomic) id <FBOrientationTracking> orientationTracker; // @synthesize orientationTracker=_orientationTracker;
@property(readonly, nonatomic) id <FBCameraStartPerformanceLoggerProviding> cameraStartPerformanceLogger; // @synthesize cameraStartPerformanceLogger=_cameraStartPerformanceLogger;
@property(readonly, nonatomic) FBCameraCaptureFrameDropQueuedAnnouncer *frameDropAnnouncer; // @synthesize frameDropAnnouncer=_frameDropAnnouncer;
@property(readonly, nonatomic) id <FBCameraAnalyticsPayloadProviding> analyticsPayloadProvider; // @synthesize analyticsPayloadProvider=_analyticsPayloadProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (future_388bbd79)hitTestWithPoint:(const Matrix_adcc7caa *)arg1 typeOption:(const bitset_13ab97e2 *)arg2;
- (void)removeAllSLAMTrackables;
-     // Error parsing type: v24@0:8r^{ARTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}}16, name: removeSLAMTrackable:
-     // Error parsing type: {ARPointTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}B}24@0:8r^{ARPointTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}B}16, name: addSLAMPointTrackable:
- (void)_warmup;
- (void)warmupCameraWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)warmupCameraSystemResources;
- (void)lowLightDetector:(id)arg1 didChangeToCondition:(long long)arg2;
- (void)captureSession:(id)arg1 didEncounterRuntimeError:(id)arg2 willRetry:(_Bool)arg3;
- (void)captureSessionDidStopRunning:(id)arg1;
- (void)captureSessionDidStartRunning:(id)arg1;
- (void)captureSessionDidResignInterrupted:(id)arg1;
- (void)captureSession:(id)arg1 didBecomeInterruptedWithReason:(unsigned char)arg2;
@property(readonly, nonatomic) id <FBMPProducerPort> worldTrackingDataPort;
@property(readonly, nonatomic) id <FBMPProducerPort> userInterfacePort;
@property(readonly, nonatomic) id <FBMPProducerPort> qrCodeProducerPort;
@property(readonly, nonatomic) id <FBMPProducerPort> audioProducerPort;
@property(readonly, nonatomic) id <FBMPProducerPort> videoProducerPort;
- (void)invalidate;
- (void)sessionDisconnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionConnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionWillStop:(id)arg1;
- (void)sessionWillStart:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *producerPorts;
- (void)pauseCameraCaptureSession;
- (void)startCameraCaptureSessionWithType:(unsigned char)arg1 context:(id)arg2 deviceConfiguration:(id)arg3 initialCameraAction:(id)arg4 completionQueue:(id)arg5 completion:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) id <FBCaptureAudioSessionControlling> audioSessionController;
@property(readonly, nonatomic) id <FBCaptureVideoSessionControlling> videoSessionController;
- (void)_subjectAreaDidChange:(id)arg1;
- (void)_stopSubjectAreaChangeMonitoring:(id)arg1 willDiscardDevice:(_Bool)arg2;
- (void)_startSubjectAreaChangeMonitoring:(id)arg1;
- (_Bool)_isInLowLightMode;
- (_Bool)_setLowLightModeEnabled:(_Bool)arg1;
- (id)_sessionPresetWithLowLightModeEnabled:(_Bool)arg1;
- (void)_rotateImageToVideoOrientation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_setCurrentCaptureDevice:(id)arg1 announceUpdates:(_Bool)arg2;
- (void)_updateDefaultVideoOrientation;
- (void)_updateDefaultVideoOrientationAndMirrorSettings;
- (void)_updateConnectionMirrorSettings;
- (void)restartVideoSession;
- (void)resumeSession;
- (void)pauseSession;
@property(readonly, nonatomic, getter=isVideoSessionRunning) _Bool videoSessionRunning;
@property(readonly, nonatomic) struct OpaqueCMClock *videoSessionClock;
- (void)enableEditingMicrophoneVolume:(_Bool)arg1 volumeMultiplier:(double)arg2;
- (void)_stopAudioSession;
- (void)stopAudioSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startAudioSessionWithCompletion:(CDUnknownBlockType)arg1 enableEchoCancellation:(_Bool)arg2;
- (void)startAudioSessionWithEchoCancellationEnabled:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isAudioSessionRunning) _Bool audioSessionRunning;
@property(readonly, nonatomic) struct OpaqueCMClock *audioSessionClock;
- (void)_endSessionWithLoggingInfo:(const struct FBCameraEventLoggingInfo *)arg1;
- (void)_stopSession;
- (void)_didFinishStartingCaptureSessionWithType:(unsigned char)arg1;
- (void)_configureAudioSessionInputOutput;
- (void)_configureVideoDataOutputConnection:(id)arg1;
- (void)_configureVideoSessionInputOutput;
- (void)_configureCaptureSessionWithDeviceConfiguration:(id)arg1;
- (void)_doStartCaptureSessionWithDeviceConfiguration:(id)arg1 performanceLogger:(id)arg2;
- (void)_startCaptureSessionWithType:(unsigned char)arg1 deviceConfiguration:(id)arg2 performanceLogger:(id)arg3;
- (void)_startSessionIfNeededWithType:(unsigned char)arg1 deviceConfiguration:(id)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_completeSuccessfulCaptureImageAction:(id)arg1 photo:(id)arg2 videoBufferSize:(struct CGSize)arg3;
- (void)_completeFailedCaptureImageAction:(id)arg1 error:(id)arg2;
- (void)_completeCaptureImageAction:(id)arg1 photo:(id)arg2;
- (void)_startCaptureImageWithAction:(id)arg1;
- (void)_captureImageFromPreviewWithAction:(id)arg1;
- (_Bool)_shouldCaptureImageFromPreview;
- (void)performImageCaptureWithAction:(id)arg1;
- (struct CGSize)_videoBufferSize;
- (long long)_trackerTargetFPS;
- (void)_updateDeviceFrameRate;
- (void)_ensureCaptureDeviceIsCreatedForConfiguration:(id)arg1;
- (void)_createAudioCapturerWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1;
- (void)_handleVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 fromConnection:(id)arg2;
@property(readonly, nonatomic) unsigned long long currentVideoBufferTransform;
- (void)_updateLatestVideoSampleBufferWithSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)_didDetectCode:(id)arg1;
- (void)_didDetectFaceWithBounds:(struct CGRect)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)handleAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 averagePowerLevel:(float)arg2;
@property(readonly, nonatomic) FBCameraAudioLevelListenerAnnouncer *cameraAudioLevelAnnouncer;
- (_Bool)supportsCaptureSessionPreset:(id)arg1 cameraPosition:(long long)arg2;
- (_Bool)currentDeviceSupportsCaptureSessionPreset:(id)arg1;
- (_Bool)canUpdateCaptureDevicePosition:(long long)arg1;
- (_Bool)isExposureModeSupported:(long long)arg1;
- (_Bool)isFocusModeSupported:(long long)arg1;
- (_Bool)isTorchModeSupported:(long long)arg1;
- (_Bool)isZoomFactorSupported:(double)arg1;
- (double)supportedZoomFactorFromZoomFactor:(double)arg1;
@property(readonly, nonatomic) double maxZoomFactor;
@property(readonly, nonatomic) CDStruct_15fe95f0 validExposureValues;
@property(readonly, nonatomic, getter=isAdjustingCameraSettings) _Bool adjustingCameraSettings;
- (void)fetchVideoFieldOfViewWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct OpaqueCMClock *captureSessionClock;
@property(readonly, nonatomic) CDStruct_62455522 exposureInfo;
@property(readonly, nonatomic) FBCaptureDevice *currentDevice;
- (id)videoDataOutput;
- (id)photoCaptureOutput;
- (id)audioDeviceInput;
- (id)audioDataOutput;
- (void)_switchToDeviceWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setVideoOrientation:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setLightSettings:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setLowLightModeEnabled:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setShouldFrontCameraVideoMirred:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setZoomFactor:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setExposureSettingsFromAction:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setFocusSettings:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setTorchMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setSessionPreset:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setScaledPoint:(struct CGPoint)arg1 debugBoundingBox:(struct CGRect)arg2 enablePOIDetector:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)_setFrameRate:(long long)arg1;
- (void)_setFrameRate:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setFlashMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setCaptureDevicePosition:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestChangeToCameraCapabilities:(unsigned long long)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long requestedCameraCapabilities;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities;
- (id)videoPreviewLayer;
- (void)performCameraAction:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performCameraAction:(id)arg1;
- (void)removeCaptureManagerListener:(id)arg1;
- (void)addCaptureManagerListener:(id)arg1;
- (void)dealloc;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 captureSession:(id)arg5 cameraActionPerformanceLogger:(id)arg6 cameraStartPerformanceLogger:(id)arg7 framePerformanceTracker:(id)arg8 featureConfiguration:(id)arg9 framePerformanceTrackerForWaterfall:(id)arg10 analyticsPayloadProvider:(id)arg11 producerPorts:(id)arg12 captureDeviceStateController:(id)arg13 systemAudioCaptureSessionInteractor:(id)arg14;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 captureSession:(id)arg5 cameraActionPerformanceLogger:(id)arg6 cameraStartPerformanceLogger:(id)arg7 framePerformanceTracker:(id)arg8 featureConfiguration:(id)arg9 framePerformanceTrackerForWaterfall:(id)arg10 analyticsPayloadProvider:(id)arg11 systemAudioCaptureSessionInteractor:(id)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

