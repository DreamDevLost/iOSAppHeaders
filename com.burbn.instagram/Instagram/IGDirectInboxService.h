//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IGDirectRealtimeIrisSubscriptionHandlerListener.h"
#import "IGUserSessionObject.h"

@class FBExponentialBackoffTimer, IGDirectCache, IGDirectInboxServiceBadgeCountValidator, IGDirectInboxServiceFetchInput, IGDirectInboxServiceFetchLogger, IGDirectInboxServiceListenerAnnouncer, IGDirectRealtimeIrisSubscriptionHandler, IGUserSession, NSDate, NSString;

@interface IGDirectInboxService : NSObject <IGDirectRealtimeIrisSubscriptionHandlerListener, IGUserSessionObject>
{
    IGUserSession *_userSession;
    IGDirectCache *_directCache;
    id <IGAPIClient> _networker;
    IGDirectRealtimeIrisSubscriptionHandler *_irisSubscriptionHandler;
    IGDirectInboxServiceListenerAnnouncer *_inboxServiceListenerAnnouncer;
    IGDirectInboxServiceBadgeCountValidator *_badgeCountValidator;
    IGDirectInboxServiceFetchLogger *_inboxServiceLogger;
    FBExponentialBackoffTimer *_backoffTimer;
    CDUnknownBlockType _shouldUseCrossAppBadgingInfraProvider;
    id <IGDirectInboxRequestProviding> _inboxRequestProvider;
    long long _inboxLoadingState;
    IGDirectInboxServiceFetchInput *_latestFetchInput;
    NSDate *_oldestThreadLastActivity;
    NSDate *_lastInboxSnapshotTimeForRateLimiting;
    _Bool _shouldUseCrossAppBadgingInfra;
}

- (void).cxx_destruct;
- (_Bool)_fetchInputIsFromLatestTriggeredFetch:(id)arg1;
- (_Bool)_shouldIgnoreFetchResultForFetchInput:(id)arg1;
- (_Bool)_didReachAgeLimitForFilteredPaging;
- (id)_pagingCursorForCurrentThreadState;
- (void)irisSubscriptionHandlerRequiresResnapshot;
- (void)irisSubscriptionHandlerDidConnectAtSequenceId:(id)arg1 latestServerSequenceId:(id)arg2;
- (void)irisSubscriptionHandlerWillConnectAtSequenceId:(id)arg1;
- (void)_appWillEnterForegroundNotification:(id)arg1;
- (void)_inboxFetchResultWasIgnoredWithFetchInput:(id)arg1;
- (void)_inboxFetchFromNetworkDidFailWithFetchInput:(id)arg1 httpStatusCode:(long long)arg2 error:(id)arg3 willAutoRetry:(_Bool)arg4;
- (void)_inboxFetchFromNetworkDidSucceedWithFetchInput:(id)arg1 inboxMetadata:(id)arg2 megaphone:(id)arg3 threads:(id)arg4 serverThreads:(id)arg5 serverUnseenCount:(id)arg6;
- (void)_didReceiveInboxFetchPayloadFromNetwork;
- (void)_willTriggerInboxFetchFromNetworkWithFetchInput:(id)arg1;
- (void)_retryFetchAfterBackoff:(CDUnknownBlockType)arg1;
- (void)_handleInboxNetworkResponseWithResponseObject:(id)arg1 fetchType:(unsigned long long)arg2 success:(CDUnknownBlockType)arg3;
- (void)_requestInboxDataFromNetworkWithFetchInput:(id)arg1 autoRetryCount:(long long)arg2 payloadReceivedBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5 resultIgnored:(CDUnknownBlockType)arg6;
- (void)_executeInboxFetchWithFetchInput:(id)arg1 payloadReceivedBlock:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 resultIgnored:(CDUnknownBlockType)arg5;
- (void)_fetchInboxWithFetchReason:(unsigned long long)arg1 threadsFilter:(long long)arg2 inboxCursor:(id)arg3 currentStateAllowsFetch:(_Bool)arg4;
- (void)_fetchInboxWithFetchReason:(unsigned long long)arg1 threadsFilter:(long long)arg2;
- (_Bool)_shouldFetchNextPageForThreadsFilter:(long long)arg1;
- (_Bool)_shouldRateLimitInboxFetch;
- (_Bool)_isTailLoadingInbox;
- (_Bool)_isSnapshottingInbox;
- (_Bool)_inboxHasNextPage;
- (_Bool)_isCacheWarmedUp;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (_Bool)canFetchNextPageForFilters;
- (_Bool)canFetchNextPage;
- (_Bool)canFetchFirstPage;
- (id)serviceState;
- (void)fetchInboxDataWithFetchReason:(unsigned long long)arg1 threadsFilter:(long long)arg2;
- (id)inboxThreadsWithThreadsFilter:(long long)arg1;
- (id)initWithUserSession:(id)arg1 directCache:(id)arg2 networker:(id)arg3 irisSubscriptionHandler:(id)arg4 inboxServiceLogger:(id)arg5 badgeCountValidator:(id)arg6 autoRetryTimer:(id)arg7 shouldUseCrossAppBadgingInfraProvider:(CDUnknownBlockType)arg8 inboxRequestProvider:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

