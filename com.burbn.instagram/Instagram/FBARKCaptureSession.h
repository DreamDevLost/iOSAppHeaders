//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FBARCameraSLAMControlling.h"
#import "FBARKSessionListener.h"
#import "FBCameraCaptureManaging.h"

@class ARSession, FBARKAudioSessionController, FBARKSessionEventAnnouncer, FBARKSessionListenerAnnouncer, FBARKVideoDataProducer, FBARKVideoSessionController, FBARKWorldTrackingDataProducer, FBCameraAudioLevelListenerAnnouncer, FBCameraCaptureFrameDropQueuedAnnouncer, FBCameraCaptureManagingProducerPorts, FBCaptureDevice, FBCaptureDeviceStateController, FBCaptureManagerEventQueuedAnnouncer, FBCaptureManagerFeatureConfiguration, FBFramePerformanceTracker, NSArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface FBARKCaptureSession : NSObject <FBARKSessionListener, FBCameraCaptureManaging, FBARCameraSLAMControlling>
{
    _Bool _sessionRunning;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    NSObject<OS_dispatch_queue> *_videoOutputQueue;
    ARSession *_captureSession;
    NSMutableDictionary *_sessionConfigurations;
    unsigned long long _requestedCameraCapabilities;
    FBARKSessionListenerAnnouncer *_sessionAnnouncer;
    FBARKSessionEventAnnouncer *_sessionEventAnnouncer;
    FBCaptureManagerEventQueuedAnnouncer *_captureManagerEventAnnouncer;
    FBCameraCaptureFrameDropQueuedAnnouncer *_frameDropAnnouncer;
    FBCaptureDeviceStateController *_captureDeviceStateController;
    FBARKVideoSessionController *_videoSessionController;
    FBARKAudioSessionController *_audioSessionController;
    FBCaptureManagerFeatureConfiguration *_featureConfiguration;
    id <FBCameraAnalyticsPayloadProviding> _analyticsPayloadProvider;
    id <FBCameraActionPerformanceLoggerProviding> _cameraActionPerformanceLogger;
    id <FBCameraStartPerformanceLoggerProviding> _cameraStartPerformanceLogger;
    FBFramePerformanceTracker *_framePerformanceTracker;
    NSObject<OS_dispatch_queue> *_videoBufferQueue;
    NSObject<OS_dispatch_queue> *_audioBufferQueue;
    FBCameraCaptureManagingProducerPorts *_producerPorts;
    FBARKVideoDataProducer *_videoDataProducer;
    FBARKWorldTrackingDataProducer *_worldTrackingDataProducer;
    id <FBOrientationTracking> _orientationTracker;
}

@property(readonly, nonatomic) id <FBOrientationTracking> orientationTracker; // @synthesize orientationTracker=_orientationTracker;
- (void).cxx_destruct;
- (void)_handleHitTestWithSession:(id)arg1 point:(struct CGPoint)arg2 resultTypes:(unsigned long long)arg3 promise:(const shared_ptr_e0047530 *)arg4;
- (future_388bbd79)hitTestWithPoint:(const Matrix_adcc7caa *)arg1 typeOption:(const bitset_13ab97e2 *)arg2;
- (void)removeAllSLAMTrackables;
-     // Error parsing type: v24@0:8r^{ARTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}}16, name: removeSLAMTrackable:
-     // Error parsing type: {ARPointTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}B}24@0:8r^{ARPointTrackable=^^?{Matrix<float, 4, 4, 0, 4, 4>={DenseStorage<float, 16, 4, 4, 0>={plain_array<float, 16, 0, 16>=[16f]}}}{uuid=[16C]}{SharedMutexImpl<false, void, std::atomic, false, false>={atomic<unsigned int>=AI}}B}16, name: addSLAMPointTrackable:
- (void)requestChangeToCameraCapabilities:(unsigned long long)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long requestedCameraCapabilities;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)_notifySessionStopped;
- (void)_lockedStopSession;
- (void)_stopSession;
- (void)_notifyDidStartSessionOfType:(unsigned char)arg1 withSessionConfiguration:(id)arg2;
- (void)_lockedStartSessionIfNeededWithStartType:(unsigned char)arg1 deviceConfiguration:(id)arg2 performanceLogger:(id)arg3;
- (id)_lockedLoadSessionConfigurationForDeviceConfiguration:(id)arg1;
- (void)_startSessionIfNeededWithType:(unsigned char)arg1 deviceConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)videoPreviewLayer;
- (void)warmupCameraWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)warmupCameraSystemResources;
- (void)_finishImageCaptureForAction:(id)arg1 withVideoData:(id)arg2 loggingInfo:(const struct FBCameraEventLoggingInfo *)arg3;
- (void)_lockedPerformImageCaptureWithAction:(id)arg1;
- (void)performImageCaptureWithAction:(id)arg1;
- (void)performCameraAction:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performCameraAction:(id)arg1;
- (_Bool)supportsCaptureSessionPreset:(id)arg1 cameraPosition:(long long)arg2;
- (_Bool)isFocusModeSupported:(long long)arg1;
- (_Bool)isExposureModeSupported:(long long)arg1;
- (_Bool)isTorchModeSupported:(long long)arg1;
- (_Bool)currentDeviceSupportsCaptureSessionPreset:(id)arg1;
@property(readonly, nonatomic) double maxZoomFactor;
- (void)fetchVideoFieldOfViewWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct OpaqueCMClock *captureSessionClock;
@property(readonly, nonatomic, getter=isAdjustingCameraSettings) _Bool adjustingCameraSettings;
@property(readonly, nonatomic) CDStruct_62455522 exposureInfo;
@property(readonly, nonatomic) FBCaptureDevice *currentDevice;
- (_Bool)isZoomFactorSupported:(double)arg1;
- (double)supportedZoomFactorFromZoomFactor:(double)arg1;
- (_Bool)canUpdateCaptureDevicePosition:(long long)arg1;
- (void)removeCaptureManagerListener:(id)arg1;
- (void)addCaptureManagerListener:(id)arg1;
@property(readonly, nonatomic) CDStruct_15fe95f0 validExposureValues;
- (void)invalidate;
- (void)sessionDisconnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionConnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionWillStop:(id)arg1;
- (void)sessionWillStart:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *producerPorts;
@property(readonly, nonatomic) id <FBMPProducerPort> worldTrackingDataPort;
@property(readonly, nonatomic) id <FBMPProducerPort> userInterfacePort;
@property(readonly, nonatomic) id <FBMPProducerPort> qrCodeProducerPort;
@property(readonly, nonatomic) id <FBMPProducerPort> audioProducerPort;
@property(readonly, nonatomic) id <FBMPProducerPort> videoProducerPort;
@property(readonly, nonatomic) FBCameraAudioLevelListenerAnnouncer *cameraAudioLevelAnnouncer;
- (void)pauseCameraCaptureSession;
- (void)startCameraCaptureSessionWithType:(unsigned char)arg1 context:(id)arg2 deviceConfiguration:(id)arg3 initialCameraAction:(id)arg4 completionQueue:(id)arg5 completion:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) id <FBCameraStartPerformanceLoggerProviding> cameraStartPerformanceLogger;
@property(readonly, nonatomic) FBCameraCaptureFrameDropQueuedAnnouncer *frameDropAnnouncer;
@property(readonly, nonatomic) id <FBCameraAnalyticsPayloadProviding> analyticsPayloadProvider;
@property(readonly, nonatomic) id <FBCaptureAudioSessionControlling> audioSessionController;
@property(readonly, nonatomic) id <FBCaptureVideoSessionControlling> videoSessionController;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 analyticsPayloadProvider:(id)arg5 featureConfiguration:(id)arg6 cameraActionPerformanceLogger:(id)arg7 cameraStartPerformanceLogger:(id)arg8 framePerformanceTracker:(id)arg9 framePerformanceTrackerForWaterfall:(id)arg10 producerPorts:(id)arg11 captureDeviceStateController:(id)arg12 requestedCameraCapabilities:(unsigned long long)arg13;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 analyticsPayloadProvider:(id)arg5 featureConfiguration:(id)arg6 cameraActionPerformanceLogger:(id)arg7 cameraStartPerformanceLogger:(id)arg8 framePerformanceTracker:(id)arg9 framePerformanceTrackerForWaterfall:(id)arg10 requestedCameraCapabilities:(unsigned long long)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

