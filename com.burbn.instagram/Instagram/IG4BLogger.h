//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IG4BAnalyticsEntryExtraData, NSString;

@interface IG4BLogger : NSObject
{
    _Bool _isEligibleLogToFunnel;
    NSString *_waterfallID;
    NSString *_flow;
    NSString *_entryPoint;
    NSString *_step;
    NSString *_module;
    NSString *_sourceID;
    IG4BAnalyticsEntryExtraData *_entryExtraData;
    long long _output;
    NSString *_fbUserID;
}

+ (id)loggerWithLogger:(id)arg1 atStep:(id)arg2 flow:(id)arg3;
+ (id)loggerWithLogger:(id)arg1 fromEntryPoint:(id)arg2 atStep:(id)arg3;
+ (id)loggerWithLogger:(id)arg1 flow:(id)arg2;
+ (id)loggerWithLogger:(id)arg1 atStep:(id)arg2;
@property(readonly, copy, nonatomic) NSString *fbUserID; // @synthesize fbUserID=_fbUserID;
@property(nonatomic) _Bool isEligibleLogToFunnel; // @synthesize isEligibleLogToFunnel=_isEligibleLogToFunnel;
@property(readonly, nonatomic) long long output; // @synthesize output=_output;
@property(readonly, nonatomic) IG4BAnalyticsEntryExtraData *entryExtraData; // @synthesize entryExtraData=_entryExtraData;
@property(readonly, copy, nonatomic) NSString *sourceID; // @synthesize sourceID=_sourceID;
@property(readonly, copy, nonatomic) NSString *module; // @synthesize module=_module;
@property(readonly, copy, nonatomic) NSString *step; // @synthesize step=_step;
@property(readonly, copy, nonatomic) NSString *entryPoint; // @synthesize entryPoint=_entryPoint;
@property(readonly, copy, nonatomic) NSString *flow; // @synthesize flow=_flow;
@property(readonly, copy, nonatomic) NSString *waterfallID; // @synthesize waterfallID=_waterfallID;
- (void).cxx_destruct;
- (_Bool)_isIG4BEventValid:(id)arg1;
- (void)logEventToAnalytics:(id)arg1;
- (void)logEvent:(id)arg1 to:(long long)arg2;
- (void)logEvent:(id)arg1;
- (void)endFlow;
- (void)startFlow;
- (void)updateOutput:(long long)arg1;
- (void)updateFBUserID:(id)arg1;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 entryExtraData:(id)arg3 step:(id)arg4 fbUserId:(id)arg5 waterfallID:(id)arg6 sourceID:(id)arg7 module:(id)arg8 output:(long long)arg9;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 entryExtraData:(id)arg3 step:(id)arg4 fbUserId:(id)arg5 waterfallID:(id)arg6 sourceID:(id)arg7 module:(id)arg8;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 step:(id)arg3 fbUserId:(id)arg4 waterfallID:(id)arg5 sourceID:(id)arg6 module:(id)arg7;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 step:(id)arg3 fbUserId:(id)arg4 module:(id)arg5;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 step:(id)arg3 fbUserId:(id)arg4 waterfallID:(id)arg5 module:(id)arg6;
- (id)initWithFlow:(id)arg1 entrypoint:(id)arg2 step:(id)arg3 module:(id)arg4;
- (id)_getActionPayloadFromEvent:(id)arg1;
- (void)_assertFunnelActionFormatIfNecessary:(id)arg1;
- (_Bool)_needToAssertFunnelActionFormat;
- (void)_addFunnelPayloadBeforeFunnelEnd;
- (id)_getActionTagFromEvent:(id)arg1;
- (id)_getFunnelNameForFlow:(id)arg1;
- (_Bool)shouldLogToFunnel;
- (void)logEventToFunnel:(id)arg1;
- (void)endFunnelForCurrentFlow;
- (void)startFunnelForCurrentFlow;

@end

