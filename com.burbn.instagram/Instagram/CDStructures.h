//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class BKBloksLayoutCache, FBAACEncoder, FBCameraExposureSettings, FBCameraFocusSettings, FBCameraWhiteBalanceSettings, FBDiskVideoRecorderDiskResults, FBMPVideoData, NSError, NSObject<BKBloksModel>, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString, NSURL;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ARClassContext;

struct ARClassSource;

struct AREngineLogger;

struct ARLinkScanner;

struct AdaptiveBitrateAlgorithm;

struct AdaptiveBitrateAlgorithmFactory;

struct AdaptiveBitrateBandwidthBasedParameters {
    int smallQueueSizeMs;
    int bigQueueSizeMs;
    int decreaseBitrateAmountBps;
    int increaseBitrateAmountBps;
    _Bool includeTransportQueueSizeInAbr;
    int timeSinceLastBitrateChangeThresholdMs;
};

struct AdaptiveBitrateConfig {
    _Bool enabled;
    int intervalInVideoFrames;
    int minBitrate;
    int maxBitrate;
    int maxBitrateWifi;
    struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> rules;
    int statisticsWindowSize;
    double statisticsSmoothFactor;
    basic_string_90719d97 abrClassName;
    basic_string_90719d97 abrJS;
    basic_string_90719d97 abrResolutionClassName;
    int videoBitrateThreshold216;
    int videoBitrateThreshold288;
    int videoBitrateThreshold360;
    int videoBitrateThreshold504;
    int videoBitrateThreshold648;
    int videoBitrateThreshold720;
    int videoBitrateThreshold24fps;
    struct AdaptiveBitrateExperimentalParameters experimentalParameters;
    struct AdaptiveBitrateBandwidthBasedParameters bandwidthBasedAbrParameters;
    _Bool useLowLatencyABR;
    int packetLossThresholdForBitrateIncrease;
    int packetLossThresholdForBitrateDecrease;
    double bitrateIncreaseCoefficentPacketLoss;
    double bitrateDecreaseCoefficentPacketLoss;
};

struct AdaptiveBitrateExperimentalParameters {
    int timeSinceLastResolutionChangeThresholdMs;
    int resolutionUpscaleBitratePercent;
    int bitrateReductionPercentOnUpscale;
    int timeSinceLastBitrateIncreaseThresholdMs;
    int increaseBitrateAboveLastKnownGoodBitrate;
    int minDecreaseBitrateForLargeQueue;
    _Bool useRemoteThroughput;
    _Bool useExperimentalResolutionMap;
    float bitsPerPixelRatio;
    _Bool shouldProbeToIncreaseBitrate;
    int probeTimeoutMs;
    double constantProbingFactor;
    _Bool useNonExpWeightedMean;
    _Bool checkForBytesSent;
    double dynamicOutputBrRatioForSubMaxBr;
    double dynamicOutputBrRatioForMaxBr;
    int timeSpentAtMaxBitrateToDecreaseOutputBrLimitMs;
};

struct AdaptiveBitrateInputParameterProcessor;

struct Analytics;

struct AnalyticsLogger;

struct AssetParserProvider;

struct AssetsManager;

struct AssetsManagerResult {
    struct vector<facebook::cameracore::ardelivery::LocalAsset, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> _field1;
};

struct AsyncExecutor;

struct AsyncInteropContext;

struct Audio {
    int _field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioConverterInputData {
    unsigned long long offset;
    struct vector<std::__1::vector<char, std::__1::allocator<char>>, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> bytes;
};

struct AudioDecoderFactory;

struct AudioDeviceModule {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioEncoderConfig {
    int sampleRate;
    int bitRate;
    int channels;
    int profile;
};

struct AudioEncoderErrorReporter {
    CDUnknownFunctionPointerType *_vptr$AudioEncoderErrorReporter;
};

struct AudioEncoderFactory;

struct AudioPacketizer;

struct AudioPacketizerFactory;

struct AudioPlatformComponentHostImpl;

struct AudioProcessing;

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioSourceInterface;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioTrackInterface;

struct AutoreleaseLoopCallback;

struct BKBloksComponentConfig {
    unsigned long long _field1;
    id _field2;
    id _field3;
    CDUnknownBlockType _field4;
    CDUnknownBlockType _field5;
};

struct BKBloksComponentViewConfig {
    CDUnknownBlockType _field1;
    CDUnknownBlockType _field2;
    CDUnknownBlockType _field3;
    CDUnknownBlockType _field4;
};

struct BKBloksLayout {
    NSObject<BKBloksModel> *model;
    struct CGSize size;
    struct shared_ptr<const std::__1::vector<BKBloksLayoutChild, std::__1::allocator<BKBloksLayoutChild>>> children;
};

struct BKBloksLayoutCacheItem {
    _Bool _field1;
    struct BKBloksLayout _field2;
};

struct BKBloksLayoutConstrainingSize {
    struct CGSize min;
    struct CGSize max;
};

struct BKBloksLayoutResult {
    struct BKBloksLayout layout;
    BKBloksLayoutCache *cache;
};

struct BKBloksParseResult {
    id _field1;
    id _field2;
    id _field3;
    struct BloksParserConfig _field4;
    id _field5;
};

struct Bitmap {
    unsigned char _field1[1];
};

struct BitrateAdjuster;

struct BitrateAllocationStrategy;

struct BloksParserConfig {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct BodyTrackerConfig {
    int _field1;
    int _field2;
    _Bool _field3;
};

struct BufferPool;

struct BufferPoolStatisticsLogger;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService>;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CameraPreviewInfo {
    float _field1;
    struct PreviewPixelSize _field2;
    struct EffectSafeAreaInsets _field3;
    float _field4;
};

struct CameraVideoInfo {
    _Bool _field1;
    _Bool _field2;
    unsigned char _field3;
};

struct CapabilityModelTypeSerializer;

struct CaptureCompletionContext;

struct CaptureEventInput;

struct CaptureEventService;

struct CaptureResult {
    struct vector<facebook::cp::fusion::Plane, std::__1::allocator<facebook::cp::fusion::Plane>> _field1;
    struct CaptureStats _field2;
};

struct CaptureStats {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    long long _field6;
    float _field7;
    float _field8;
};

struct Chromaticity {
    float _field1;
    float _field2;
};

struct CodecSpecificInfo {
    int _field1;
    char *_field2;
    union CodecSpecificInfoUnion _field3;
};

struct CodecSpecificInfoH264 {
    int _field1;
};

struct CodecSpecificInfoH265 {
    int _field1;
    unsigned char _field2;
};

struct CodecSpecificInfoVP8 {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    char _field4;
};

struct CodecSpecificInfoVP9 {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned char _field6;
    _Bool _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned long long _field10;
    _Bool _field11;
    unsigned short _field12[8];
    unsigned short _field13[8];
    struct GofInfoVP9 _field14;
    unsigned char _field15;
    unsigned char _field16[3];
    _Bool _field17;
};

struct ColorAnimation {
    unsigned char _field1[1];
};

struct ColorArrayAnimation {
    unsigned char _field1[1];
};

struct ColorSpace {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    int _field4;
    struct optional<webrtc::HdrMetadata> _field5;
};

struct CompactBitstreamWriter {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct CompletionPayload {
    id _field1;
    id _field2;
    id _field3;
};

struct Config {
    struct default_initialized_primitive<bool, true> _field1;
    struct default_initialized_primitive<bool, true> _field2;
    struct default_initialized_primitive<bool, false> _field3;
    struct default_initialized_primitive<bool, false> _field4;
};

struct ConnectionMeasurements {
    struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field1;
    struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field2;
    struct Optional<facebook::mobile::xplat::livestreaming::TCPInfo> _field3;
    struct Optional<double> _field4;
    struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> _field5;
    struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> _field6;
    struct Optional<long long> _field7;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field8;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field9;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field10;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field11;
    struct Optional<long long> _field12;
    struct Optional<long long> _field13;
    struct Optional<long long> _field14;
};

struct Constraint;

struct Constraints {
    struct Constraint *_field1;
    struct Constraint *_field2;
    struct __compressed_pair<webrtc::MediaConstraintsInterface::Constraint *, std::__1::allocator<webrtc::MediaConstraintsInterface::Constraint>> {
        struct Constraint *_field1;
    } _field3;
};

struct CopyOnWriteBuffer {
    struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> _field1;
};

struct Core<std::__1::basic_string<char>>;

struct CriticalSection {
    int lock_queue_;
    int recursion_;
    NSObject<OS_dispatch_semaphore> *semaphore_;
    struct _opaque_pthread_t *owning_thread_;
    struct _opaque_pthread_t *thread_;
    int recursion_count_;
};

struct CryptoOptions {
    struct Srtp _field1;
    struct SFrame _field2;
};

struct CxxModule;

struct DataBuffer {
    struct CopyOnWriteBuffer _field1;
    _Bool _field2;
};

struct DataChannelDelegateAdapter;

struct DataChannelInit {
    _Bool reliable;
    _Bool ordered;
    int maxRetransmitTime;
    int maxRetransmits;
    basic_string_90719d97 protocol;
    _Bool negotiated;
    int id;
};

struct DataChannelInterface;

struct DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>;

struct DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>;

struct DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>;

struct DelayedMessage;

struct DenseStorage<float, 2, 2, 1, 0> {
    struct plain_array<float, 2, 0, 0> _field1;
};

struct Device;

struct DiskVideoRecorderConfig {
    int availableSpaceThresholdInMB;
    struct duration<double, std::__1::ratio<1, 1>> checkAvailableSpaceIntervalInSeconds;
    struct duration<double, std::__1::ratio<1, 1>> movieFragmentIntervalInSeconds;
    struct VideoConfig videoConfig;
    AudioConfig_f27b8135 audioConfig;
    _Bool enablePartialRecordingIfNoEnoughSpace;
    _Bool enableLiveWithDVR;
};

struct DispatchWorker;

struct Document {
    unsigned char _field1[1];
};

struct DtmfSenderInterface;

struct DualTexture;

struct DynamicInstructionsConfig {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct DynamicTextConfig {
    struct vector<msqrd::manifest::DynamicTextCapability, std::__1::allocator<msqrd::manifest::DynamicTextCapability>> _field1;
};

struct EAGLContext {
    Class _field1;
    struct _EAGLContextPrivate *_field2;
};

struct Effect;

struct EffectAnalyticsInfo {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    int _field4;
};

struct EffectAssetLoader;

struct EffectAttribution;

struct EffectController;

struct EffectDataSnapshot;

struct EffectSafeAreaInsets {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct EffectStateListener;

struct EffectStateManager;

struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
};

struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
};

struct EncodedImage {
    unsigned int _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
    char *_field6;
    unsigned long long _field7;
    unsigned long long _field8;
    int _field9;
    unsigned char _field10;
    _Bool _field11;
    int _field12;
    struct PlayoutDelay _field13;
    struct Timing _field14;
    unsigned int _field15;
    struct optional<int> _field16;
    struct optional<webrtc::ColorSpace> _field17;
};

struct EngineDebugConfiguration {
    _Bool displayBodyKeypoints;
    _Bool displayHandLandmarks;
    int panelSetup;
    _Bool displayFaceLandmarks;
    _Bool displayIrisLandmarks;
    _Bool displayFaceWireframes;
    _Bool enableGpuTimer;
    _Bool enableProfiler;
    _Bool forceNoMsaa;
    _Bool enableOverlayPlugin;
    unsigned int verbosityFlags;
};

struct Error {
    basic_string_90719d97 _field1;
};

struct EventBase;

struct Exception;

struct Executor {
    CDUnknownFunctionPointerType *_field1;
};

struct Expected<facebook::cameracore::ardelivery::AssetsManagerResult, facebook::cameracore::ardelivery::Error> {
    union {
        struct AssetsManagerResult _field1;
        struct Error _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
};

struct Expected<msqrd::dataprovider::IVideoDataProviderResult::VideoFrame, msqrd::dataprovider::IVideoDataProviderResult::SkippingReason> {
    union {
        struct VideoFrame _field1;
        int _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
};

struct FBARCaptureEventServiceCameraInfo {
    unsigned char _field1;
    float _field2;
    float _field3;
    struct PixelSize _field4;
    struct EffectSafeAreaInsets _field5;
};

struct FBAREngineOutputSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAREngineRenderOptions {
    float _field1;
};

struct FBAROpenGLTexture {
    struct FBAROpenGLTextureInfo _field1;
    struct FBCFRefGuard<const void *> _field2;
    struct FBCFRefGuard<const void *> _field3;
};

struct FBAROpenGLTextureInfo {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAnimationPerformanceTrackingResult {
    _Bool _field1;
    long long _field2;
    double _field3;
    unsigned long long _field4;
    double _field5;
    unsigned long long _field6;
    double _field7;
    double _field8;
    long long _field9;
    double _field10;
    long long _field11;
};

struct FBAudioFileReader<short>;

struct FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor>;

struct FBCCUpdateBundle {
    id _field1;
    id _field2;
};

struct FBCFRefGuard<const void *> {
    void *_field1;
};

struct FBCameraConfiguration {
    _Bool shouldFrontCameraVideoMirrored;
    _Bool isFlipFrontCameraOutputEnabled;
    long long startingDevicePosition;
    long long initialFlashMode;
    NSString *initialSessionPreset;
    unsigned char initialTargetFPS;
    _Bool usesSingleAudioVideoCaptureSession;
    _Bool audioCaptureIgnoreRTCClientNotification;
    _Bool automaticallyConfiguresApplicationAudioSession;
    _Bool canPreConfigureAudioSession;
    _Bool shouldRemoveInputsAndOutputsWhenStopped;
    _Bool enableEchoCancellation;
    _Bool canUseLatestAudioVideoCaptureOutput;
    _Bool videoBufferTransformEnabled;
    _Bool stopLivePreviewOnPhotoCapture;
    long long videoStabilizationMode;
    FBCameraFocusSettings *initialFocusSettings;
    FBCameraExposureSettings *initialExposureSettings;
    FBCameraWhiteBalanceSettings *initialWhiteBalanceSettings;
    _Bool subjectAreaChangeMonitoring;
    float lowLightDetectionThreshold;
    float lowLightExposureBias;
    double maxZoomFactor;
    _Bool enablePreviewCaptureWhenCapturingPhotoWithoutFlash;
    _Bool keepAudioSessionActiveDuringCameraSession;
    _Bool useSeparateDispatchQueuesForAudioAndVideoSessions;
    _Bool markAVWriterInputsAsFinishedWhenRecordingStops;
};

struct FBCameraEventLoggingInfo {
    int _field1;
    id _field2;
};

struct FBCaptureSessionConfig {
    _Bool _field1;
    id _field2;
};

struct FBFramePerformanceResult {
    double _field1;
    double _field2;
    double _field3;
    long long _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
};

struct FBFramePerformanceTrackerConfig {
    long long singleFrameDropEventFrameNumber;
    long long twoConsecFrameDropEventFrameNumber;
    long long fourConsecFrameDropEventFrameNumber;
    long long eightConsecFrameDropEventFrameNumber;
    long long maxFrameDropAccount;
    long long initialTrackedFrame;
};

struct FBGLUniformTextureInfo {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBLigerRequestProperties {
    id _field1;
    id _field2;
    id _field3;
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
};

struct FBLoomAbortEntry {
    int abortReason;
};

struct FBLoomAsyncCallEndEntry {
    unsigned int matchID;
};

struct FBLoomAsyncCallEntry {
    void *callsiteAddress;
};

struct FBLoomAsyncCallStartEntry {
    void *calleeAddress;
    unsigned int matchID;
};

struct FBLoomBlockTracingEntry {
    unsigned int matchID;
};

struct FBLoomCounterLogEntry {
    int counterID;
    long long counterValue;
};

struct FBLoomLegacyPerfLoggerEntry {
    unsigned int matchID;
    int markerID;
};

struct FBLoomLogEntry {
    int entryID;
    int entryType;
    union {
        struct FBLoomTimeEntry timeEntry;
        struct FBLoomStringEntry stringEntry;
    } ;
};

struct FBLoomNetworkingEntry {
    unsigned long long requestID;
};

struct FBLoomQPLEntry {
    unsigned short actionID;
    unsigned int markerID;
    unsigned int uniqueID;
    _Bool usesSuspectTimestamp;
    _Bool isTraceTrigger;
};

struct FBLoomQPLListener;

struct FBLoomStackFrameEntry {
    void *functionAddresses[4];
};

struct FBLoomStartEntry {
    double maximumTraceTime;
    long long traceID;
    int activeProviders;
    int triggerQPL;
};

struct FBLoomStringEntry {
    unsigned int matchID;
    unsigned char stringLength;
    char string[43];
};

struct FBLoomThreadPriorityEntry {
    int threadPriority;
};

struct FBLoomTimeEntry {
    unsigned int threadID;
    unsigned long long timestamp;
    union {
        struct FBLoomStartEntry startEntry;
        struct FBLoomAbortEntry abortEntry;
        struct FBLoomStackFrameEntry stackFrameEntry;
        struct FBLoomQPLEntry QPLEntry;
        struct FBLoomAsyncCallEntry asyncCallEntry;
        struct FBLoomAsyncCallStartEntry asyncCallStartEntry;
        struct FBLoomAsyncCallEndEntry asyncCallEndEntry;
        struct FBLoomNetworkingEntry networkingEntry;
        struct FBLoomLegacyPerfLoggerEntry legacyPerfLoggerEntry;
        struct FBLoomCounterLogEntry counterEntry;
        struct FBLoomTraceAnnotationLogEntry annotationEntry;
        struct FBLoomThreadPriorityEntry threadPriorityEntry;
        struct FBLoomBlockTracingEntry blockTracingEntry;
    } ;
};

struct FBLoomTraceAnnotationLogEntry {
    unsigned int annotationQPLID;
    unsigned long long annotationValue;
};

struct FBMPCameraInfoInputConfiguration {
    _Bool replayOnPortConnect;
};

struct FBMPDataCapturerCompletionContext {
    NSObject<OS_dispatch_queue> *callbackQueue;
    CDUnknownBlockType block;
};

struct FBMPDataMetadata {
    unsigned long long index;
    unsigned long long uniqueId;
    _Bool forCapture;
    _Bool forPreview;
    _Bool forOverlay;
};

struct FBMPRendererConfiguration {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct FBMPSessionConfig {
    _Bool trackPerformance;
    _Bool batchPostOperationPortBlocks;
};

struct FBMQTTChannelConnectEventObserver;

struct FBMQTTChannelConnectionStateObserver;

struct FBMQTTChannelEventLogger;

struct FBMQTTChannelPublishEventObserver;

struct FBMQTTChannelSubscribeEventObserver;

struct FBNSStringCache {
    struct FBNSStringCacheItem *items;
    unsigned int prng_lfsr;
    unsigned char age[1024];
};

struct FBNSStringCacheItem;

struct FBNetworkSpeedTestStatus {
    int _field1;
    double _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct FBPair {
    Class _field1;
};

struct FBPostCaptureCoordinatorConfiguration {
    _Bool needsPreview;
};

struct FBQualityEstimate {
    double _field1;
    _Bool _field2;
    float _field3;
    unsigned long long _field4;
};

struct FBRequired<bool> {
    _Bool _field1;
};

struct FBRequired<int> {
    int _field1;
};

struct FBRequired<long> {
    long long _field1;
};

struct FBSSLKeyMaterialListenerAbstractLogger;

struct FBVideoBroadcastBaseSessionParameters {
    struct FBVideoBroadcastSessionTimestampConfig _field1;
    id _field2;
};

struct FBVideoBroadcastPipelineHolder {
    shared_ptr_c386cb19 networkSession;
    FBAACEncoder *audioEncoder;
    id videoEncoder;
    id secondaryEncoder;
    id audioPacketizer;
    id videoPacketizer;
    id secondaryPacketizer;
    id diskRecorder;
};

struct FBVideoBroadcastRtmpSessionParameters {
    id _field1;
    CDStruct_9abd5f9f _field2;
    id _field3;
    id _field4;
    id _field5;
    shared_ptr_f32f4099 _field6;
    shared_ptr_d61e43bb _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    shared_ptr_75e1c217 _field12;
    shared_ptr_b7837d35 _field13;
    shared_ptr_0a7db57b _field14;
    Optional_038b8a0f _field15;
    struct FBVideoBroadcastBaseSessionParameters _field16;
};

struct FBVideoBroadcastRtmpSwapStats {
    double audioBufferDurationSeconds;
    double videoBufferDurationSeconds;
    double lastAudioPts;
    double lastVideoPts;
    double lastAudioPtsStreamTime;
    double callStartedToSocketWritabilityLatencySeconds;
    double callJoinedToSocketWritabilityLatencySeconds;
};

struct FBVideoBroadcastSessionLoggingInfo {
    id _field1;
    id _field2;
    _Bool _field3;
};

struct FBVideoBroadcastSessionStats {
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> adaptiveBitrateStats;
    CDStruct_1b6d18a9 pipelineLatency;
    CDStruct_1b6d18a9 lastSentAudioPts;
    CDStruct_1b6d18a9 lastSentVideoPts;
    double throughput;
    unsigned long long totalBytesSent;
    unsigned long long elapsedTimeInMs;
    CDStruct_1b6d18a9 lastAudioSampleBufferPts;
    CDStruct_1b6d18a9 lastVideoSampleBufferPts;
    double videoQueueSizeInSeconds;
    double audioQueueSizeInSeconds;
    unsigned long long queueSizeInBytes;
    basic_string_90719d97 currentVideoEncoderQualitySelection;
    unsigned long long framerateSentToTransport;
    unsigned long long bitrateBpsSentToTransport;
    double batteryChargeLevel;
    long long batteryStatus;
    unsigned long long totalVideoBytesSent;
    unsigned long long totalAudioBytesSent;
    unsigned long long audioPacketsLost;
    unsigned long long audioPacketsSent;
    unsigned long long videoPacketsLost;
    unsigned long long videoPacketsSent;
    unsigned long long videoFramesEncoded;
    _Bool bandwidthLimitedResolution;
    _Bool cpuLimitedResolution;
    unsigned int encodeUsagePercent;
    unsigned int averageEncodeMs;
    unsigned long long frameRateSent;
    unsigned long long nacksReceived;
    unsigned long long firsReceived;
    unsigned long long plisReceived;
};

struct FBVideoBroadcastSessionStatsInternal {
    struct FBVideoBroadcastSessionStats _field1;
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field2;
    double _field3;
    long long _field4;
};

struct FBVideoBroadcastSessionTimestampConfig {
    _Bool shiftTimestampBase;
    _Bool collapseGapsInAudio;
    _Bool collapseGapsInVideo;
};

struct FBWhistleConnectionStatsLogger;

struct FaceMeshDebugger;

struct FaceTrackerConfig {
    int _field1;
    int _field2;
};

struct FileRotatingLogSink;

struct FindFaceConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FindHandConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FindPersonConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FrameDecryptorInterface;

struct FrameDrops {
    double singleFrameDrop;
    double twoConsecFrameDrops;
    double fourConsecFrameDrops;
    double eightConsecFrameDrops;
};

struct FrameDurationTracker;

struct FrameEncryptorInterface;

struct FrameRateTracker;

struct FrameServiceFeedback {
    unsigned char facesTrackedCount;
};

struct FunctionRef;

struct FusionBuffer;

struct FusionSettings {
    unsigned long long maxFrames;
    _Bool predictAlign;
    _Bool persistKeyFrames;
    long long maxKeyFrameAge;
    int devicePosition;
    float verticalFOV;
    void *GLContext;
};

struct Future<std::__1::basic_string<char>> {
    struct Core<std::__1::basic_string<char>> *_field1;
};

struct GPUTimer;

struct GestureEvent;

struct GestureEventServiceCreator;

struct GlContext;

struct GofInfoVP9 {
    unsigned long long _field1;
    unsigned char _field2[255];
    _Bool _field3[255];
    unsigned char _field4[255];
    unsigned char _field5[255][3];
    unsigned short _field6;
};

struct GraphicsEngine;

struct H264BitstreamParser {
    CDUnknownFunctionPointerType *_vptr$H264BitstreamParser;
    struct optional<webrtc::SpsParser::SpsState> sps_;
    struct optional<webrtc::PpsParser::PpsState> pps_;
    struct optional<int> last_slice_qp_delta_;
};

struct H2PubSubClient {
    struct HTTPClientServices _field1;
    struct EventBase *_field2;
    unique_ptr_45a0ccc1 _field3;
    struct mutex _field4;
    struct unordered_map<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>, std::__1::hash<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, std::__1::equal_to<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, std::__1::allocator<std::__1::pair<facebook::h2PubSubClient::H2PubSubControlStreamManager *const, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>>> _field5;
};

struct H2PubSubConnectionFactory;

struct HTTPClientServices {
    struct EventBase *_field1;
    struct function<proxygen::httpclient::RequestHandlerFactory *()> _field2;
};

struct HTTPClientSettings {
    struct EventBase *_field1;
    struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> _field2;
    struct HTTPTransactionAdaptorFactory *_field3;
};

struct HTTPHeaders {
    struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> _field1;
    struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> _field2;
    struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned long long _field4;
};

struct HTTPRequest {
    basic_string_90719d97 _field1;
    struct URL _field2;
    unsigned char _field3;
    basic_string_90719d97 _field4;
    struct HTTPHeaders _field5;
    _Bool _field6;
    unsigned char _field7;
    unsigned int _field8;
    basic_string_90719d97 _field9;
    struct duration<long long, std::__1::ratio<1, 1000>> _field10;
    struct duration<long long, std::__1::ratio<1, 1000>> _field11;
    map_5554a4ce _field12;
    _Bool _field13;
};

struct HTTPResponse {
    unsigned short _field1;
    basic_string_90719d97 _field2;
    struct HTTPHeaders _field3;
};

struct HTTPTransactionAdaptorFactory;

struct HandTrackerConfig {
    int _field1;
    int _field2;
};

struct HdrMasteringMetadata {
    struct Chromaticity _field1;
    struct Chromaticity _field2;
    struct Chromaticity _field3;
    struct Chromaticity _field4;
    float _field5;
    float _field6;
};

struct HdrMetadata {
    struct HdrMasteringMetadata _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct I420BufferInterface;

struct IARClassConfigSource;

struct IARClassPersistentStore;

struct IARClassRemoteSource;

struct IAsyncAssetLoader;

struct IAsyncScriptingHost;

struct IAudioFileSink;

struct IAudioPlatformComponentHost;

struct IAudioServiceController;

struct IBuffer;

struct IBugReportLogger;

struct IBundleFetcher;

struct ICaptureEventInput;

struct IComponentEvaluationLogger;

struct IDeformationEvents;

struct IEffectDataSnapshotterCreator;

struct IEffectSessionListener;

struct IEffectStateListener;

struct IEngineAnalyticsLogger;

struct IExperimentConfig;

struct IFileCache;

struct IGAccountSettingsOverflowRows {
    _Bool savedOverflow;
};

struct IGAddressRangeScanner;

struct IGAssetNetworkerRetryParams {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct IGAssetSelectionMechanic {
    unsigned long long options;
    unsigned long long maxSelectionCount;
};

struct IGCameraPreviewInfo {
    long long cameraPosition;
    struct CGSize previewSize;
    struct UIEdgeInsets safeArea;
};

struct IGCompositionFilterTransform {
    struct CGPoint scale;
    struct CGPoint translation;
    double rotation;
};

struct IGCropInfo {
    struct CGSize _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct IGExpandableButtonLayouts {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
};

struct IGGallerySectionLayout;

struct IGGridLayoutConfiguration {
    double interitemSpacing;
    struct UIEdgeInsets insets;
    double mediasPerRow;
    double aspectRatio;
};

struct IGMallocDiskLogger;

struct IGMediaShareSurfaceAxisRange {
    double _field1;
    double _field2;
};

struct IGMediaShareSurfaceRectRange {
    struct IGMediaShareSurfaceAxisRange _field1;
    struct IGMediaShareSurfaceAxisRange _field2;
};

struct IGMediaUploadFlowOptions {
    _Bool skipCoverPhotoUpload;
    _Bool overrideCoverPhotoWithFirstVideoFrame;
};

struct IGOverlayViewLocationInfo {
    struct CGPoint position;
    struct CGSize size;
    struct CGPoint translation;
    double scale;
    double rotation;
    _Bool isMirroredHorizontally;
};

struct IGOverlayViewTapInfo {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
    long long _field4;
};

struct IGPagingFocusOffsets {
    long long before;
    long long focused;
    long long after;
};

struct IGPercentageLayoutInfo {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct IGPerspectiveAdjustments {
    union _GLKMatrix4 _field1;
    double _field2;
    struct IGPerspectiveRotation _field3;
    struct IGPerspectiveCrop _field4;
    struct CGSize _field5;
};

struct IGPerspectiveCrop {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
    double _field4;
};

struct IGPerspectiveRotation {
    double _field1;
    double _field2;
    double _field3;
};

struct IGProfileNavButtonExperiments {
    _Bool favoritesEnabled;
    _Bool profileIsNotInTabBar;
    _Bool archiveInProfileHeader;
    _Bool showFadingFollowButton;
};

struct IGRegion {
    struct CGPoint center;
    struct CGSize size;
    double rotation;
};

struct IGSectionEntry;

struct IGStoryMediaTransform {
    struct CGPoint anchorPoint;
    struct CGPoint offsetFromCenter;
    double scale;
    double rotation;
};

struct IGStoryRegion {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
};

struct IGTimeInfo {
    long long _field1;
    long long _field2;
};

struct IGWaterfallLayoutCacheState {
    double _field1;
    double _field2;
    double _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    struct vector<IGWaterfallLayoutColumn, std::__1::allocator<IGWaterfallLayoutColumn>> _field7;
};

struct IGWaterfallLayoutCachedItem {
    struct IGWaterfallLayoutCacheState _field1;
    CDStruct_1d3354f4 _field2;
    struct CGRect _field3;
};

struct IGWaterfallLayoutColumn;

struct ILocationUpdateListener;

struct ILogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IMicrophoneSink;

struct INetworkClientSource;

struct INetworkRequestRedirectHandler;

struct INetworkResult;

struct IOBuf {
    struct IOBuf *_field1;
    struct IOBuf *_field2;
    char *_field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct IPersistenceServiceDelegate;

struct IPlatformSLAMDataInput;

struct IPluginConfiguration {
    CDUnknownFunctionPointerType *_field1;
};

struct IProgramObjectProvider;

struct IRawEventLogger;

struct IRenderSessionLogger;

struct IScriptingHost;

struct IScriptingLogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IServiceAnalyticsLogger;

struct IServiceConfiguration;

struct ISessionPlayer;

struct IShaderLogger;

struct IShaderObjectProvider;

struct ITexture;

struct ITrackingController;

struct IVideoDataProvider;

struct IViewport;

struct IceCandidateInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceServer {
    basic_string_90719d97 _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    int _field5;
    basic_string_90719d97 _field6;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct IdBase;

struct ImageMetadata {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    _Bool _field5;
    int _field6;
};

struct Info {
    struct Optional<std::__1::basic_string<char>> _field1;
    basic_string_90719d97 _field2;
};

struct InlineSerialExecutor;

struct InlineSyncExecutor;

struct Instance;

struct InstructionConfig {
    struct FindFaceConfig _field1;
    struct FindHandConfig _field2;
    struct FindPersonConfig _field3;
    struct DynamicInstructionsConfig _field4;
};

struct InterEffectLinkingConfig {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct InternalScriptingAPIConfig {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct IntervalRange {
    int _field1;
    int _field2;
};

struct JSCallInvoker;

struct JSExecutorFactory;

struct Layer {
    unsigned char _field1[1];
};

struct LayoutInfo {
    struct vector<SectionInfo, std::__1::allocator<SectionInfo>> sections;
    struct CGSize contentSize;
    _Bool sectionsValid;
};

struct LigerPushNotificationCallback;

struct LiveStreamingTslogFactory;

struct LiveTraceConfig {
    _Bool enabled;
    int sampleIntervalInSeconds;
    int samplingSource;
};

struct LiveTraceIDGenerator {
    struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> generator_;
    struct uniform_int_distribution<unsigned int> distribution_;
    long long lastTraceIDEmbedTimestamp_;
    struct LiveTraceConfig config_;
};

struct LocalAsset;

struct Location {
    char *_field1;
    char *_field2;
};

struct LocationData {
    _Bool hasValidLocation;
    double latitude;
    double longitude;
    struct duration<double, std::__1::ratio<1, 1>> timestamp;
};

struct LocationDataProvider;

struct LockedPixelBuffer;

struct LogSink;

struct LowLatencyConfig {
    int broadcastLatencyMs;
    int audioFrameCancellationMode;
    int audioFrameCancellationSenderDelayMs;
    int videoFrameCancellationMode;
    int videoFrameCancellationSenderDelayMs;
};

struct MQTTChannelAnalytics;

struct MQTTChannelCoordinatorProxy;

struct Manifest {
    struct VersionNumber _field1;
    struct Optional<msqrd::manifest::FaceTrackerConfig> _field2;
    struct Optional<msqrd::manifest::HandTrackerConfig> _field3;
    struct Optional<msqrd::manifest::ObjectTrackerConfig> _field4;
    struct Optional<msqrd::manifest::BodyTrackerConfig> _field5;
    struct Optional<msqrd::manifest::StyleTransferConfig> _field6;
    struct Optional<msqrd::manifest::InstructionConfig> _field7;
    struct Optional<msqrd::manifest::AudioConfig> _field8;
    struct Optional<msqrd::manifest::InternalScriptingAPIConfig> _field9;
    _Bool _field10;
    struct Optional<msqrd::manifest::SupportedOrientationsConfig> _field11;
    struct Optional<msqrd::manifest::InterEffectLinkingConfig> _field12;
    struct Optional<msqrd::manifest::DynamicTextConfig> _field13;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field14;
    struct unordered_map<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr, std::__1::hash<msqrd::TypeId>, std::__1::equal_to<msqrd::TypeId>, std::__1::allocator<std::__1::pair<const msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> _field15;
    unordered_set_7cdfe647 _field16;
    int _field17;
};

struct Matrix<float, 2, 1, 0, 2, 1> {
    struct DenseStorage<float, 2, 2, 1, 0> _field1;
};

struct MediaConfig {
    _Bool _field1;
    struct Video _field2;
    struct Audio _field3;
};

struct MediaConstraints;

struct MediaSourceInterface;

struct MediaStreamInterface;

struct MediaStreamTrackInterface;

struct MediaTransportFactory;

struct Message {
    struct Location _field1;
    struct MessageHandler *_field2;
    unsigned int _field3;
    struct MessageData *_field4;
    long long _field5;
};

struct MessageData;

struct MessageHandler;

struct MessagePackParseState {
    struct FBNSStringCache cache;
};

struct MessageQueueThread;

struct Method {
    basic_string_90719d97 _field1;
    unsigned long long _field2;
    _Bool _field3;
    struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> _field4;
    struct function<folly::dynamic (folly::dynamic)> _field5;
};

struct ModelPathsBuilder;

struct ModuleRegistry;

struct MotionDataProvider;

struct MultipleEncodersConfig {
    _Bool enabled;
    struct VideoConfig videoConfig;
    int switchToLowQualityThresholdMs;
    int switchToPrimaryThresholdMs;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NetworkSession;

struct NetworkSessionFactory;

struct NetworkSpeedTestPingDetails;

struct NetworkSpeedTestStatus {
    int state;
    double estimatedUploadBandwidthInKBps;
    struct duration<long long, std::__1::ratio<1, 1000>> timeTaken;
    struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> measurements;
    _Bool speedTestPassesThreshold;
};

struct NetworkStatusMonitor {
    CDUnknownFunctionPointerType *_field1;
};

struct Node<msqrd::scene::Node>;

struct ObjCVideoTrackSource {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> _field4;
    struct ThreadChecker _field5;
    struct VideoAdapter _field6;
    struct CriticalSection _field7;
    struct optional<webrtc::VideoTrackSourceInterface::Stats> _field8;
    struct VideoBroadcaster _field9;
    struct VideoBroadcaster _field10;
    struct TimestampAligner _field11;
    id _field12;
};

struct ObjectTrackerConfig {
    int _field1;
};

struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
};

struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>;

struct ObserverToken;

struct Optional<double> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            double _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<facebook::mobile::xplat::livestreaming::TCPInfo> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct TCPInfo _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<long long> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            long long _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::AudioConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct AudioConfig {
                _Bool _field1;
                _Bool _field2;
                _Bool _field3;
                _Bool _field4;
                _Bool _field5;
                _Bool _field6;
                _Bool _field7;
                _Bool _field8;
                _Bool _field9;
            } _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::BodyTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct BodyTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::DynamicTextConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct DynamicTextConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::FaceTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct FaceTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::HandTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct HandTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InstructionConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct InstructionConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InterEffectLinkingConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct InterEffectLinkingConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InternalScriptingAPIConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct InternalScriptingAPIConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::ObjectTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct ObjectTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::StyleTransferConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct StyleTransferConfig {
                basic_string_90719d97 _field1;
                basic_string_90719d97 _field2;
            } _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::SupportedOrientationsConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct SupportedOrientationsConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::analytics::IEngineAnalyticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            shared_ref_c3a6841c _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::logging::BufferPoolStatisticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::BufferPoolStatisticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::RenderTimeLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::servicehost::IEffectSessionListener> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::services::IServiceAnalyticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceAnalyticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::services::IServiceConfiguration>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceConfiguration> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::basic_string<char>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            basic_string_90719d97 value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct duration<double, std::__1::ratio<1, 1>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct duration<long long, std::__1::ratio<1, 1000>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::pair<FBMPVideoData *, FBMPDataMetadata>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            struct pair<FBMPVideoData *, FBMPDataMetadata> value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::promise<std::__1::basic_string<char>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            struct promise<std::__1::basic_string<char>> value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<unsigned int> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned int _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<unsigned long> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned long long _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Options {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    struct CryptoOptions _field6;
};

struct PartialReliabilityConfig {
    _Bool enableFrameDrop;
    int bufferDurationThresholdForBFrameDropMs;
    int bufferDurationThresholdForFullGOPDropMs;
    int bufferDurationThresholdForDropFinishMs;
    int percentBFramesToDrop;
    int percentPFramesToDrop;
};

struct PathAnimation {
    unsigned char _field1[1];
};

struct PeerConnectionDelegateAdapter;

struct PeerConnectionFactoryInterface;

struct PeerConnectionInterface;

struct PixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct Plane;

struct PlatformEventsInput;

struct PlatformSLAMDataInput;

struct PlayoutDelay {
    int _field1;
    int _field2;
};

struct Plugin {
    unsigned char _field1[1];
};

struct PluginRandomSubdocument {
    unsigned char _field1[1];
};

struct PluginSound {
    unsigned char _field1[1];
};

struct PluginTrimPath {
    unsigned char _field1[1];
};

struct PointAnimation {
    unsigned char _field1[1];
};

struct PointCloud<facebook::pointtools::Point3<float>>;

struct PpsState {
    _Bool bottom_field_pic_order_in_frame_present_flag;
    _Bool weighted_pred_flag;
    _Bool entropy_coding_mode_flag;
    unsigned int weighted_bipred_idc;
    unsigned int redundant_pic_cnt_present_flag;
    int pic_init_qp_minus26;
    unsigned int id;
    unsigned int sps_id;
};

struct PrefetchRequest {
    id _field1;
    id _field2;
    long long _field3;
};

struct PreviewPixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct PriorityQueue {
    struct vector<rtc::DelayedMessage, std::__1::allocator<rtc::DelayedMessage>> _field1;
    struct less<rtc::DelayedMessage> _field2;
};

struct ProductFeatureConfig {
    struct default_initialized_primitive<bool, true> useSkinSmoothing;
    struct default_initialized_primitive<bool, false> useSceneViewCulling;
    struct default_initialized_primitive<unsigned int, 0> preferredAntialiasingLevel;
};

struct ProfileLevelId {
    int profile;
    int level;
};

struct Profiler;

struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *>;

struct QuickPerformanceLogger;

struct QuickPerformanceLoggerBase;

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect frame;
    struct CGRect contentFrame;
    struct UIEdgeInsets borderWidth;
    long long displayType;
    long long layoutDirection;
};

struct RCTMessageThread;

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RTCConfiguration {
    struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> _field1;
    int _field2;
    int _field3;
    int _field4;
    struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    struct optional<int> _field12;
    struct optional<bool> _field13;
    struct optional<bool> _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    _Bool _field23;
    struct MediaConfig _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    struct optional<int> _field29;
    struct optional<int> _field30;
    struct optional<int> _field31;
    struct optional<int> _field32;
    struct optional<int> _field33;
    struct optional<int> _field34;
    struct optional<int> _field35;
    struct optional<rtc::IntervalRange> _field36;
    struct TurnCustomizer *_field37;
    struct optional<rtc::AdapterType> _field38;
    int _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    struct optional<webrtc::CryptoOptions> _field43;
    struct TransportFactoryInterface *_field44;
    _Bool _field45;
};

struct RTPFragmentationHeader {
    unsigned short _field1;
    unsigned long long *_field2;
    unsigned long long *_field3;
    unsigned short *_field4;
    char *_field5;
};

struct RadioMonitor {
    struct multiset<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> _field1;
    long long _field2;
    struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field3;
    struct map<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> _field4;
    long long _field5;
    long long _field6;
};

struct RadioStatusObserver {
    CDUnknownFunctionPointerType *_field1;
    struct RadioMonitor _field2;
    struct TimeUtilGeneric<std::__1::chrono::steady_clock> _field3;
    struct mutex _field4;
    struct unique_ptr<folly::Executor, std::__1::default_delete<folly::Executor>> _field5;
};

struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
};

struct ReachabilityAnnouncer;

struct RefCountedObject<rtc::BufferT<unsigned char, false>>;

struct RenderContext {
    struct GlContext *_field1;
    shared_ref_5cdfb9eb _field2;
    struct ARClassContext *_field3;
    struct shared_ref<igl::opengl::Device> _field4;
    struct Config _field5;
    struct shared_ptr<msqrd::platform::FrameRateTracker> _field6;
    shared_ptr_7d4d5427 _field7;
    struct unique_ptr<facebook::ar::profiler::Profiler, std::__1::default_delete<facebook::ar::profiler::Profiler>> _field8;
    struct Version _field9;
    struct unique_ptr<msqrd::renderer::gl::IShaderObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> _field10;
    struct unique_ptr<msqrd::renderer::gl::IProgramObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> _field11;
    struct IShaderLogger *_field12;
    struct IDeformationEvents *_field13;
    int _field14;
};

struct RenderPipelineCollection;

struct RenderSession {
    CDUnknownFunctionPointerType *_field1;
    shared_ptr_2811b282 _field2;
    struct RenderContext *_field3;
    int _field4;
    struct Config _field5;
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> _field6;
    struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> _field7;
    struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> _field8;
    int _field9;
    struct shared_ref<msqrd::scene::VideoParams> _field10;
    struct shared_ptr<msqrd::tree::Node<msqrd::scene::Node>> _field11;
    struct shared_ptr<msqrd::renderer::ITexture> _field12;
    struct shared_ptr<msqrd::fx::IScriptingHost> _field13;
    struct shared_ref<folly::Executor> _field14;
    struct shared_ptr<msqrd::fx::IAsyncScriptingHost> _field15;
    struct IScriptingLogger *_field16;
    struct shared_ref<msqrd::platform::IComponentEvaluationLogger> _field17;
    struct shared_ref<msqrd::platform::IRenderSessionLogger> _field18;
    struct Optional<msqrd::shared_ref<msqrd::analytics::IEngineAnalyticsLogger>> _field19;
    struct vector<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> _field20;
    _Bool _field21;
    struct shared_ref<msqrd::platform::FrameRateTracker> _field22;
    struct shared_ptr<msqrd::platform::FrameDurationTracker> _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    struct shared_ref<msqrd::scene::RenderPipelineCollection> _field28;
    struct vector<std::__1::weak_ptr<msqrd::fx::Viewport>, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> _field29;
    struct map<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>, std::__1::less<msqrd::fx::model::DeviceOutput>, std::__1::allocator<std::__1::pair<const msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>>> _field30;
    _Bool _field31;
    struct shared_ptr<msqrd::platform::TimeProvider> _field32;
    struct shared_ptr<msqrd::services::EffectDataSnapshot> _field33;
    struct EngineDebugConfiguration _field34;
    struct shared_ptr<msqrd::fx::FaceMeshDebugger> _field35;
    _Bool _field36;
    int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    struct shared_ptr<msqrd::fx::scripting::reflection::AsyncInteropContext> _field43;
    struct shared_ptr<msqrd::effect_state::IEffectStateListener> _field44;
    struct shared_ptr<msqrd::effect_state::EffectStateManager> _field45;
    _Bool _field46;
};

struct RenderTimeLogger;

struct RequestHandlerFactory;

struct RequestResponseInfo;

struct RequestStats {
    vector_31c84f95 _field1;
};

struct RtcpFeedback;

struct RtcpParameters {
    struct optional<unsigned int> _field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    _Bool _field4;
};

struct RtmpSSLFactory;

struct RtmpSessionCallback;

struct RtpCodecParameters {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    struct optional<int> _field4;
    struct optional<int> _field5;
    struct optional<int> _field6;
    struct optional<int> _field7;
    struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> _field8;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field9;
};

struct RtpEncodingParameters {
    struct optional<unsigned int> _field1;
    struct optional<int> _field2;
    struct optional<webrtc::RtpFecParameters> _field3;
    struct optional<webrtc::RtpRtxParameters> _field4;
    struct optional<webrtc::DtxStatus> _field5;
    double _field6;
    double _field7;
    struct optional<int> _field8;
    struct optional<int> _field9;
    struct optional<int> _field10;
    struct optional<int> _field11;
    struct optional<int> _field12;
    struct optional<double> _field13;
    struct optional<double> _field14;
    _Bool _field15;
    basic_string_90719d97 _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
};

struct RtpExtension {
    basic_string_90719d97 _field1;
    int _field2;
    _Bool _field3;
};

struct RtpFecParameters {
    struct optional<unsigned int> _field1;
    int _field2;
};

struct RtpParameters {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> _field3;
    struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> _field4;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field5;
    struct RtcpParameters _field6;
    int _field7;
};

struct RtpReceiverDelegateAdapter;

struct RtpReceiverInterface;

struct RtpRtxParameters {
    struct optional<unsigned int> _field1;
};

struct RtpSenderInterface;

struct RtpTransceiverInit {
    int _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field3;
};

struct RtpTransceiverInterface;

struct SFrame {
    _Bool _field1;
};

struct SSLKeyMaterialCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct SampleInfo {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field5;
};

struct ScalarAnimation {
    unsigned char _field1[1];
};

struct ScalarArrayAnimation {
    unsigned char _field1[1];
};

struct ScriptLogger;

struct SdpVideoFormat {
    basic_string_90719d97 _field1;
    map_5554a4ce _field2;
};

struct SectionInfo;

struct SerialDispatchQueueExecutor;

struct ServiceCreator<msqrd::services::IARObjectManagerService>;

struct ServiceCreator<msqrd::services::ICameraControlService>;

struct ServiceCreator<msqrd::services::ICameraShareService>;

struct ServiceCreator<msqrd::services::ICreativeToolProxyService>;

struct ServiceCreator<msqrd::services::IDateService>;

struct ServiceCreator<msqrd::services::IDeepLinkAssetProvider>;

struct ServiceCreator<msqrd::services::IExternalAssetProvider>;

struct ServiceCreator<msqrd::services::IHTTPClientService>;

struct ServiceCreator<msqrd::services::IHapticService>;

struct ServiceCreator<msqrd::services::IIdentityService>;

struct ServiceCreator<msqrd::services::IInterEffectLinkingService>;

struct ServiceCreator<msqrd::services::ILiveStreamingService>;

struct ServiceCreator<msqrd::services::ILocaleService>;

struct ServiceCreator<msqrd::services::IMusicService>;

struct ServiceCreator<msqrd::services::INativeNavigationService>;

struct ServiceCreator<msqrd::services::INativeUIControlService>;

struct ServiceCreator<msqrd::services::IPersonalizationService>;

struct ServiceCreator<msqrd::services::IPhysicsService>;

struct ServiceCreator<msqrd::services::IRandomGeneratorService>;

struct ServiceCreator<msqrd::services::IScriptAnalyticsService>;

struct ServiceCreator<msqrd::services::IStyleTransferProvider>;

struct ServiceCreator<msqrd::services::ITargetEffectService>;

struct ServiceCreatorRegistry {
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IARObjectManagerService>> arObjectManagerServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>> dateServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>> identityServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IStyleTransferProvider>> styleTransferProviderCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>> interEffectLinkingServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>> personalizationServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>> scriptAnalyticsServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>> localeServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPhysicsService>> physicsServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>> musicServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>> nativeUIControlServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>> cameraControlServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>> cameraShareServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>> deepLinkAssetProviderCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>> creativeToolProxyServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>> liveStreamingServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>> randomGeneratorServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHapticService>> hapticServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHTTPClientService>> httpClientServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IExternalAssetProvider>> externalAssetServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>> nativeNavigationServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ITargetEffectService>> targetEffectServiceCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>> depthDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>> opticalFlowDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>> objectTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>> motionDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>> volumeDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>> faceTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>> frameBrightnessDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>> targetTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>> touchGesturesDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService>> targetRecognitionServiceCreator;
    struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>> videoDataServiceCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>> platformEventsDataProviderCreator;
    struct vector<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> serviceCreators;
};

struct ServiceFeedbackGenerator;

struct ServiceHost;

struct ServiceNotifier<msqrd::dataprovider::ILocationUpdateListener> {
    struct mutex listenerMutex_;
    struct shared_ptr<std::__1::vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>> listeners_;
};

struct ServiceType {
    int _field1;
};

struct SessionDescriptionInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct SettingsFlags {
    _Bool allowAncillarySettings;
    _Bool allowArchiveSettings;
    _Bool allowReshareSettings;
    _Bool allowShareToFacebook;
};

struct ShaderLogger;

struct SinkPair;

struct SocketServer;

struct SpatialLayer {
    unsigned short _field1;
    unsigned short _field2;
    float _field3;
    unsigned char _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
};

struct SpeedTestConfig {
    int speedTestPayloadSize;
    int speedTestPayloadChunkSize;
    struct duration<double, std::__1::ratio<1, 1>> speedTestWaitResponseTimeoutInSeconds;
    double speedTestMinimumBandwidthThreshold;
    int speedTestRetryMaxCount;
    struct duration<double, std::__1::ratio<1, 1>> speedTestRetryTimeDelay;
    _Bool speedTestDisable;
    _Bool runAfterConnect;
    _Bool waitForSpeedTest;
    _Bool cancelSpeedTestOnStart;
};

struct SpsState {
    unsigned int width;
    unsigned int height;
    unsigned int delta_pic_order_always_zero_flag;
    unsigned int separate_colour_plane_flag;
    unsigned int frame_mbs_only_flag;
    unsigned int log2_max_frame_num;
    unsigned int log2_max_pic_order_cnt_lsb;
    unsigned int pic_order_cnt_type;
    unsigned int max_num_ref_frames;
    unsigned int vui_params_present;
    unsigned int id;
};

struct Srtp {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct Stabilizer;

struct StabilizerResult {
    _Bool _field1;
    struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> _field2;
    struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> _field3;
    double _field4;
    int _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct StabilizerSettings;

struct Stats {
    int _field1;
    int _field2;
};

struct StatsReport {
    struct scoped_refptr<webrtc::StatsReport::IdBase> _field1;
    double _field2;
    struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> _field3;
};

struct SupportedOrientationsConfig {
    _Bool _field1;
    _Bool _field2;
};

struct TCPInfo {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
};

struct TasksScheduler;

struct Thread {
    CDUnknownFunctionPointerType *_field1;
    struct signal_with_thread_policy<sigslot::single_threaded> _field2;
    _Bool _field3;
    struct Message _field4;
    struct list<rtc::Message, std::__1::allocator<rtc::Message>> _field5;
    struct PriorityQueue _field6;
    unsigned int _field7;
    struct CriticalSection _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct SocketServer *_field12;
    struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> _field13;
    struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> _field14;
    basic_string_90719d97 _field15;
    struct _opaque_pthread_t *_field16;
    _Bool _field17;
    _Bool _field18;
};

struct ThreadChecker;

struct ThroughputMonitorConfig {
    double exponentialAverageDecayConstant;
};

struct TigonLigerServicePolicy {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
};

struct TigonRequestToken;

struct TigonService {
    CDUnknownFunctionPointerType *_field1;
};

struct TigonStack;

struct TimeInAppController;

struct TimeProvider;

struct TimeSeriesLog {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    unsigned long long _field3;
    struct shared_ptr<unsigned long> _field4;
    unsigned long long _field5;
    struct shared_ptr<rtc::tslog::TsCounterStorageManager> _field6;
    struct shared_ptr<rtc::tslog::TsLogCompactStorage> _field7;
    struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> _field8;
    int _field9;
    struct TsDataLogHeader *_field10;
    _Bool _field11;
    struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> _field12;
    unsigned long long _field13;
    long long _field14;
    struct TimeSeriesStreamWrapper _field15;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field16;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field17;
    struct CompactBitstreamWriter _field18;
    struct function<long long ()> _field19;
};

struct TimeSeriesStream;

struct TimeSeriesStreamWrapper {
    CDUnknownFunctionPointerType *_vptr$TslogStreamFactory;
    struct TslogStreamFactory *tslog_;
    struct shared_ptr<rtc::tslog::TimeSeriesStream> stream_;
    _Bool is_owner_;
};

struct TimeUtilGeneric<std::__1::chrono::steady_clock> {
    CDUnknownFunctionPointerType *_field1;
};

struct TimestampAligner {
    int _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct Timing {
    unsigned char _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
};

struct TimingFrameTriggerThresholds {
    long long _field1;
    unsigned short _field2;
};

struct TouchGesturesDataProvider;

struct TraceEvent {
    unsigned char _field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field5;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field6;
    struct map<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData, std::__1::less<proxygen::TraceFieldType>, std::__1::allocator<std::__1::pair<const proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>>> _field7;
};

struct TraceEventObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct TrackerKCF;

struct TrackingControllerFactory;

struct TransportFactoryInterface;

struct TsCounter;

struct TsCounterStorageManager;

struct TsDataLogHeader;

struct TsLogCompactMemoryStorage;

struct TsLogCompactStorage;

struct TslogFactory;

struct TslogStreamFactory;

struct TurboModule;

struct TurnCustomizer {
    CDUnknownFunctionPointerType *_field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct URL {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    unsigned short _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
    _Bool _field8;
};

struct UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>;

struct UpdatableDataProviderCreator<msqrd::services::IVideoDataService>;

struct Vector<dflatbuffers::Offset<facebook::keyframes::Tween>> {
    unsigned int _field1;
};

struct Vector<float> {
    unsigned int _field1;
};

struct Version {
    struct shared_ref<msqrd::versioning::Version::VersionData_> _field1;
};

struct VersionData_;

struct VersionNumber {
    unsigned int _field1;
    unsigned char _field2;
};

struct VersionedModelCacheBase {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ref<facebook::cameracore::ardelivery::CapabilityModelTypeSerializer> _field2;
    struct unique_ref<facebook::cameracore::ardelivery::VersionedModelCacheImpl, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheImpl>> _field3;
};

struct VersionedModelCacheImpl;

struct Video {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoAdapter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct optional<long long> _field9;
    struct optional<std::__1::pair<int, int>> _field10;
    struct optional<int> _field11;
    struct optional<std::__1::pair<int, int>> _field12;
    struct optional<int> _field13;
    struct optional<int> _field14;
    int _field15;
    int _field16;
    int _field17;
    struct CriticalSection _field18;
};

struct VideoBroadcaster {
    CDUnknownFunctionPointerType *_field1;
    struct ThreadChecker _field2;
    struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct ThreadChecker _field5;
    struct CriticalSection _field6;
    struct VideoSinkWants _field7;
    struct scoped_refptr<webrtc::VideoFrameBuffer> _field8;
};

struct VideoCaptureCapability {
    int width;
    int height;
    int maxFPS;
    int videoType;
    _Bool interlaced;
};

struct VideoCaptureIos {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    char *_field3;
    struct CriticalSection _field4;
    struct VideoCaptureCapability _field5;
    long long _field6;
    long long _field7;
    VideoSinkInterface_a6f4a563 *_field8;
    long long _field9;
    long long _field10[90];
    int _field11;
    _Bool _field12;
    id _field13;
    _Bool _field14;
    struct VideoCaptureCapability _field15;
};

struct VideoCodec {
    int _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    _Bool _field10;
    unsigned int _field11;
    unsigned char _field12;
    struct SpatialLayer _field13[4];
    struct SpatialLayer _field14[5];
    int _field15;
    _Bool _field16;
    struct TimingFrameTriggerThresholds _field17;
    union VideoCodecUnion _field18;
};

struct VideoCodecH264 {
    _Bool _field1;
    int _field2;
    char *_field3;
    unsigned long long _field4;
    char *_field5;
    unsigned long long _field6;
    int _field7;
};

struct VideoCodecH265 {
    _Bool _field1;
    int _field2;
};

struct VideoCodecVP8 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoCodecVP9 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    _Bool _field9;
    int _field10;
};

struct VideoConfig {
    int width;
    int height;
    int bitRate;
    double dataRateToTargetRateRatio;
    int fps;
    _Bool allowBFrames;
    int keyFrameIntervalFrames;
    int keyFrameIntervalSeconds;
    _Bool useMainProfile;
    unsigned char codecType;
};

struct VideoDataProvider;

struct VideoDecoder;

struct VideoDecoderFactory;

struct VideoEncoder;

struct VideoEncoderFactory;

struct VideoFrame {
    struct shared_ptr<msqrd::renderer::ITexture> _field1;
    struct duration<long long, std::__1::ratio<1, 1000>> _field2;
};

struct VideoFrameBuffer;

struct VideoPacketizer;

struct VideoPacketizerFactory;

struct VideoParams;

struct VideoProtocolEventLogger;

struct VideoProtocolEventProcessor;

struct VideoQualityTypeWrapper {
    int qualityType_;
};

struct VideoRendererAdapter;

struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoSinkWants {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    struct optional<int> _field4;
    int _field5;
};

struct VideoTrackInterface;

struct VideoTrackSourceInterface;

struct ViewReusePoolMap {
    struct unordered_map<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool, std::__1::hash<Class<BKBloksComponentProtocol>>, std::__1::equal_to<Class<BKBloksComponentProtocol>>, std::__1::allocator<std::__1::pair<const Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>>> map;
    struct vector<UIView *, std::__1::allocator<UIView *>> vendedViews;
};

struct WatchEntry;

struct WeakHolder {
    id _field1;
};

struct WhistleConnectionFactory;

struct XAnalytics;

struct YGValue {
    float value;
    int unit;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _EAGLContextPrivate;

struct _GLKMatrix4 {
    float m[16];
};

struct _GLKVector2 {
    float _field1[2];
};

struct _GLKVector3 {
    float v[3];
};

struct _GLKVector4 {
    float v[4];
};

struct _IGRange {
    double location;
    double length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TagPolicyState {
    long long persisted;
    long long selected;
};

struct __assoc_state<std::__1::basic_string<char>>;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> *_field1;
};

struct __list_node_base<rtc::Message, void *> {
    struct __list_node_base<rtc::Message, void *> *_field1;
    struct __list_node_base<rtc::Message, void *> *_field2;
};

struct __list_node_base<rtc::_SendMessage, void *> {
    struct __list_node_base<rtc::_SendMessage, void *> *_field1;
    struct __list_node_base<rtc::_SendMessage, void *> *_field2;
};

struct __list_node_base<sigslot::_opaque_connection, void *> {
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field2;
};

struct __list_node_base<webrtc::ObserverInterface *, void *> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field1;
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _ftsent;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct a8;

struct aligned_storage<16, 8> {
    union data_t data_;
};

struct aligned_storage<24, 8> {
    union data_t _field1;
};

struct aligned_storage<8, 8> {
    union data_t _field1;
};

struct array<double, 4>;

struct array<double, 9>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct bitset<8> {
    unsigned long long _field1;
};

struct default_initialized_primitive<bool, false> {
    _Bool value_;
};

struct default_initialized_primitive<bool, true> {
    _Bool value_;
};

struct default_initialized_primitive<unsigned int, 0> {
    unsigned int value_;
};

struct deque<id, std::__1::allocator<id>> {
    struct __split_buffer<__strong id *, std::__1::allocator<__strong id *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<__strong id **, std::__1::allocator<__strong id *>> {
            id **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<id>> {
        unsigned long long __value_;
    } __size_;
};

struct dummy_type {
    struct empty_struct data[8];
};

struct duration<double, std::__1::ratio<1, 1>> {
    double __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
};

struct empty_struct;

struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> {
    struct Impl {
        basic_string_90719d97 **_field1;
        basic_string_90719d97 **_field2;
        basic_string_90719d97 **_field3;
    } _field1;
};

struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> {
    struct Impl {
        unsigned char *_field1;
        unsigned char *_field2;
        unsigned char *_field3;
    } _field1;
};

struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct Impl {
        basic_string_90719d97 *_field1;
        basic_string_90719d97 *_field2;
        basic_string_90719d97 *_field3;
    } _field1;
};

struct function<folly::dynamic (folly::dynamic)> {
    struct type _field1;
    struct __base<folly::dynamic (folly::dynamic)> *_field2;
};

struct function<long long ()> {
    struct type _field1;
    struct __base<long long ()> *_field2;
};

struct function<proxygen::httpclient::RequestHandlerFactory *()> {
    struct type _field1;
    struct __base<proxygen::httpclient::RequestHandlerFactory *()> *_field2;
};

struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
    struct type _field1;
    struct __base<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> *_field2;
};

struct future<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> {
    struct __assoc_state<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct internal_state;

struct less<rtc::DelayedMessage>;

struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> {
    unsigned int __x_;
};

struct list<rtc::Message, std::__1::allocator<rtc::Message>> {
    struct __list_node_base<rtc::Message, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::Message, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> {
    struct __list_node_base<rtc::_SendMessage, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::_SendMessage, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> {
    struct __list_node_base<sigslot::_opaque_connection, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<webrtc::ObserverInterface *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct malloc_introspection_t;

struct map<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>, BKBloksContextStateKeyComparator, std::__1::allocator<std::__1::pair<NSNumber *const, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>>> {
    struct __tree<std::__1::__value_type<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>, std::__1::__map_value_compare<NSNumber *, std::__1::__value_type<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>, BKBloksContextStateKeyComparator, true>, std::__1::allocator<std::__1::__value_type<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<NSNumber *, std::__1::__value_type<NSNumber *, std::__1::shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>>>, BKBloksContextStateKeyComparator, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>, std::__1::less<msqrd::fx::model::DeviceOutput>, std::__1::allocator<std::__1::pair<const msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>>> {
    struct __tree<std::__1::__value_type<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>, std::__1::__map_value_compare<msqrd::fx::model::DeviceOutput, std::__1::__value_type<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>, std::__1::less<msqrd::fx::model::DeviceOutput>, true>, std::__1::allocator<std::__1::__value_type<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<msqrd::fx::model::DeviceOutput, std::__1::__value_type<msqrd::fx::model::DeviceOutput, std::__1::weak_ptr<msqrd::fx::IViewport>>, std::__1::less<msqrd::fx::model::DeviceOutput>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData, std::__1::less<proxygen::TraceFieldType>, std::__1::allocator<std::__1::pair<const proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>>> {
    struct __tree<std::__1::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::__1::__map_value_compare<proxygen::TraceFieldType, std::__1::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::__1::less<proxygen::TraceFieldType>, true>, std::__1::allocator<std::__1::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<proxygen::TraceFieldType, std::__1::__value_type<proxygen::TraceFieldType, proxygen::TraceEvent::MetaData>, std::__1::less<proxygen::TraceFieldType>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
    struct __tree<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>, std::__1::allocator<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct multiset<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> {
    struct __tree<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<proxygen::battery::RadioMonitor::TransferData, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, proxygen::battery::RadioMonitor::sortByStartTime> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opaqueCMSampleBuffer;

struct optional<RTCVideoRotation> {
    _Bool engaged_;
    CDUnion_019de37f ;
};

struct optional<bool> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        _Bool _field2;
    } _field2;
};

struct optional<double> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        double _field2;
    } _field2;
};

struct optional<int> {
    _Bool engaged_;
    CDUnion_1bb239ac ;
};

struct optional<long long> {
    _Bool _field1;
    CDUnion_019de37f _field2;
};

struct optional<rtc::AdapterType> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<rtc::IntervalRange> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct IntervalRange _field2;
    } _field2;
};

struct optional<std::__1::pair<int, int>> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct pair<int, int> _field2;
    } _field2;
};

struct optional<unsigned int> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        unsigned int _field2;
    } _field2;
};

struct optional<webrtc::ColorSpace> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct ColorSpace _field2;
    } _field2;
};

struct optional<webrtc::CryptoOptions> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct CryptoOptions _field2;
    } _field2;
};

struct optional<webrtc::DtxStatus> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
};

struct optional<webrtc::HdrMetadata> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct HdrMetadata _field2;
    } _field2;
};

struct optional<webrtc::PpsParser::PpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct PpsState data_;
    } ;
};

struct optional<webrtc::RtpFecParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpFecParameters _field2;
    } _field2;
};

struct optional<webrtc::RtpRtxParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpRtxParameters _field2;
    } _field2;
};

struct optional<webrtc::SpsParser::SpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct SpsState data_;
    } ;
};

struct optional<webrtc::VideoTrackSourceInterface::Stats> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct Stats _field2;
    } _field2;
};

struct pair<FBMPVideoData *, FBMPDataMetadata> {
    FBMPVideoData *first;
    struct FBMPDataMetadata second;
};

struct pair<NSSet<FBARModelMetadataRequest *>*, NSSet<NSNumber *>*> {
    id _field1;
    id _field2;
};

struct pair<id<FBCameraCaptureManaging>, FBARCameraSessionType> {
    id _field1;
    unsigned char _field2;
};

struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
};

struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>;

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>;

struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>;

struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>;

struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>;

struct plain_array<float, 2, 0, 0> {
    float _field1[2];
};

struct promise<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *__state_;
};

struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>;

struct queue<id, std::__1::deque<id, std::__1::allocator<id>>> {
    struct deque<id, std::__1::allocator<id>> c;
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct scoped_refptr<rtc::RTCCertificate>;

struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> {
    struct RefCountedObject<rtc::BufferT<unsigned char, false>> *_field1;
};

struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
};

struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
};

struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
};

struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
};

struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
};

struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
};

struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::StatsReport::IdBase> {
    struct IdBase *_field1;
};

struct scoped_refptr<webrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *_field1;
};

struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
};

struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
};

struct set<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<double, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<std::__1::pair<long, long>, std::__1::less<std::__1::pair<long, long>>, std::__1::allocator<std::__1::pair<long, long>>> {
    struct __tree<std::__1::pair<long, long>, std::__1::less<std::__1::pair<long, long>>, std::__1::allocator<std::__1::pair<long, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<long, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::pair<long, long>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_future<int> {
    struct __assoc_state<int> *_field1;
};

struct shared_future<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *_field1;
};

struct shared_future<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> {
    struct __assoc_state<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> *_field1;
};

struct shared_ptr<EffectStateListener> {
    struct EffectStateListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Functional::PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *>> {
    struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBLoomQPLListener> {
    struct FBLoomQPLListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelConnectEventObserver> {
    struct FBMQTTChannelConnectEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelConnectionStateObserver> {
    struct FBMQTTChannelConnectionStateObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelEventLogger> {
    struct FBMQTTChannelEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelPublishEventObserver> {
    struct FBMQTTChannelPublishEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelSubscribeEventObserver> {
    struct FBMQTTChannelSubscribeEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Lispy::FunctionRef> {
    struct FunctionRef *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<RtmpSessionCallback> {
    struct RtmpSessionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<bool> {
    _Bool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<boost::variant<std::__1::shared_ptr<Lispy::FunctionCall>, Lispy::LoadArgument, boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>> {
    variant_425e2c6c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::attribution::EffectAttribution> {
    struct EffectAttribution *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::versioning::Version> {
    struct Version *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<BKBloksLayoutChild, std::__1::allocator<BKBloksLayoutChild>>> {
    struct vector<BKBloksLayoutChild, std::__1::allocator<BKBloksLayoutChild>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor>> {
    struct FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::DualTexture> {
    struct DualTexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::EffectAssetLoader> {
    struct EffectAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> {
    struct LockedPixelBuffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::arengineservices::ShaderLogger> {
    struct ShaderLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::AudioPlatformComponentHostImpl> {
    struct AudioPlatformComponentHostImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::CaptureEventInput> {
    struct CaptureEventInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::GestureEventServiceCreator> {
    struct GestureEventServiceCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::PlatformSLAMDataInput> {
    struct PlatformSLAMDataInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::FBAudioFileReader<short>> {
    struct FBAudioFileReader<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::bufferpool::BufferPool> {
    struct BufferPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::ARClassContext> {
    struct ARClassContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::ARClassSource> {
    struct ARClassSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassConfigSource> {
    struct IARClassConfigSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassPersistentStore> {
    struct IARClassPersistentStore *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassRemoteSource> {
    struct IARClassRemoteSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::ardelivery::AssetsManager> {
    struct AssetsManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::CapabilityModelTypeSerializer> {
    struct CapabilityModelTypeSerializer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::ardelivery::IBundleFetcher> {
    struct IBundleFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::IFileCache> {
    struct IFileCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::ModelPathsBuilder> {
    struct ModelPathsBuilder *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase> {
    struct VersionedModelCacheBase *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cp::fusion::FusionBuffer> {
    struct FusionBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::fusion::util::DispatchWorker> {
    struct DispatchWorker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::Stabilizer> {
    struct Stabilizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerResult> {
    struct StabilizerResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerSettings> {
    struct StabilizerSettings *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::graphics::GPUTimer> {
    struct GPUTimer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::AsyncExecutor> {
    struct AsyncExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor> {
    struct InlineSerialExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> {
    struct SerialDispatchQueueExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> {
    struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithm> {
    struct AdaptiveBitrateAlgorithm *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> {
    struct AdaptiveBitrateAlgorithmFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateInputParameterProcessor> {
    struct AdaptiveBitrateInputParameterProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizer> {
    struct AudioPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::BitrateAdjuster> {
    struct BitrateAdjuster *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::LiveStreamingTslogFactory> {
    struct LiveStreamingTslogFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::TslogFactory> {
    struct TslogFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoFrame> {
    struct VideoFrame *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizer> {
    struct VideoPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoProtocolEventLogger> {
    struct VideoProtocolEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoProtocolEventProcessor> {
    struct VideoProtocolEventProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics> {
    struct Analytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::H2PubSubConnectionFactory> {
    struct H2PubSubConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics> {
    struct MQTTChannelAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy> {
    struct MQTTChannelCoordinatorProxy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::WhistleConnectionFactory> {
    struct WhistleConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::pointtools::PointCloud<facebook::pointtools::Point3<float>>> {
    struct PointCloud<facebook::pointtools::Point3<float>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::Instance> {
    struct Instance *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::JSCallInvoker> {
    struct JSCallInvoker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::MessageQueueThread> {
    struct MessageQueueThread *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::RCTMessageThread> {
    struct RCTMessageThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::TurboModule> {
    struct TurboModule *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::xanalytics::XAnalytics> {
    struct XAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<folly::Executor> {
    struct Executor *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::ITexture> {
    struct ITexture *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::opengl::Device> {
    struct Device *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> {
    struct IEngineAnalyticsLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::asset::AssetParserProvider> {
    struct AssetParserProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::asset::IAsyncAssetLoader> {
    struct IAsyncAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::capture::ICaptureEventInput> {
    struct ICaptureEventInput *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct IPlatformSLAMDataInput *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::IVideoDataProvider> {
    struct IVideoDataProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::VideoDataProvider> {
    struct VideoDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct PlatformEventsInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::effect_state::EffectStateManager> {
    struct EffectStateManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::effect_state::IEffectStateListener> {
    struct IEffectStateListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::experiment::IExperimentConfig> {
    struct IExperimentConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::FaceMeshDebugger> {
    struct FaceMeshDebugger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IAsyncScriptingHost> {
    struct IAsyncScriptingHost *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IScriptingHost> {
    struct IScriptingHost *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::RenderSession> {
    struct RenderSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::scripting::reflection::AsyncInteropContext> {
    struct AsyncInteropContext *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::location::LocationDataProvider> {
    struct LocationDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::logging::BufferPoolStatisticsLogger> {
    struct BufferPoolStatisticsLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::logging::IBugReportLogger> {
    struct IBugReportLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::logging::IRawEventLogger> {
    struct IRawEventLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::logging::RenderTimeLogger> {
    struct RenderTimeLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::platform::FrameDurationTracker> {
    struct FrameDurationTracker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::FrameRateTracker> {
    struct FrameRateTracker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::IComponentEvaluationLogger> {
    struct IComponentEvaluationLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::IDeformationEvents> {
    struct IDeformationEvents *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::platform::IRenderSessionLogger> {
    struct IRenderSessionLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::TimeProvider> {
    struct TimeProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::player::ISessionPlayer> {
    struct ISessionPlayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::renderer::ITexture> {
    struct ITexture *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::scene::RenderPipelineCollection> {
    struct RenderPipelineCollection *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::scene::VideoParams> {
    struct VideoParams *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService>> {
    struct BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::IMotionDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::EffectController> {
    struct EffectController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::IEffectSessionListener> {
    struct IEffectSessionListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IARObjectManagerService>> {
    struct ServiceCreator<msqrd::services::IARObjectManagerService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>> {
    struct ServiceCreator<msqrd::services::ICameraControlService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>> {
    struct ServiceCreator<msqrd::services::ICameraShareService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>> {
    struct ServiceCreator<msqrd::services::ICreativeToolProxyService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>> {
    struct ServiceCreator<msqrd::services::IDateService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>> {
    struct ServiceCreator<msqrd::services::IDeepLinkAssetProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IExternalAssetProvider>> {
    struct ServiceCreator<msqrd::services::IExternalAssetProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHTTPClientService>> {
    struct ServiceCreator<msqrd::services::IHTTPClientService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHapticService>> {
    struct ServiceCreator<msqrd::services::IHapticService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>> {
    struct ServiceCreator<msqrd::services::IIdentityService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>> {
    struct ServiceCreator<msqrd::services::IInterEffectLinkingService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>> {
    struct ServiceCreator<msqrd::services::ILiveStreamingService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>> {
    struct ServiceCreator<msqrd::services::ILocaleService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>> {
    struct ServiceCreator<msqrd::services::IMusicService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>> {
    struct ServiceCreator<msqrd::services::INativeNavigationService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>> {
    struct ServiceCreator<msqrd::services::INativeUIControlService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>> {
    struct ServiceCreator<msqrd::services::IPersonalizationService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPhysicsService>> {
    struct ServiceCreator<msqrd::services::IPhysicsService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>> {
    struct ServiceCreator<msqrd::services::IRandomGeneratorService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>> {
    struct ServiceCreator<msqrd::services::IScriptAnalyticsService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IStyleTransferProvider>> {
    struct ServiceCreator<msqrd::services::IStyleTransferProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ITargetEffectService>> {
    struct ServiceCreator<msqrd::services::ITargetEffectService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceHost> {
    struct ServiceHost *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>> {
    struct UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>> {
    struct UpdatableDataProviderCreator<msqrd::services::IVideoDataService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::IServiceAnalyticsLogger> {
    struct IServiceAnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::IServiceConfiguration> {
    struct IServiceConfiguration *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::audio::IAudioFileSink> {
    struct IAudioFileSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::audio::IAudioPlatformComponentHost> {
    struct IAudioPlatformComponentHost *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::audio::IAudioServiceController> {
    struct IAudioServiceController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::audio::IMicrophoneSink> {
    struct IMicrophoneSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::feedback::ServiceFeedbackGenerator> {
    struct ServiceFeedbackGenerator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::network::INetworkClientSource> {
    struct INetworkClientSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::persistence::IPersistenceServiceDelegate> {
    struct IPersistenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::standalone_tracking::ITrackingController> {
    struct ITrackingController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::tree::Node<msqrd::scene::Node>> {
    struct Node<msqrd::scene::Node> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::versioning::Version::VersionData_> {
    struct VersionData_ *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<proxygen::httpclient::AnalyticsLogger> {
    struct AnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rtc::tslog::TimeSeriesStream> {
    struct TimeSeriesStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TsCounterStorageManager> {
    struct TsCounterStorageManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rtc::tslog::TsLogCompactMemoryStorage> {
    struct TsLogCompactMemoryStorage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TsLogCompactStorage> {
    struct TsLogCompactStorage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>> {
    struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>> {
    vector_c1919679 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>> {
    struct vector<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>> {
    struct vector<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>> {
    struct vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    vector_7984f87c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unsigned long> {
    unsigned long long *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ref<const msqrd::manifest::Manifest> {
    shared_ptr_8f3f58d1 _field1;
};

struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
};

struct shared_ref<facebook::cameracore::arclass::ARClassContext> {
    struct shared_ptr<facebook::cameracore::arclass::ARClassContext> _field1;
};

struct shared_ref<facebook::cameracore::ardelivery::CapabilityModelTypeSerializer> {
    struct shared_ptr<facebook::cameracore::ardelivery::CapabilityModelTypeSerializer> _field1;
};

struct shared_ref<folly::Executor> {
    struct shared_ptr<folly::Executor> _field1;
};

struct shared_ref<igl::opengl::Device> {
    struct shared_ptr<igl::opengl::Device> _field1;
};

struct shared_ref<msqrd::analytics::IEngineAnalyticsLogger> {
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _field1;
};

struct shared_ref<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> _field1;
};

struct shared_ref<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> _field1;
};

struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
};

struct shared_ref<msqrd::logging::BufferPoolStatisticsLogger> {
    struct shared_ptr<msqrd::logging::BufferPoolStatisticsLogger> _field1;
};

struct shared_ref<msqrd::logging::IBugReportLogger> {
    struct shared_ptr<msqrd::logging::IBugReportLogger> _field1;
};

struct shared_ref<msqrd::logging::IRawEventLogger> {
    struct shared_ptr<msqrd::logging::IRawEventLogger> _field1;
};

struct shared_ref<msqrd::logging::RenderTimeLogger> {
    struct shared_ptr<msqrd::logging::RenderTimeLogger> _field1;
};

struct shared_ref<msqrd::platform::FrameRateTracker> {
    struct shared_ptr<msqrd::platform::FrameRateTracker> _field1;
};

struct shared_ref<msqrd::platform::IComponentEvaluationLogger> {
    struct shared_ptr<msqrd::platform::IComponentEvaluationLogger> _field1;
};

struct shared_ref<msqrd::platform::IRenderSessionLogger> {
    struct shared_ptr<msqrd::platform::IRenderSessionLogger> _field1;
};

struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
};

struct shared_ref<msqrd::scene::RenderPipelineCollection> {
    struct shared_ptr<msqrd::scene::RenderPipelineCollection> _field1;
};

struct shared_ref<msqrd::scene::VideoParams> {
    struct shared_ptr<msqrd::scene::VideoParams> _field1;
};

struct shared_ref<msqrd::servicehost::ARServiceCreator>;

struct shared_ref<msqrd::servicehost::EffectController> {
    struct shared_ptr<msqrd::servicehost::EffectController> _field1;
};

struct shared_ref<msqrd::servicehost::IEffectSessionListener> {
    struct shared_ptr<msqrd::servicehost::IEffectSessionListener> _field1;
};

struct shared_ref<msqrd::servicehost::ServiceHost> {
    struct shared_ptr<msqrd::servicehost::ServiceHost> _field1;
};

struct shared_ref<msqrd::services::IServiceAnalyticsLogger> {
    struct shared_ptr<msqrd::services::IServiceAnalyticsLogger> _field1;
};

struct shared_ref<msqrd::services::IServiceConfiguration> {
    struct shared_ptr<msqrd::services::IServiceConfiguration> _field1;
};

struct shared_ref<msqrd::services::audio::IAudioPlatformComponentHost> {
    shared_ptr_27fa6347 _field1;
};

struct shared_ref<msqrd::services::network::INetworkClientSource> {
    struct shared_ptr<msqrd::services::network::INetworkClientSource> _field1;
};

struct shared_ref<msqrd::standalone_tracking::ITrackingController> {
    struct shared_ptr<msqrd::standalone_tracking::ITrackingController> _field1;
};

struct shared_ref<msqrd::versioning::Version::VersionData_> {
    struct shared_ptr<msqrd::versioning::Version::VersionData_> _field1;
};

struct signal_with_thread_policy<sigslot::single_threaded> {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> _field3;
    struct __list_iterator<sigslot::_opaque_connection, void *> {
        struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    } _field4;
    _Bool _field5;
};

struct sockaddr_storage {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[6];
    long long _field4;
    char _field5[112];
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tmat4x4<float, glm::packed_highp> {
    struct tvec4<float, glm::packed_highp> value[4];
};

struct tvec4<float, glm::packed_highp> {
    union {
        CDStruct_f2e236b6 ;
        CDStruct_83984b6f ;
        CDStruct_f8b81486 ;
        struct type data;
    } ;
};

struct type {
    unsigned char data[24];
};

struct uniform_int_distribution<unsigned int> {
    struct param_type {
        unsigned int __a_;
        unsigned int __b_;
    } __p_;
};

struct uniform_int_distribution<unsigned long long> {
    struct param_type {
        unsigned long long __a_;
        unsigned long long __b_;
    } __p_;
};

struct unique_ptr<AutoreleaseLoopCallback, std::__1::default_delete<AutoreleaseLoopCallback>> {
    struct __compressed_pair<AutoreleaseLoopCallback *, std::__1::default_delete<AutoreleaseLoopCallback>> {
        struct AutoreleaseLoopCallback *__value_;
    } __ptr_;
};

struct unique_ptr<FBWhistleConnectionStatsLogger, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
    struct __compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
        struct FBWhistleConnectionStatsLogger *__value_;
    } __ptr_;
};

struct unique_ptr<const instagram::mobile::memory::IGAddressRangeScanner, std::__1::default_delete<const instagram::mobile::memory::IGAddressRangeScanner>> {
    struct __compressed_pair<const instagram::mobile::memory::IGAddressRangeScanner *, std::__1::default_delete<const instagram::mobile::memory::IGAddressRangeScanner>> {
        struct IGAddressRangeScanner *__value_;
    } __ptr_;
};

struct unique_ptr<const instagram::mobile::memory::IGMallocDiskLogger, std::__1::default_delete<const instagram::mobile::memory::IGMallocDiskLogger>> {
    struct __compressed_pair<const instagram::mobile::memory::IGMallocDiskLogger *, std::__1::default_delete<const instagram::mobile::memory::IGMallocDiskLogger>> {
        struct IGMallocDiskLogger *__value_;
    } __ptr_;
};

struct unique_ptr<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct __compressed_pair<const msqrd::services::IEffectDataSnapshotterCreator *, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
        struct IEffectDataSnapshotterCreator *_field1;
    } _field1;
};

struct unique_ptr<facebook::ar::profiler::Profiler, std::__1::default_delete<facebook::ar::profiler::Profiler>> {
    struct __compressed_pair<facebook::ar::profiler::Profiler *, std::__1::default_delete<facebook::ar::profiler::Profiler>> {
        struct Profiler *_field1;
    } _field1;
};

struct unique_ptr<facebook::arengineservices::ScriptLogger, std::__1::default_delete<facebook::arengineservices::ScriptLogger>> {
    struct __compressed_pair<facebook::arengineservices::ScriptLogger *, std::__1::default_delete<facebook::arengineservices::ScriptLogger>> {
        struct ScriptLogger *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::arlink::ARLinkScanner, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
    struct __compressed_pair<facebook::arlink::ARLinkScanner *, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
        struct ARLinkScanner *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::VersionedModelCacheImpl, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheImpl>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::VersionedModelCacheImpl *, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheImpl>> {
        struct VersionedModelCacheImpl *_field1;
    } _field1;
};

struct unique_ptr<facebook::cp::regiontracking::TrackerKCF, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
    struct __compressed_pair<facebook::cp::regiontracking::TrackerKCF *, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
        struct TrackerKCF *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::xplat::executor::InlineSyncExecutor, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::InlineSyncExecutor *, std::__1::default_delete<facebook::mobile::xplat::executor::InlineSyncExecutor>> {
        struct InlineSyncExecutor *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>;

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonStack, std::__1::default_delete<facebook::tigon::TigonStack>> {
    struct __compressed_pair<facebook::tigon::TigonStack *, std::__1::default_delete<facebook::tigon::TigonStack>> {
        struct TigonStack *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::timeinappcore::TimeInAppController, std::__1::default_delete<facebook::timeinappcore::TimeInAppController>> {
    struct __compressed_pair<facebook::timeinappcore::TimeInAppController *, std::__1::default_delete<facebook::timeinappcore::TimeInAppController>> {
        struct TimeInAppController *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
        struct Method *__value_;
    } __ptr_;
};

struct unique_ptr<folly::Executor, std::__1::default_delete<folly::Executor>> {
    struct __compressed_pair<folly::Executor *, std::__1::default_delete<folly::Executor>> {
        struct Executor *_field1;
    } _field1;
};

struct unique_ptr<folly::IOBuf, std::__1::default_delete<folly::IOBuf>> {
    struct __compressed_pair<folly::IOBuf *, std::__1::default_delete<folly::IOBuf>> {
        struct IOBuf *_field1;
    } _field1;
};

struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> {
    struct __compressed_pair<msqrd::fx::Effect *, std::__1::default_delete<msqrd::fx::Effect>> {
        struct Effect *_field1;
    } _field1;
};

struct unique_ptr<msqrd::fx::GraphicsEngine, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
    struct __compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
        struct GraphicsEngine *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::logger::AREngineLogger, std::__1::default_delete<msqrd::logger::AREngineLogger>> {
    struct __compressed_pair<msqrd::logger::AREngineLogger *, std::__1::default_delete<msqrd::logger::AREngineLogger>> {
        struct AREngineLogger *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::plugins::IPluginConfiguration, std::__1::default_delete<msqrd::plugins::IPluginConfiguration>> {
    struct __compressed_pair<msqrd::plugins::IPluginConfiguration *, std::__1::default_delete<msqrd::plugins::IPluginConfiguration>> {
        struct IPluginConfiguration *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::renderer::gl::IProgramObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> {
    struct __compressed_pair<msqrd::renderer::gl::IProgramObjectProvider *, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> {
        struct IProgramObjectProvider *_field1;
    } _field1;
};

struct unique_ptr<msqrd::renderer::gl::IShaderObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> {
    struct __compressed_pair<msqrd::renderer::gl::IShaderObjectProvider *, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> {
        struct IShaderObjectProvider *_field1;
    } _field1;
};

struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct __compressed_pair<msqrd::services::network::INetworkRequestRedirectHandler *, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
        struct INetworkRequestRedirectHandler *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::services::network::INetworkResult, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
    struct __compressed_pair<msqrd::services::network::INetworkResult *, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
        struct INetworkResult *_field1;
    } _field1;
};

struct unique_ptr<msqrd::standalone_tracking::TrackingControllerFactory, std::__1::default_delete<msqrd::standalone_tracking::TrackingControllerFactory>> {
    struct __compressed_pair<msqrd::standalone_tracking::TrackingControllerFactory *, std::__1::default_delete<msqrd::standalone_tracking::TrackingControllerFactory>> {
        struct TrackingControllerFactory *__value_;
    } __ptr_;
};

struct unique_ptr<proxygen::battery::RadioStatusObserver, std::__1::default_delete<proxygen::battery::RadioStatusObserver>> {
    struct __compressed_pair<proxygen::battery::RadioStatusObserver *, std::__1::default_delete<proxygen::battery::RadioStatusObserver>> {
        struct RadioStatusObserver *__value_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::AnalyticsLogger, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
    struct __compressed_pair<proxygen::httpclient::AnalyticsLogger *, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
        struct AnalyticsLogger *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
    struct __compressed_pair<proxygen::httpclient::RequestHandlerFactory *, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
        struct RequestHandlerFactory *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::NetworkStatusMonitor, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::NetworkStatusMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::NetworkStatusMonitor>> {
        struct NetworkStatusMonitor *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::BitrateAllocationStrategy, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<rtc::BitrateAllocationStrategy *, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
};

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::IntervalRange, std::__1::default_delete<rtc::IntervalRange>> {
    struct __compressed_pair<rtc::IntervalRange *, std::__1::default_delete<rtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
};

struct unique_ptr<rtc::LogSink, std::__1::default_delete<rtc::LogSink>> {
    struct __compressed_pair<rtc::LogSink *, std::__1::default_delete<rtc::LogSink>> {
        struct LogSink *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> {
    struct __compressed_pair<rtc::SocketServer *, std::__1::default_delete<rtc::SocketServer>> {
        struct SocketServer *_field1;
    } _field1;
};

struct unique_ptr<rtc::Thread, std::__1::default_delete<rtc::Thread>> {
    struct __compressed_pair<rtc::Thread *, std::__1::default_delete<rtc::Thread>> {
        struct Thread *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
    struct __compressed_pair<rtc::tslog::TasksScheduler *, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
        struct TasksScheduler *_field1;
    } _field1;
};

struct unique_ptr<rtc::tslog::TimeSeriesLog, std::__1::default_delete<rtc::tslog::TimeSeriesLog>> {
    struct __compressed_pair<rtc::tslog::TimeSeriesLog *, std::__1::default_delete<rtc::tslog::TimeSeriesLog>> {
        struct TimeSeriesLog *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<webrtc::BitrateAdjuster, std::__1::default_delete<webrtc::BitrateAdjuster>> {
    struct __compressed_pair<webrtc::BitrateAdjuster *, std::__1::default_delete<webrtc::BitrateAdjuster>> {
        struct BitrateAdjuster *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataBuffer, std::__1::default_delete<webrtc::DataBuffer>> {
    struct __compressed_pair<webrtc::DataBuffer *, std::__1::default_delete<webrtc::DataBuffer>> {
        struct DataBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataChannelDelegateAdapter, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
    struct __compressed_pair<webrtc::DataChannelDelegateAdapter *, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
        struct DataChannelDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
};

struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::PeerConnectionDelegateAdapter, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
    struct __compressed_pair<webrtc::PeerConnectionDelegateAdapter *, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
        struct PeerConnectionDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
};

struct unique_ptr<webrtc::RtpReceiverDelegateAdapter, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
    struct __compressed_pair<webrtc::RtpReceiverDelegateAdapter *, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
        struct RtpReceiverDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoRendererAdapter, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
    struct __compressed_pair<webrtc::VideoRendererAdapter *, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
        struct VideoRendererAdapter *__value_;
    } __ptr_;
};

struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct unique_ptr<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::VersionedModelCacheImpl, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheImpl>> {
    struct unique_ptr<facebook::cameracore::ardelivery::VersionedModelCacheImpl, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheImpl>> _field1;
};

struct unique_ref<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> _field1;
};

struct unordered_map<BKBloksLayoutCacheKey, BKBloksLayout, std::__1::hash<BKBloksLayoutCacheKey>, std::__1::equal_to<BKBloksLayoutCacheKey>, std::__1::allocator<std::__1::pair<const BKBloksLayoutCacheKey, BKBloksLayout>>> {
    struct __hash_table<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, std::__1::__unordered_map_hasher<BKBloksLayoutCacheKey, std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, std::__1::hash<BKBloksLayoutCacheKey>, true>, std::__1::__unordered_map_equal<BKBloksLayoutCacheKey, std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, std::__1::equal_to<BKBloksLayoutCacheKey>, true>, std::__1::allocator<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<BKBloksLayoutCacheKey, std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, std::__1::hash<BKBloksLayoutCacheKey>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<BKBloksLayoutCacheKey, std::__1::__hash_value_type<BKBloksLayoutCacheKey, BKBloksLayout>, std::__1::equal_to<BKBloksLayoutCacheKey>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool, std::__1::hash<Class<BKBloksComponentProtocol>>, std::__1::equal_to<Class<BKBloksComponentProtocol>>, std::__1::allocator<std::__1::pair<const Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>>> {
    struct __hash_table<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, std::__1::__unordered_map_hasher<Class<BKBloksComponentProtocol>, std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, std::__1::hash<Class<BKBloksComponentProtocol>>, true>, std::__1::__unordered_map_equal<Class<BKBloksComponentProtocol>, std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, std::__1::equal_to<Class<BKBloksComponentProtocol>>, true>, std::__1::allocator<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class<BKBloksComponentProtocol>, std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, std::__1::hash<Class<BKBloksComponentProtocol>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<Class<BKBloksComponentProtocol>, std::__1::__hash_value_type<Class<BKBloksComponentProtocol>, BKBloks::ViewReusePool>, std::__1::equal_to<Class<BKBloksComponentProtocol>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>, std::__1::hash<FBARAssetType>, std::__1::equal_to<FBARAssetType>, std::__1::allocator<std::__1::pair<const FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::__unordered_map_hasher<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::hash<FBARAssetType>, true>, std::__1::__unordered_map_equal<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::equal_to<FBARAssetType>, true>, std::__1::allocator<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::hash<FBARAssetType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::equal_to<FBARAssetType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>, std::__1::hash<FBARVersionedCapabilities>, std::__1::equal_to<FBARVersionedCapabilities>, std::__1::allocator<std::__1::pair<const FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, std::__1::__unordered_map_hasher<FBARVersionedCapabilities, std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, std::__1::hash<FBARVersionedCapabilities>, true>, std::__1::__unordered_map_equal<FBARVersionedCapabilities, std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, std::__1::equal_to<FBARVersionedCapabilities>, true>, std::__1::allocator<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBARVersionedCapabilities, std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, std::__1::hash<FBARVersionedCapabilities>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBARVersionedCapabilities, std::__1::__hash_value_type<FBARVersionedCapabilities, std::__1::shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase>>, std::__1::equal_to<FBARVersionedCapabilities>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>, std::__1::hash<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, std::__1::equal_to<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, std::__1::allocator<std::__1::pair<facebook::h2PubSubClient::H2PubSubControlStreamManager *const, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>>> {
    struct __hash_table<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, std::__1::__unordered_map_hasher<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, std::__1::hash<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, true>, std::__1::__unordered_map_equal<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, std::__1::equal_to<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, true>, std::__1::allocator<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, std::__1::hash<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::__hash_value_type<facebook::h2PubSubClient::H2PubSubControlStreamManager *, std::__1::shared_ptr<facebook::h2PubSubClient::H2PubSubControlStreamManager>>, std::__1::equal_to<facebook::h2PubSubClient::H2PubSubControlStreamManager *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, FBMPInternalFilterPerf>>> {
    struct __hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr, std::__1::hash<msqrd::TypeId>, std::__1::equal_to<msqrd::TypeId>, std::__1::allocator<std::__1::pair<const msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> {
    struct __hash_table<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::__unordered_map_hasher<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::hash<msqrd::TypeId>, true>, std::__1::__unordered_map_equal<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::equal_to<msqrd::TypeId>, true>, std::__1::allocator<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::hash<msqrd::TypeId>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::equal_to<msqrd::TypeId>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>, std::__1::hash<msqrd::services::ServiceType::Enum>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, std::__1::allocator<std::__1::pair<const msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
    struct __hash_table<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>, std::__1::allocator<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem, std::__1::hash<IGWaterfallIndexPath>, std::__1::equal_to<std::__1::pair<long, long>>, std::__1::allocator<std::__1::pair<const std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, std::__1::__unordered_map_hasher<std::__1::pair<long, long>, std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, std::__1::hash<IGWaterfallIndexPath>, true>, std::__1::__unordered_map_equal<std::__1::pair<long, long>, std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, std::__1::equal_to<std::__1::pair<long, long>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<long, long>, std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, std::__1::hash<IGWaterfallIndexPath>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<long, long>, std::__1::__hash_value_type<std::__1::pair<long, long>, IGWaterfallLayoutCachedItem>, std::__1::equal_to<std::__1::pair<long, long>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct variant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusInterrupted, FBCamera::PerfStatusNoTracking> {
    int _field1;
    struct aligned_storage<8, 8> _field2;
};

struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
};

struct variant<std::__1::shared_ptr<Lispy::FunctionCall>, Lispy::LoadArgument, boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>> {
    int _field1;
    struct aligned_storage<24, 8> _field2;
};

struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>;

struct vector<BKBloksLayoutChild, std::__1::allocator<BKBloksLayoutChild>>;

struct vector<CaptureCompletionContext, std::__1::allocator<CaptureCompletionContext>> {
    struct CaptureCompletionContext *__begin_;
    struct CaptureCompletionContext *__end_;
    struct __compressed_pair<CaptureCompletionContext *, std::__1::allocator<CaptureCompletionContext>> {
        struct CaptureCompletionContext *__value_;
    } __end_cap_;
};

struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__value_;
    } __end_cap_;
};

struct vector<IGSectionEntry, std::__1::allocator<IGSectionEntry>> {
    struct IGSectionEntry *__begin_;
    struct IGSectionEntry *__end_;
    struct __compressed_pair<IGSectionEntry *, std::__1::allocator<IGSectionEntry>> {
        struct IGSectionEntry *__value_;
    } __end_cap_;
};

struct vector<IGWaterfallLayoutColumn, std::__1::allocator<IGWaterfallLayoutColumn>> {
    struct IGWaterfallLayoutColumn *_field1;
    struct IGWaterfallLayoutColumn *_field2;
    struct __compressed_pair<IGWaterfallLayoutColumn *, std::__1::allocator<IGWaterfallLayoutColumn>> {
        struct IGWaterfallLayoutColumn *_field1;
    } _field3;
};

struct vector<KFDecodedAsset *, std::__1::allocator<KFDecodedAsset *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<KFDecodedAsset *__strong *, std::__1::allocator<KFDecodedAsset *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<SectionInfo, std::__1::allocator<SectionInfo>> {
    struct SectionInfo *__begin_;
    struct SectionInfo *__end_;
    struct __compressed_pair<SectionInfo *, std::__1::allocator<SectionInfo>> {
        struct SectionInfo *__value_;
    } __end_cap_;
};

struct vector<UIView *, std::__1::allocator<UIView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UIView *__strong *, std::__1::allocator<UIView *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>> {
    struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field1;
    struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field2;
    struct __compressed_pair<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>*, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>> {
        struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>>;

struct vector<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>;

struct vector<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>;

struct vector<facebook::cameracore::ardelivery::LocalAsset, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> {
    struct LocalAsset *_field1;
    struct LocalAsset *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::LocalAsset *, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> {
        struct LocalAsset *_field1;
    } _field3;
};

struct vector<facebook::cp::fusion::Plane, std::__1::allocator<facebook::cp::fusion::Plane>> {
    struct Plane *_field1;
    struct Plane *_field2;
    struct __compressed_pair<facebook::cp::fusion::Plane *, std::__1::allocator<facebook::cp::fusion::Plane>> {
        struct Plane *_field1;
    } _field3;
};

struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>;

struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
    struct NetworkSpeedTestPingDetails *__begin_;
    struct NetworkSpeedTestPingDetails *__end_;
    struct __compressed_pair<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails *, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
        struct NetworkSpeedTestPingDetails *__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<msqrd::manifest::DynamicTextCapability, std::__1::allocator<msqrd::manifest::DynamicTextCapability>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<msqrd::manifest::DynamicTextCapability *, std::__1::allocator<msqrd::manifest::DynamicTextCapability>> {
        int *_field1;
    } _field3;
};

struct vector<msqrd::platform::IScriptingLogger::WatchEntry, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
    struct WatchEntry *__begin_;
    struct WatchEntry *__end_;
    struct __compressed_pair<msqrd::platform::IScriptingLogger::WatchEntry *, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
        struct WatchEntry *__value_;
    } __end_cap_;
};

struct vector<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> {
    struct shared_ref<msqrd::servicehost::ARServiceCreator> *__begin_;
    struct shared_ref<msqrd::servicehost::ARServiceCreator> *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> {
        struct shared_ref<msqrd::servicehost::ARServiceCreator> *__value_;
    } __end_cap_;
};

struct vector<proxygen::CircularLogSink::RequestResponseInfo, std::__1::allocator<proxygen::CircularLogSink::RequestResponseInfo>> {
    struct RequestResponseInfo *_field1;
    struct RequestResponseInfo *_field2;
    struct __compressed_pair<proxygen::CircularLogSink::RequestResponseInfo *, std::__1::allocator<proxygen::CircularLogSink::RequestResponseInfo>> {
        struct RequestResponseInfo *_field1;
    } _field3;
};

struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
};

struct vector<rtc::DelayedMessage, std::__1::allocator<rtc::DelayedMessage>> {
    struct DelayedMessage *_field1;
    struct DelayedMessage *_field2;
    struct __compressed_pair<rtc::DelayedMessage *, std::__1::allocator<rtc::DelayedMessage>> {
        struct DelayedMessage *_field1;
    } _field3;
};

struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
    struct SinkPair *_field1;
    struct SinkPair *_field2;
    struct __compressed_pair<rtc::VideoSourceBase::SinkPair *, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
        struct SinkPair *_field1;
    } _field3;
};

struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
    struct scoped_refptr<rtc::RTCCertificate> *_field1;
    struct scoped_refptr<rtc::RTCCertificate> *_field2;
    struct __compressed_pair<rtc::scoped_refptr<rtc::RTCCertificate>*, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
        struct scoped_refptr<rtc::RTCCertificate> *_field1;
    } _field3;
};

struct vector<rtc::tslog::TsCounter, std::__1::allocator<rtc::tslog::TsCounter>> {
    struct TsCounter *_field1;
    struct TsCounter *_field2;
    struct __compressed_pair<rtc::tslog::TsCounter *, std::__1::allocator<rtc::tslog::TsCounter>> {
        struct TsCounter *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__value_;
    } __end_cap_;
};

struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> {
    struct array<double, 4> *_field1;
    struct array<double, 4> *_field2;
    struct __compressed_pair<std::__1::array<double, 4>*, std::__1::allocator<std::__1::array<double, 4>>> {
        struct array<double, 4> *_field1;
    } _field3;
};

struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> {
    struct array<double, 9> *_field1;
    struct array<double, 9> *_field2;
    struct __compressed_pair<std::__1::array<double, 9>*, std::__1::allocator<std::__1::array<double, 9>>> {
        struct array<double, 9> *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__begin_;
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__end_;
    struct __compressed_pair<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>*, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
        struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<igl::IBuffer>, std::__1::allocator<std::__1::shared_ptr<igl::IBuffer>>> {
    shared_ptr_3ca5f01e *__begin_;
    shared_ptr_3ca5f01e *__end_;
    struct __compressed_pair<std::__1::shared_ptr<igl::IBuffer>*, std::__1::allocator<std::__1::shared_ptr<igl::IBuffer>>> {
        shared_ptr_3ca5f01e *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>*, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
        struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> {
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field1;
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>*, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> {
        struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<char, std::__1::allocator<char>>, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> {
    struct vector<char, std::__1::allocator<char>> *__begin_;
    struct vector<char, std::__1::allocator<char>> *__end_;
    struct __compressed_pair<std::__1::vector<char, std::__1::allocator<char>>*, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> {
        struct vector<char, std::__1::allocator<char>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>;

struct vector<std::__1::weak_ptr<msqrd::fx::Viewport>, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> {
    struct weak_ptr<msqrd::fx::Viewport> *_field1;
    struct weak_ptr<msqrd::fx::Viewport> *_field2;
    struct __compressed_pair<std::__1::weak_ptr<msqrd::fx::Viewport>*, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> {
        struct weak_ptr<msqrd::fx::Viewport> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
    struct IceServer *_field1;
    struct IceServer *_field2;
    struct __compressed_pair<webrtc::PeerConnectionInterface::IceServer *, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
        struct IceServer *_field1;
    } _field3;
};

struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> {
    struct RtcpFeedback *_field1;
    struct RtcpFeedback *_field2;
    struct __compressed_pair<webrtc::RtcpFeedback *, std::__1::allocator<webrtc::RtcpFeedback>> {
        struct RtcpFeedback *_field1;
    } _field3;
};

struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> {
    struct RtpCodecParameters *_field1;
    struct RtpCodecParameters *_field2;
    struct __compressed_pair<webrtc::RtpCodecParameters *, std::__1::allocator<webrtc::RtpCodecParameters>> {
        struct RtpCodecParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> {
    struct RtpEncodingParameters *_field1;
    struct RtpEncodingParameters *_field2;
    struct __compressed_pair<webrtc::RtpEncodingParameters *, std::__1::allocator<webrtc::RtpEncodingParameters>> {
        struct RtpEncodingParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> {
    struct RtpExtension *_field1;
    struct RtpExtension *_field2;
    struct __compressed_pair<webrtc::RtpExtension *, std::__1::allocator<webrtc::RtpExtension>> {
        struct RtpExtension *_field1;
    } _field3;
};

struct weak_ptr<msqrd::dataprovider::ILocationUpdateListener> {
    struct ILocationUpdateListener *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<msqrd::fx::Viewport>;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    int _field1;
    int _field2;
    int _field3;
} AudioConfig_348514e6;

typedef struct {
    int sampleRate;
    int bitRate;
    int channels;
} AudioConfig_f27b8135;

typedef struct {
    struct _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_67dca217;

typedef struct {
    union _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_8081ab9f;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    unsigned long long _field3;
    int _field4;
    double _field5;
} CDStruct_a23588fb;

typedef struct {
    _Bool sandboxEnabled;
    _Bool shouldSubscribeToLiveTopic;
    _Bool shouldAllow24hReplay;
    _Bool shouldLogRealtimeAnalytics;
    _Bool authCacheEnabled;
    _Bool enableFizz;
    _Bool enableCallbackOffMainQueue;
} CDStruct_9527d0dc;

typedef struct {
    _Bool disableLeftEdgeSwiping;
    _Bool disableRightEdgeSwiping;
    _Bool disableRightEdgeSwipeIntoDirect;
    _Bool disableAllSwiping;
    _Bool conservativePanGestureRecognition;
} CDStruct_8ab98ee7;

typedef struct {
    _Bool omitDestinations;
    _Bool omitCoverMedia;
    _Bool includeFixedDestinations;
    _Bool disregardMuting;
} CDStruct_ecb5ac95;

typedef struct {
    _Bool compactTrayDesignEnabled;
    _Bool autoSelectTrayBehaviorEnabled;
    long long initialCameraSwitcherMode;
} CDStruct_fc792133;

typedef struct {
    _Bool animated;
    _Bool hidingRefresh;
} CDStruct_7a09f4de;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool containsStaticImage;
    unsigned long long deviceSource;
} CDStruct_1916703e;

typedef struct {
    _Bool _field1;
    long long _field2;
    double _field3;
    long long _field4;
    long long _field5;
    _Bool _field6;
} CDStruct_b4323d61;

typedef struct {
    unsigned int _field1;
} CDStruct_6238c8e0;

typedef struct {
    unsigned long long watchAndMoreButtonType;
    _Bool watchAndMoreEnabled;
    _Bool isIGTVMedia;
    _Bool igtvMediaPreviewEnabled;
    _Bool tapForSoundDisabled;
    _Bool audioIndicatorEnabled;
    _Bool autoplayDisabled;
    _Bool videoStitchingEnabled;
    _Bool persistentOverlaysEnabled;
    _Bool imageProgressViewDisabled;
    _Bool allowCaptions;
} CDStruct_7071a04e;

typedef struct {
    unsigned long long connectionTypeConfiguration;
    _Bool shouldFetchOnceBetweenColdStarts;
    _Bool storiesShouldCacheAPIResponse;
} CDStruct_61926bba;

typedef struct {
    unsigned long long activeAllocationsCount;
    unsigned long long activeAllocationsSize;
    unsigned long long activeTracesCount;
    unsigned long long activeTracesSize;
    unsigned long long eventsQueueSize;
    unsigned long long sampledSetCount;
    unsigned long long sampledSetSize;
    _Bool hasSampled;
    _Bool useExternalVersion;
} CDStruct_065a5dcd;

typedef struct {
    unsigned long long displayNoThumbnailOption;
    unsigned long long verticalAlignment;
    double currentTimeLabelSize;
} CDStruct_3f738656;

typedef struct {
    unsigned long long row;
    unsigned long long col;
} CDStruct_1d3354f4;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
} CDStruct_6dd8fab3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    char _field5[3];
} CDStruct_3781b4b3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    double cacheTimeout;
} CDStruct_eb671702;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long maximumUntruncatedNumberOfLines;
    long long truncateToNumberOfLines;
} CDStruct_ce671a2f;

typedef struct {
    _Bool isScrollingDown;
    struct CGPoint contentOffset;
    struct CGPoint contentOffsetOnDragBeginOrDirectionChange;
    struct CGPoint velocityOnDragEnd;
} CDStruct_8eea7b7b;

typedef struct {
    unsigned long long defaultMallocBytes;
    unsigned long long webKitBytes;
    unsigned long long customJSCMallocBytes;
    unsigned long long customJSCGCHeapBytes;
    unsigned long long drawRectBytes;
    unsigned long long bitmapBytes;
    unsigned long long decodedImageBytes;
    unsigned long long ioKitBytes;
    unsigned long long stackBytes;
    unsigned long long sqliteBytes;
    unsigned long long coreUIBytes;
    unsigned long long foundationBytes;
    struct {
        unsigned long long size;
        unsigned long long rss;
        unsigned long long swap;
    } textSection;
    unsigned long long unattributedBytes;
} CDStruct_0aeb17ac;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    struct *_field1;
    unsigned long long _field2;
} CDStruct_7ba9a352;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    float _field1;
    float _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    float _field5;
    float _field6;
} CDStruct_15fe95f0;

typedef struct {
    float _field1;
    CDStruct_1b6d18a9 _field2;
    long long _field3;
    float _field4;
    float _field5;
} CDStruct_62455522;

typedef struct {
    long long _field1;
    struct FBRequired<long> _field2;
    long long _field3;
    struct FBRequired<bool> _field4;
    struct FBRequired<bool> _field5;
    struct FBRequired<bool> _field6;
    struct FBRequired<int> _field7;
    struct FBRequired<bool> _field8;
    struct FBRequired<bool> _field9;
    _Bool _field10;
} CDStruct_9f503abd;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint topLeftPoint;
    struct CGPoint topRightPoint;
    struct CGPoint bottomLeftPoint;
    struct CGPoint bottomRightPoint;
} CDStruct_1475ac9d;

typedef struct {
    struct CGSize cellSize;
    double viewHeight;
} CDStruct_afe9634b;

typedef struct {
    struct CGSize speakerSize;
    struct CGSize smallSoundwaveSize;
    struct CGSize bigSoundwaveSize;
    struct CGSize soundwaveAreaSize;
    struct CGSize crossSize;
    double speakerSoundwavePadding;
    double speakerCrossPadding;
} CDStruct_b17e9ffe;

typedef struct {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
} CDStruct_b7cb895d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    union _GLKVector3 _field1;
    union _GLKVector2 _field2;
} CDStruct_ee351da0;

typedef struct {
    union _GLKVector4 _field1;
    union _GLKVector4 _field2;
} CDStruct_8aefd972;

typedef struct {
    union _GLKVector4 _field1;
    unsigned int _field2;
    float _field3;
    float _field4;
} CDStruct_07a05ba3;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    struct CGRect _field8;
} CDStruct_e287b37a;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
} CDStruct_d74dc97c;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_b7523c42;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool useTimeSeriesLogging;
    _Bool skipFlushDuringSwap;
    int initialVideoBitrateKbps;
    int minVideoBitrateKbps;
    int maxVideoBitrateKbps;
    int bitrateScalerGranularity;
    int bitrateScalerMinHeight;
    int bitrateScalerMaxHeight;
    int framerate;
    int h264MaxEncodeFailureRetries;
    _Bool h264UseCABAC;
    _Bool audioInterruptionRestartDisabled;
    _Bool aacOverride;
    _Bool useAudioUnitWrapper;
    _Bool rtcH264ResetEncoderOnError;
    _Bool preferWifi;
    NSString *loggingLevels;
    _Bool useSendStreamDry;
    _Bool useNewFrameDropperImplementation;
    _Bool enableSendSidePacer;
    _Bool useMediaFromJoinResponse;
} CDStruct_968ff9e3;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool videoCroppingEnabled;
    struct CGSize encodingDimension;
    long long initialBitrateBps;
} CDStruct_71a17d3c;

typedef struct {
    NSURL *rtmpURL;
    NSURL *fbLiveURL;
    NSURL *fbLiveQuicURL;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> rtmpConnectionToken;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> fbLiveConnectionToken;
    AudioConfig_f27b8135 audioConfig;
    struct VideoConfig videoConfig;
    struct {
        int sendHardTimeoutMsec;
        int sendCheckTimeoutMsec;
        int queueCapacityInBytes;
        double queueVideoCapacityInSeconds;
        int percentageOfCapacityToDrop;
        int connectionRetryCount;
        int connectionRetryDelay;
        int speedTestPayloadSize;
        int speedTestPayloadChunkSize;
        int speedTestWaitResponseTimeoutInSeconds;
        unsigned long long measurementsIntervalInMs;
        double speedTestMinimumBandwidthThreshold;
        int speedTestRetryMaxCount;
        double speedTestRetryTimeDelay;
        _Bool speedTestDisable;
        _Bool cancelSpeedTestOnStart;
        _Bool waitForSpeedTest;
        _Bool shouldProbeRTTWithPings;
        _Bool useSSLFactory;
        _Bool use1RTTconnectionSetup;
        _Bool useVideoProtocol;
        _Bool enableQuic;
        _Bool enableQuicMultiStream;
        NSString *quicCongestionControlType;
        double copaLatencyFactor;
        long long sendBufferSize;
        int connectTimeoutMs;
        _Bool waitForConnectAck;
        _Bool excludeNotSentBytesFromThroughput;
        _Bool useExperimentalLowLatencyMode;
        _Bool enableClientCounter;
        _Bool resetQuicStreamOnError;
        _Bool fbvpFastReconnect;
        int quicSocketDrainTimeoutMs;
        _Bool sendStreamInterruptionEnded;
    } networkConfig;
    struct PartialReliabilityConfig partialReliabilityConfig;
    struct ThroughputMonitorConfig throughputMonitorConfig;
    struct AdaptiveBitrateConfig adaptiveBitrateConfig;
    struct LowLatencyConfig lowLatencyConfig;
    struct DiskVideoRecorderConfig diskRecordingConfig;
    struct MultipleEncodersConfig multipleEncodersConfig;
    _Bool recordOnDisk;
    struct FBVideoBroadcastSessionTimestampConfig timestampConfig;
    _Bool useMaxBitrateWifiOverride;
    struct LiveTraceConfig liveTraceConfig;
    _Bool useBitrateAdjuster;
} CDStruct_9abd5f9f;

// Ambiguous groups
typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float s;
    float t;
    float p;
    float q;
} CDStruct_f8b81486;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
} Either_4472cfe1;

typedef struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
} Either_964923b2;

typedef struct Expected<facebook::cameracore::ardelivery::AssetsManagerResult, facebook::cameracore::ardelivery::Error> {
    union {
        struct AssetsManagerResult _field1;
        struct Error _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
} Expected_3630528a;

typedef struct Expected<msqrd::dataprovider::IVideoDataProviderResult::VideoFrame, msqrd::dataprovider::IVideoDataProviderResult::SkippingReason> {
    union {
        struct VideoFrame _field1;
        int _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
} Expected_4bed3bf9;

typedef struct Future<std::__1::basic_string<char>> {
    struct Core<std::__1::basic_string<char>> *_field1;
} Future_0d6ce64e;

typedef struct Matrix<float, 2, 1, 0, 2, 1> {
    struct DenseStorage<float, 2, 2, 1, 0> _field1;
} Matrix_adcc7caa;

typedef struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
} ObservableHelper_eeb51dca;

typedef struct Optional<msqrd::shared_ref<msqrd::logging::BufferPoolStatisticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::BufferPoolStatisticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_933f6e43;

typedef struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::RenderTimeLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_cc3bfe46;

typedef struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::servicehost::IEffectSessionListener> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_5fae1a92;

typedef struct Optional<msqrd::shared_ref<msqrd::services::IServiceAnalyticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceAnalyticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_515d19e0;

typedef struct Optional<msqrd::shared_ref<msqrd::services::IServiceConfiguration>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceConfiguration> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_f0f72821;

typedef struct Optional<msqrd::unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_bb731cbb;

typedef struct Optional<std::__1::shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_038b8a0f;

typedef struct Optional<unsigned int> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned int _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_0c33f205;

typedef struct Optional<unsigned long> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned long long _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_4d197af4;

typedef struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
} Range_88fef6a7;

typedef struct Vector<dflatbuffers::Offset<facebook::keyframes::Tween>> {
    unsigned int _field1;
} Vector_45f18a3e;

typedef struct Vector<float> {
    unsigned int _field1;
} Vector_8443443f;

typedef struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
} VideoSinkInterface_a6f4a563;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct bitset<8> {
    unsigned long long _field1;
} bitset_13ab97e2;

typedef struct future<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> {
    struct __assoc_state<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
} future_388bbd79;

typedef struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_4edb12f9;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_5554a4ce;

typedef struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
} optional_746748f1;

typedef struct pair<NSSet<FBARModelMetadataRequest *>*, NSSet<NSNumber *>*> {
    id _field1;
    id _field2;
} pair_e764e1ae;

typedef struct pair<id<FBCameraCaptureManaging>, FBARCameraSessionType> {
    id _field1;
    unsigned char _field2;
} pair_56580787;

typedef struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
} pair_c442e4d7;

typedef struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
} scoped_refptr_4605340c;

typedef struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
} scoped_refptr_0271d9ef;

typedef struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
} scoped_refptr_3a9e6b6a;

typedef struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
} scoped_refptr_9ba5b87d;

typedef struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
} scoped_refptr_8b29514b;

typedef struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
} scoped_refptr_833c0867;

typedef struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
} scoped_refptr_09a33b10;

typedef struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
} scoped_refptr_25177f94;

typedef struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
} scoped_refptr_976466dd;

typedef struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
} scoped_refptr_01237151;

typedef struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
} scoped_refptr_b674d2a6;

typedef struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
} scoped_refptr_74f9e477;

typedef struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
} scoped_refptr_6217ee82;

typedef struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
} scoped_refptr_7d7e84a9;

typedef struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
} scoped_refptr_1eaeeec2;

typedef struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
} scoped_refptr_1f0d680a;

typedef struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
} scoped_refptr_92bf499b;

typedef struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
} scoped_refptr_3635276f;

typedef struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
} scoped_refptr_f1ddbb35;

typedef struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
} scoped_refptr_cae59c25;

typedef struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
} scoped_refptr_a41c3e90;

typedef struct shared_future<int> {
    struct __assoc_state<int> *_field1;
} shared_future_86484c36;

typedef struct shared_future<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *_field1;
} shared_future_f64f9e8d;

typedef struct shared_future<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> {
    struct __assoc_state<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> *_field1;
} shared_future_c25994f1;

typedef struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_44918ef6;

typedef struct shared_ptr<Lispy::FunctionRef> {
    struct FunctionRef *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d171093c;

typedef struct shared_ptr<const msqrd::attribution::EffectAttribution> {
    struct EffectAttribution *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f86b0e66;

typedef struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8f3f58d1;

typedef struct shared_ptr<const msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_15663ff2;

typedef struct shared_ptr<const msqrd::versioning::Version> {
    struct Version *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_602211e3;

typedef struct shared_ptr<facebook::FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor>> {
    struct FBBlockingQueue<folly::LockFreeRingBuffer<facebook::dextr::FBLoomLogEntry, std::atomic>::Cursor> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b7cf6321;

typedef struct shared_ptr<facebook::arservices::apple::AudioPlatformComponentHostImpl> {
    struct AudioPlatformComponentHostImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f708a341;

typedef struct shared_ptr<facebook::audiofiltercore::FBAudioFileReader<short>> {
    struct FBAudioFileReader<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b098e636;

typedef struct shared_ptr<facebook::cameracore::arclass::ARClassSource> {
    struct ARClassSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_24c96892;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassConfigSource> {
    struct IARClassConfigSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_83b3d1dc;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassPersistentStore> {
    struct IARClassPersistentStore *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f2a0ceff;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassRemoteSource> {
    struct IARClassRemoteSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f84c9c34;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IBundleFetcher> {
    struct IBundleFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_75c79c12;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IFileCache> {
    struct IFileCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_232d0224;

typedef struct shared_ptr<facebook::cameracore::ardelivery::ModelPathsBuilder> {
    struct ModelPathsBuilder *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4a89f5e9;

typedef struct shared_ptr<facebook::cameracore::ardelivery::VersionedModelCacheBase> {
    struct VersionedModelCacheBase *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4fc380b5;

typedef struct shared_ptr<facebook::cp::fusion::FusionBuffer> {
    struct FusionBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6158b9b6;

typedef struct shared_ptr<facebook::graphics::GPUTimer> {
    struct GPUTimer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7d4d5427;

typedef struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1dbe9edf;

typedef struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f32f4099;

typedef struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1317cc0b;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e62c5e43;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2811b282;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b7837d35;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0529d599;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c386cb19;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_75e1c217;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::TslogFactory> {
    struct TslogFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_84466e19;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoFrame> {
    struct VideoFrame *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_dcc74f32;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0a7db57b;

typedef struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d61e43bb;

typedef struct shared_ptr<facebook::pointtools::PointCloud<facebook::pointtools::Point3<float>>> {
    struct PointCloud<facebook::pointtools::Point3<float>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8556e769;

typedef struct shared_ptr<facebook::react::JSCallInvoker> {
    struct JSCallInvoker *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1624e5c1;

typedef struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7c4996dd;

typedef struct shared_ptr<facebook::react::MessageQueueThread> {
    struct MessageQueueThread *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1bc7a6b7;

typedef struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8e97821c;

typedef struct shared_ptr<facebook::react::TurboModule> {
    struct TurboModule *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3725e3cd;

typedef struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3ca5f01e;

typedef struct shared_ptr<igl::ITexture> {
    struct ITexture *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e4063ace;

typedef struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1579b2d5;

typedef struct shared_ptr<msqrd::capture::ICaptureEventInput> {
    struct ICaptureEventInput *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bd589161;

typedef struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_549641cb;

typedef struct shared_ptr<msqrd::dataprovider::IVideoDataProvider> {
    struct IVideoDataProvider *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_53c346d1;

typedef struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_28782c24;

typedef struct shared_ptr<msqrd::location::LocationDataProvider> {
    struct LocationDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a53fea94;

typedef struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_692abb54;

typedef struct shared_ptr<msqrd::platform::IDeformationEvents> {
    struct IDeformationEvents *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_487a4958;

typedef struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6266c83b;

typedef struct shared_ptr<msqrd::services::audio::IAudioFileSink> {
    struct IAudioFileSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0fafba50;

typedef struct shared_ptr<msqrd::services::audio::IAudioPlatformComponentHost> {
    struct IAudioPlatformComponentHost *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_27fa6347;

typedef struct shared_ptr<msqrd::services::audio::IAudioServiceController> {
    struct IAudioServiceController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_de289cca;

typedef struct shared_ptr<msqrd::services::audio::IMicrophoneSink> {
    struct IMicrophoneSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_89031f2b;

typedef struct shared_ptr<msqrd::services::persistence::IPersistenceServiceDelegate> {
    struct IPersistenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5e1d7b9d;

typedef struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e0e6635;

typedef struct shared_ptr<proxygen::httpclient::AnalyticsLogger> {
    struct AnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_896dd83c;

typedef struct shared_ptr<std::__1::promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>> {
    struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e0047530;

typedef struct shared_ptr<std::__1::vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>>> {
    vector_c1919679 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_df3e83dc;

typedef struct shared_ptr<std::__1::vector<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>> {
    struct vector<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_277e1116;

typedef struct shared_ptr<std::__1::vector<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>> {
    struct vector<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<const facebook::artech::anchorservice::datawrappers::ARPointTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6cfc60dd;

typedef struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3f407d03;

typedef struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    vector_7984f87c *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_97dceaa7;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct shared_ref<const msqrd::manifest::Manifest> {
    shared_ptr_8f3f58d1 _field1;
} shared_ref_a9344986;

typedef struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
} shared_ref_ee0a2387;

typedef struct shared_ref<facebook::cameracore::arclass::ARClassContext> {
    struct shared_ptr<facebook::cameracore::arclass::ARClassContext> _field1;
} shared_ref_49fe85fd;

typedef struct shared_ref<msqrd::analytics::IEngineAnalyticsLogger> {
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _field1;
} shared_ref_c3a6841c;

typedef struct shared_ref<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> _field1;
} shared_ref_67afbc20;

typedef struct shared_ref<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> _field1;
} shared_ref_4ba0611f;

typedef struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
} shared_ref_5cdfb9eb;

typedef struct shared_ref<msqrd::logging::IBugReportLogger> {
    struct shared_ptr<msqrd::logging::IBugReportLogger> _field1;
} shared_ref_80593006;

typedef struct shared_ref<msqrd::logging::IRawEventLogger> {
    struct shared_ptr<msqrd::logging::IRawEventLogger> _field1;
} shared_ref_81919347;

typedef struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
} shared_ref_d7b05e06;

typedef struct shared_ref<msqrd::servicehost::EffectController> {
    struct shared_ptr<msqrd::servicehost::EffectController> _field1;
} shared_ref_344acd93;

typedef struct shared_ref<msqrd::servicehost::ServiceHost> {
    struct shared_ptr<msqrd::servicehost::ServiceHost> _field1;
} shared_ref_f3fa7b41;

typedef struct shared_ref<msqrd::services::audio::IAudioPlatformComponentHost> {
    shared_ptr_27fa6347 _field1;
} shared_ref_a585b04f;

typedef struct shared_ref<msqrd::services::network::INetworkClientSource> {
    struct shared_ptr<msqrd::services::network::INetworkClientSource> _field1;
} shared_ref_855019a2;

typedef struct shared_ref<msqrd::standalone_tracking::ITrackingController> {
    struct shared_ptr<msqrd::standalone_tracking::ITrackingController> _field1;
} shared_ref_401cd246;

typedef struct tmat4x4<float, glm::packed_highp> {
    struct tvec4<float, glm::packed_highp> value[4];
} tmat4x4_fddb9f00;

typedef struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *__value_;
    } __ptr_;
} unique_ptr_e958034a;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__value_;
    } __ptr_;
} unique_ptr_f86732fc;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
} unique_ptr_bcc8199d;

typedef struct unique_ptr<folly::IOBuf, std::__1::default_delete<folly::IOBuf>> {
    struct __compressed_pair<folly::IOBuf *, std::__1::default_delete<folly::IOBuf>> {
        struct IOBuf *_field1;
    } _field1;
} unique_ptr_e802a309;

typedef struct unique_ptr<msqrd::plugins::IPluginConfiguration, std::__1::default_delete<msqrd::plugins::IPluginConfiguration>> {
    struct __compressed_pair<msqrd::plugins::IPluginConfiguration *, std::__1::default_delete<msqrd::plugins::IPluginConfiguration>> {
        struct IPluginConfiguration *__value_;
    } __ptr_;
} unique_ptr_5f6b9c32;

typedef struct unique_ptr<msqrd::services::network::INetworkResult, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
    struct __compressed_pair<msqrd::services::network::INetworkResult *, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
        struct INetworkResult *_field1;
    } _field1;
} unique_ptr_e88c7864;

typedef struct unique_ptr<proxygen::httpclient::AnalyticsLogger, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
    struct __compressed_pair<proxygen::httpclient::AnalyticsLogger *, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
        struct AnalyticsLogger *_field1;
    } _field1;
} unique_ptr_45a0ccc1;

typedef struct unique_ptr<rtc::BitrateAllocationStrategy, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<rtc::BitrateAllocationStrategy *, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
} unique_ptr_e9310bd8;

typedef struct unique_ptr<rtc::IntervalRange, std::__1::default_delete<rtc::IntervalRange>> {
    struct __compressed_pair<rtc::IntervalRange *, std::__1::default_delete<rtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
} unique_ptr_f1df6efd;

typedef struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
} unique_ptr_eddc2ff2;

typedef struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
} unique_ptr_9751165c;

typedef struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
} unique_ptr_20e123b6;

typedef struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
} unique_ptr_91070b9b;

typedef struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
} unique_ptr_28850a1b;

typedef struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
} unique_ptr_6d0f5cf1;

typedef struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
} unique_ptr_2722152f;

typedef struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
} unique_ptr_5191721b;

typedef struct unique_ref<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> _field1;
} unique_ref_ae0e2fe6;

typedef struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_7cdfe647;

typedef struct variant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusInterrupted, FBCamera::PerfStatusNoTracking> {
    int _field1;
    struct aligned_storage<8, 8> _field2;
} variant_f50e7bf6;

typedef struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
} variant_d68ec686;

typedef struct variant<std::__1::shared_ptr<Lispy::FunctionCall>, Lispy::LoadArgument, boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>> {
    int _field1;
    struct aligned_storage<24, 8> _field2;
} variant_425e2c6c;

typedef struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__value_;
    } __end_cap_;
} vector_18be7935;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_03b67401;

typedef struct vector<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>> {
    struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field1;
    struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field2;
    struct __compressed_pair<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>*, std::__1::allocator<boost::variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>>>> {
        struct variant<std::__1::shared_ptr<Lispy::FunctionRef>, Lispy::None, Lispy::Number, Lispy::ObjectRef, std::__1::shared_ptr<Lispy::PatternCase>, std::__1::shared_ptr<Lispy::PatternDefault>, std::__1::shared_ptr<Lispy::VectorWrapper>, std::__1::shared_ptr<Lispy::MapWrapper>> *_field1;
    } _field3;
} vector_c1919679;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<proxygen::CircularLogSink::RequestResponseInfo, std::__1::allocator<proxygen::CircularLogSink::RequestResponseInfo>> {
    struct RequestResponseInfo *_field1;
    struct RequestResponseInfo *_field2;
    struct __compressed_pair<proxygen::CircularLogSink::RequestResponseInfo *, std::__1::allocator<proxygen::CircularLogSink::RequestResponseInfo>> {
        struct RequestResponseInfo *_field1;
    } _field3;
} vector_e0c50086;

typedef struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
} vector_31c84f95;

typedef struct vector<rtc::tslog::TsCounter, std::__1::allocator<rtc::tslog::TsCounter>> {
    struct TsCounter *_field1;
    struct TsCounter *_field2;
    struct __compressed_pair<rtc::tslog::TsCounter *, std::__1::allocator<rtc::tslog::TsCounter>> {
        struct TsCounter *_field1;
    } _field3;
} vector_6566990d;

typedef struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
} vector_5871b4ad;

typedef struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
} vector_88f2426d;

typedef struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_7984f87c;

typedef struct weak_ptr<msqrd::dataprovider::ILocationUpdateListener> {
    struct ILocationUpdateListener *_field1;
    struct __shared_weak_count *_field2;
} weak_ptr_892112ed;

#pragma mark Named Unions

union CodecSpecificInfoUnion {
    struct CodecSpecificInfoVP8 _field1;
    struct CodecSpecificInfoVP9 _field2;
    struct CodecSpecificInfoH264 _field3;
    struct CodecSpecificInfoH265 _field4;
};

union VideoCodecUnion {
    struct VideoCodecVP8 _field1;
    struct VideoCodecVP9 _field2;
    struct VideoCodecH264 _field3;
    struct VideoCodecH265 _field4;
};

union _GLKMatrix2 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field1;
    float _field2[2][2];
    float _field3[4];
};

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
    float _field3[4];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    CDStruct_f2e236b6 ;
    CDStruct_83984b6f ;
    CDStruct_f8b81486 ;
    float v[4];
};

union _IGGLKIntVector2 {
    CDStruct_1ef3fb1f _field1;
    CDStruct_1ef3fb1f _field2;
    int _field3[2];
};

union _IGGLKIntVector3 {
    CDStruct_77932685 _field1;
    CDStruct_77932685 _field2;
    CDStruct_77932685 _field3;
    int _field4[3];
};

union _IGGLKIntVector4 {
    CDStruct_a734b2e2 _field1;
    CDStruct_a734b2e2 _field2;
    CDStruct_a734b2e2 _field3;
    int _field4[4];
};

union data_t {
    char buf[8];
    struct a8 align_;
};

#pragma mark Typedef'd Unions

typedef union {
    struct {
        struct _GLKVector3 _field1;
        struct _GLKVector3 _field2;
        struct _GLKVector3 _field3;
        struct _GLKVector3 _field4;
    } _field1;
    float _field2[12];
} CDUnion_340d3072;

typedef union {
    struct dummy_type dummy_;
    int data_;
} CDUnion_1bb239ac;

typedef union {
    struct dummy_type dummy_;
    long long data_;
} CDUnion_019de37f;

typedef union {
    struct {
        union _GLKVector3 _field1;
        union _GLKVector3 _field2;
        union _GLKVector3 _field3;
        union _GLKVector3 _field4;
    } _field1;
    float _field2[12];
} CDUnion_b8fff01d;

