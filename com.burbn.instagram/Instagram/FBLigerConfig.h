//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FBLigerDebugReporter, NSArray, NSString;

@interface FBLigerConfig : NSObject
{
    FBLigerDebugReporter *_ligerDebugReporter;
    _Bool _ligerEnabled;
    _Bool _dnsCacheEnabled;
    _Bool _requestProcessLogEnabled;
    _Bool _networkInfoFilterEnabled;
    _Bool _persistentSSLCacheEnabled;
    _Bool _crossDomainSSLCacheEnabled;
    _Bool _httpSessionManagerOriginLimitEnabled;
    _Bool _radioMonitorEnabled;
    _Bool _altSvcEnabled;
    _Bool _flowControlEnabled;
    _Bool _enableHandlerAbortTxnOnBadStatus;
    _Bool _useHTTP2ForStatic;
    _Bool _codecHeadroomOptimization;
    _Bool _enablePACFile;
    _Bool _fizzEnabled;
    _Bool _fizzPersistentCacheEnabled;
    _Bool _fizzEarlyDataEnabled;
    _Bool _dnscryptEnabled;
    _Bool _posixDualStackEnabled;
    _Bool _happyEyeballsDrivenDns;
    _Bool _supportH2PubSub;
    _Bool _persistentCachesOnExecutor;
    _Bool _quicFizzEarlyDataEnabled;
    _Bool _quicConnectUDP;
    _Bool _quicTurnoffPMTUD;
    _Bool _quicEnableSocketErrMsgCallback;
    _Bool _persistentAltSvcCache;
    _Bool _quicPacingEnabled;
    _Bool _quicPacingEnabledForRecovery;
    _Bool _enableQuicVideoCdn;
    _Bool _enablePreconnectWithQuic;
    _Bool _disableTcpPreconnectWithQuic;
    _Bool _attemptEarlyDataInQuicPreconnect;
    _Bool _enableHTTP3;
    _Bool _continueOnNetworkUnreachable;
    _Bool _enableNetworkInsightsObserver;
    _Bool _enableLigerWorkerThread;
    _Bool _inlinePersistenceLoading;
    _Bool _useNSURLSessionForNonFizzHosts;
    _Bool _useDNSExecutorForHTTPClient;
    int _dnsRequestsOutstanding;
    int _persistentSSLCacheCapacity;
    int _persistentSSLCacheSyncInterval;
    int _happyEyeballsConnectionDelayMs;
    int _http2PriLevels;
    int _evbLoggingSamplingFreq;
    int _dnsRetries;
    int _dnsPreemptRetryMs;
    int _dnscryptAttempts;
    int _systemResolverAttempts;
    int _quicMaxRecvPacketSize;
    int _quicMaxRTOs;
    unsigned int _quicTraceLoggingSampleWeight;
    unsigned int _quicConnFlowControlWindow;
    unsigned int _quicStreamFlowControlWindow;
    unsigned int _quicTcpRaceDelayMilliseconds;
    unsigned int _quicMaxCwndInMss;
    unsigned int _idleTimeoutForUsedQuicSessionInMS;
    unsigned int _idleTimeoutForUnusedQuicSessionInMS;
    unsigned int _quicWriteConnDataPacketsLimit;
    NSString *_persistentSSLCacheFilename;
    long long _httpSessionManagerMaxIdleHTTPSessions;
    long long _httpSessionManagerMaxIdleSPDYSessions;
    long long _httpSessionManagerOriginMaxRetries;
    id <FBLigerProvidesNetworkStatusMonitor> _ligerNetworkStatusMonitor;
    NSArray *_requestObservers;
    CDUnknownBlockType _proxyUserAgentFormattingBlock;
    CDUnknownBlockType _sandboxProvider;
    NSString *_http2PriReqCallPaths;
    NSString *_http2PriWeights;
    long long _flowControlWindowSize;
    NSString *_connectionMergeHostMapStr;
    NSArray *_preConnectList;
    id <FBLigerProvidesAnalyticsLogger> _analyticsLogger;
    double _backgroundDNSSampleRate;
    NSString *_pacFileCheckURL;
    NSString *_h2PubSubHostname;
    long long _quicTraceLoggingSalt;
}

@property(readonly, nonatomic) _Bool useDNSExecutorForHTTPClient; // @synthesize useDNSExecutorForHTTPClient=_useDNSExecutorForHTTPClient;
@property(readonly, nonatomic) _Bool useNSURLSessionForNonFizzHosts; // @synthesize useNSURLSessionForNonFizzHosts=_useNSURLSessionForNonFizzHosts;
@property(readonly, nonatomic) _Bool inlinePersistenceLoading; // @synthesize inlinePersistenceLoading=_inlinePersistenceLoading;
@property(readonly, nonatomic) _Bool enableLigerWorkerThread; // @synthesize enableLigerWorkerThread=_enableLigerWorkerThread;
@property(readonly, nonatomic) _Bool enableNetworkInsightsObserver; // @synthesize enableNetworkInsightsObserver=_enableNetworkInsightsObserver;
@property(readonly, nonatomic) _Bool continueOnNetworkUnreachable; // @synthesize continueOnNetworkUnreachable=_continueOnNetworkUnreachable;
@property(readonly, nonatomic) unsigned int quicWriteConnDataPacketsLimit; // @synthesize quicWriteConnDataPacketsLimit=_quicWriteConnDataPacketsLimit;
@property(readonly, nonatomic) _Bool enableHTTP3; // @synthesize enableHTTP3=_enableHTTP3;
@property(readonly, nonatomic) _Bool attemptEarlyDataInQuicPreconnect; // @synthesize attemptEarlyDataInQuicPreconnect=_attemptEarlyDataInQuicPreconnect;
@property(readonly, nonatomic) _Bool disableTcpPreconnectWithQuic; // @synthesize disableTcpPreconnectWithQuic=_disableTcpPreconnectWithQuic;
@property(readonly, nonatomic) _Bool enablePreconnectWithQuic; // @synthesize enablePreconnectWithQuic=_enablePreconnectWithQuic;
@property(readonly, nonatomic) _Bool enableQuicVideoCdn; // @synthesize enableQuicVideoCdn=_enableQuicVideoCdn;
@property(readonly, nonatomic) unsigned int idleTimeoutForUnusedQuicSessionInMS; // @synthesize idleTimeoutForUnusedQuicSessionInMS=_idleTimeoutForUnusedQuicSessionInMS;
@property(readonly, nonatomic) unsigned int idleTimeoutForUsedQuicSessionInMS; // @synthesize idleTimeoutForUsedQuicSessionInMS=_idleTimeoutForUsedQuicSessionInMS;
@property(readonly, nonatomic) _Bool quicPacingEnabledForRecovery; // @synthesize quicPacingEnabledForRecovery=_quicPacingEnabledForRecovery;
@property(readonly, nonatomic) _Bool quicPacingEnabled; // @synthesize quicPacingEnabled=_quicPacingEnabled;
@property(readonly, nonatomic) _Bool persistentAltSvcCache; // @synthesize persistentAltSvcCache=_persistentAltSvcCache;
@property(readonly, nonatomic) unsigned int quicMaxCwndInMss; // @synthesize quicMaxCwndInMss=_quicMaxCwndInMss;
@property(readonly, nonatomic) unsigned int quicTcpRaceDelayMilliseconds; // @synthesize quicTcpRaceDelayMilliseconds=_quicTcpRaceDelayMilliseconds;
@property(readonly, nonatomic) unsigned int quicStreamFlowControlWindow; // @synthesize quicStreamFlowControlWindow=_quicStreamFlowControlWindow;
@property(readonly, nonatomic) unsigned int quicConnFlowControlWindow; // @synthesize quicConnFlowControlWindow=_quicConnFlowControlWindow;
@property(readonly, nonatomic) unsigned int quicTraceLoggingSampleWeight; // @synthesize quicTraceLoggingSampleWeight=_quicTraceLoggingSampleWeight;
@property(readonly, nonatomic) long long quicTraceLoggingSalt; // @synthesize quicTraceLoggingSalt=_quicTraceLoggingSalt;
@property(readonly, nonatomic) _Bool quicEnableSocketErrMsgCallback; // @synthesize quicEnableSocketErrMsgCallback=_quicEnableSocketErrMsgCallback;
@property(readonly, nonatomic) _Bool quicTurnoffPMTUD; // @synthesize quicTurnoffPMTUD=_quicTurnoffPMTUD;
@property(readonly, nonatomic) int quicMaxRTOs; // @synthesize quicMaxRTOs=_quicMaxRTOs;
@property(readonly, nonatomic) _Bool quicConnectUDP; // @synthesize quicConnectUDP=_quicConnectUDP;
@property(readonly, nonatomic) int quicMaxRecvPacketSize; // @synthesize quicMaxRecvPacketSize=_quicMaxRecvPacketSize;
@property(readonly, nonatomic) _Bool quicFizzEarlyDataEnabled; // @synthesize quicFizzEarlyDataEnabled=_quicFizzEarlyDataEnabled;
@property(readonly, nonatomic) _Bool persistentCachesOnExecutor; // @synthesize persistentCachesOnExecutor=_persistentCachesOnExecutor;
@property(readonly, copy, nonatomic) NSString *h2PubSubHostname; // @synthesize h2PubSubHostname=_h2PubSubHostname;
@property(readonly, nonatomic) _Bool supportH2PubSub; // @synthesize supportH2PubSub=_supportH2PubSub;
@property(readonly, nonatomic) _Bool happyEyeballsDrivenDns; // @synthesize happyEyeballsDrivenDns=_happyEyeballsDrivenDns;
@property(readonly, nonatomic) int systemResolverAttempts; // @synthesize systemResolverAttempts=_systemResolverAttempts;
@property(readonly, nonatomic) int dnscryptAttempts; // @synthesize dnscryptAttempts=_dnscryptAttempts;
@property(readonly, nonatomic) int dnsPreemptRetryMs; // @synthesize dnsPreemptRetryMs=_dnsPreemptRetryMs;
@property(readonly, nonatomic) int dnsRetries; // @synthesize dnsRetries=_dnsRetries;
@property(readonly, nonatomic) _Bool posixDualStackEnabled; // @synthesize posixDualStackEnabled=_posixDualStackEnabled;
@property(readonly, nonatomic) _Bool dnscryptEnabled; // @synthesize dnscryptEnabled=_dnscryptEnabled;
@property(readonly, nonatomic) _Bool fizzEarlyDataEnabled; // @synthesize fizzEarlyDataEnabled=_fizzEarlyDataEnabled;
@property(readonly, nonatomic) _Bool fizzPersistentCacheEnabled; // @synthesize fizzPersistentCacheEnabled=_fizzPersistentCacheEnabled;
@property(readonly, nonatomic) _Bool fizzEnabled; // @synthesize fizzEnabled=_fizzEnabled;
@property(readonly, copy, nonatomic) NSString *pacFileCheckURL; // @synthesize pacFileCheckURL=_pacFileCheckURL;
@property(readonly, nonatomic) _Bool enablePACFile; // @synthesize enablePACFile=_enablePACFile;
@property(readonly, nonatomic) double backgroundDNSSampleRate; // @synthesize backgroundDNSSampleRate=_backgroundDNSSampleRate;
@property(readonly, nonatomic) _Bool codecHeadroomOptimization; // @synthesize codecHeadroomOptimization=_codecHeadroomOptimization;
@property(retain, nonatomic) id <FBLigerProvidesAnalyticsLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) int evbLoggingSamplingFreq; // @synthesize evbLoggingSamplingFreq=_evbLoggingSamplingFreq;
@property(readonly, nonatomic) _Bool useHTTP2ForStatic; // @synthesize useHTTP2ForStatic=_useHTTP2ForStatic;
@property(readonly, nonatomic) _Bool enableHandlerAbortTxnOnBadStatus; // @synthesize enableHandlerAbortTxnOnBadStatus=_enableHandlerAbortTxnOnBadStatus;
@property(readonly, copy, nonatomic) NSArray *preConnectList; // @synthesize preConnectList=_preConnectList;
@property(readonly, copy, nonatomic) NSString *connectionMergeHostMapStr; // @synthesize connectionMergeHostMapStr=_connectionMergeHostMapStr;
@property(readonly, nonatomic) long long flowControlWindowSize; // @synthesize flowControlWindowSize=_flowControlWindowSize;
@property(readonly, nonatomic) _Bool flowControlEnabled; // @synthesize flowControlEnabled=_flowControlEnabled;
@property(readonly, nonatomic) _Bool altSvcEnabled; // @synthesize altSvcEnabled=_altSvcEnabled;
@property(readonly, nonatomic) _Bool radioMonitorEnabled; // @synthesize radioMonitorEnabled=_radioMonitorEnabled;
@property(readonly, copy, nonatomic) NSString *http2PriWeights; // @synthesize http2PriWeights=_http2PriWeights;
@property(readonly, copy, nonatomic) NSString *http2PriReqCallPaths; // @synthesize http2PriReqCallPaths=_http2PriReqCallPaths;
@property(readonly, nonatomic) int http2PriLevels; // @synthesize http2PriLevels=_http2PriLevels;
@property(readonly, copy, nonatomic) CDUnknownBlockType sandboxProvider; // @synthesize sandboxProvider=_sandboxProvider;
@property(readonly, copy, nonatomic) CDUnknownBlockType proxyUserAgentFormattingBlock; // @synthesize proxyUserAgentFormattingBlock=_proxyUserAgentFormattingBlock;
@property(copy, nonatomic) NSArray *requestObservers; // @synthesize requestObservers=_requestObservers;
@property(nonatomic) id <FBLigerProvidesNetworkStatusMonitor> ligerNetworkStatusMonitor; // @synthesize ligerNetworkStatusMonitor=_ligerNetworkStatusMonitor;
@property(readonly, nonatomic) int happyEyeballsConnectionDelayMs; // @synthesize happyEyeballsConnectionDelayMs=_happyEyeballsConnectionDelayMs;
@property(readonly, nonatomic) long long httpSessionManagerOriginMaxRetries; // @synthesize httpSessionManagerOriginMaxRetries=_httpSessionManagerOriginMaxRetries;
@property(readonly, nonatomic) _Bool httpSessionManagerOriginLimitEnabled; // @synthesize httpSessionManagerOriginLimitEnabled=_httpSessionManagerOriginLimitEnabled;
@property(readonly, nonatomic) long long httpSessionManagerMaxIdleSPDYSessions; // @synthesize httpSessionManagerMaxIdleSPDYSessions=_httpSessionManagerMaxIdleSPDYSessions;
@property(readonly, nonatomic) long long httpSessionManagerMaxIdleHTTPSessions; // @synthesize httpSessionManagerMaxIdleHTTPSessions=_httpSessionManagerMaxIdleHTTPSessions;
@property(readonly, nonatomic) _Bool crossDomainSSLCacheEnabled; // @synthesize crossDomainSSLCacheEnabled=_crossDomainSSLCacheEnabled;
@property(readonly, nonatomic) int persistentSSLCacheSyncInterval; // @synthesize persistentSSLCacheSyncInterval=_persistentSSLCacheSyncInterval;
@property(readonly, nonatomic) int persistentSSLCacheCapacity; // @synthesize persistentSSLCacheCapacity=_persistentSSLCacheCapacity;
@property(copy, nonatomic) NSString *persistentSSLCacheFilename; // @synthesize persistentSSLCacheFilename=_persistentSSLCacheFilename;
@property(readonly, nonatomic) _Bool persistentSSLCacheEnabled; // @synthesize persistentSSLCacheEnabled=_persistentSSLCacheEnabled;
@property(readonly, nonatomic) int dnsRequestsOutstanding; // @synthesize dnsRequestsOutstanding=_dnsRequestsOutstanding;
@property(readonly, nonatomic) _Bool networkInfoFilterEnabled; // @synthesize networkInfoFilterEnabled=_networkInfoFilterEnabled;
@property(readonly, nonatomic) _Bool requestProcessLogEnabled; // @synthesize requestProcessLogEnabled=_requestProcessLogEnabled;
@property(readonly, nonatomic) _Bool dnsCacheEnabled; // @synthesize dnsCacheEnabled=_dnsCacheEnabled;
@property(readonly, nonatomic) _Bool ligerEnabled; // @synthesize ligerEnabled=_ligerEnabled;
- (void).cxx_destruct;
- (void)setLigerDebugReporter:(id)arg1;
- (id)initDefaultConfigWithProxyUserAgentFormattingBlock:(CDUnknownBlockType)arg1 sandboxProvider:(CDUnknownBlockType)arg2;
- (id)initDefaultConfigWithProxyUserAgentFormattingBlock:(CDUnknownBlockType)arg1 sandboxProvider:(CDUnknownBlockType)arg2 enablePACFileMDM:(_Bool)arg3;
- (id)initConfigWithLigerEnabled:(_Bool)arg1 dnsCacheEnabled:(_Bool)arg2 requestProcessLogEnabled:(_Bool)arg3 networkInfoFilterEnabled:(_Bool)arg4 dnsRequestsOutstanding:(int)arg5 persistentSSLCacheEnabled:(_Bool)arg6 persistentSSLCacheFilename:(id)arg7 persistentSSLCacheCapacity:(int)arg8 persistentSSLCacheSyncInterval:(int)arg9 crossDomainSSLCacheEnabled:(_Bool)arg10 httpSessionManagerMaxIdleHTTPSessions:(long long)arg11 httpSessionManagerMaxIdleSPDYSessions:(long long)arg12 httpSessionManagerOriginLimitEnabled:(_Bool)arg13 httpSessionManagerOriginMaxRetries:(long long)arg14 happyEyeballsConnectionDelayMs:(int)arg15 ligerNetworkStatusMonitor:(id)arg16 requestObservers:(id)arg17 http2PriLevels:(int)arg18 http2PriReqCallPaths:(id)arg19 http2PriWeights:(id)arg20 radioMonitorEnabled:(_Bool)arg21 altSvcEnabled:(_Bool)arg22 flowControlEnabled:(_Bool)arg23 flowControlWindowSize:(long long)arg24 proxyUserAgentFormattingBlock:(CDUnknownBlockType)arg25 connectionMergeHostMapStr:(id)arg26 sandboxProvider:(CDUnknownBlockType)arg27 preConnectList:(id)arg28 enableHandlerAbortTxnOnBadStatus:(_Bool)arg29 useHTTP2ForStatic:(_Bool)arg30 evbLoggingSamplingFreq:(int)arg31 analyticsLogger:(id)arg32 codecHeadroomOptimization:(_Bool)arg33 backgroundDNSSampleRate:(double)arg34 enablePACFile:(_Bool)arg35 pacFileCheckURL:(id)arg36 fizzEnabled:(_Bool)arg37 fizzPersistentCacheEnabled:(_Bool)arg38 fizzEarlyDataEnabled:(_Bool)arg39 dnscryptEnabled:(_Bool)arg40 posixDualStackEnabled:(_Bool)arg41 dnsRetries:(int)arg42 dnsPreemptRetryMs:(int)arg43 dnscryptAttempts:(int)arg44 systemResolverAttempts:(int)arg45 happyEyeballsDrivenDns:(_Bool)arg46 supportH2PubSub:(_Bool)arg47 h2PubSubHostname:(id)arg48 quicFizzEarlyDataEnabled:(_Bool)arg49 quicMaxRecvPacketSize:(int)arg50 quicConnectUDP:(_Bool)arg51 quicMaxRTOs:(int)arg52 quicTurnoffPMTUD:(_Bool)arg53 quicEnableSocketErrMsgCallback:(_Bool)arg54 quicTraceLoggingSalt:(long long)arg55 quicTraceLoggingSampleWeight:(unsigned int)arg56 quicConnFlowControlWindow:(unsigned int)arg57 quicStreamFlowControlWindow:(unsigned int)arg58 quicTcpRaceDelayMilliseconds:(unsigned int)arg59 quicMaxCwndInMss:(unsigned int)arg60 persistentAltSvcCache:(_Bool)arg61 quicPacingEnabled:(_Bool)arg62 quicPacingEnabledForRecovery:(_Bool)arg63 idleTimeoutForUsedQuicSessionInMS:(unsigned int)arg64 idleTimeoutForUnusedQuicSessionInMS:(unsigned int)arg65 enableQuicVideoCdn:(_Bool)arg66 persistentCachesOnExecutor:(_Bool)arg67 enablePreconnectWithQuic:(_Bool)arg68 disableTcpPreconnectWithQuic:(_Bool)arg69 attemptEarlyDataInQuicPreconnect:(_Bool)arg70 quicWriteConnDataPacketsLimit:(unsigned int)arg71 continueOnNetworkUnreachable:(_Bool)arg72 enableNetworkInsightsObserver:(_Bool)arg73 enableLigerWorkerThread:(_Bool)arg74 inlinePersistenceLoading:(_Bool)arg75 enableHTTP3:(_Bool)arg76 useNSURLSessionForNonFizzHosts:(_Bool)arg77 useDNSExecutorForHTTPClient:(_Bool)arg78;

@end

